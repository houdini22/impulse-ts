{"version":3,"file":"impulse-ts.dev.js","mappings":"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","sources":["webpack://impulse-ts/./src/typescript/Layer/AbstractLayer.ts","webpack://impulse-ts/./src/typescript/Layer/AbstractLayer1D.ts","webpack://impulse-ts/./src/typescript/Layer/AbstractLayer3D.ts","webpack://impulse-ts/./src/typescript/Layer/Backpropagation/AbstractBackpropagation.ts","webpack://impulse-ts/./src/typescript/Layer/Backpropagation/Backpropagation1Dto1D.ts","webpack://impulse-ts/./src/typescript/Layer/Backpropagation/Backpropagation3Dto1D.ts","webpack://impulse-ts/./src/typescript/Layer/Backpropagation/BackpropagationFactory.ts","webpack://impulse-ts/./src/typescript/Layer/Backpropagation/BackpropagationToConv.ts","webpack://impulse-ts/./src/typescript/Layer/Backpropagation/BackpropagationToMaxPool.ts","webpack://impulse-ts/./src/typescript/Layer/Conv.ts","webpack://impulse-ts/./src/typescript/Layer/FullyConnected.ts","webpack://impulse-ts/./src/typescript/Layer/LSTM.ts","webpack://impulse-ts/./src/typescript/Layer/Logistic.ts","webpack://impulse-ts/./src/typescript/Layer/MaxPool.ts","webpack://impulse-ts/./src/typescript/Layer/Purelin.ts","webpack://impulse-ts/./src/typescript/Layer/Recurrent.ts","webpack://impulse-ts/./src/typescript/Layer/Relu.ts","webpack://impulse-ts/./src/typescript/Layer/Softmax.ts","webpack://impulse-ts/./src/typescript/Layer/Softplus.ts","webpack://impulse-ts/./src/typescript/Layer/Tanh.ts","webpack://impulse-ts/./src/typescript/Layer/index.ts","webpack://impulse-ts/./src/typescript/Network/Network.ts","webpack://impulse-ts/./src/typescript/Network/NetworkLSTM.ts","webpack://impulse-ts/./src/typescript/Network/NetworkRNN.ts","webpack://impulse-ts/./src/typescript/Network/index.ts","webpack://impulse-ts/./src/typescript/NetworkBuilder/AbstractNetworkBuilder.ts","webpack://impulse-ts/./src/typescript/NetworkBuilder/NetworkBuilder1D.ts","webpack://impulse-ts/./src/typescript/NetworkBuilder/NetworkBuilder3D.ts","webpack://impulse-ts/./src/typescript/NetworkBuilder/index.ts","webpack://impulse-ts/./src/typescript/Trainer/AbstractTrainer.ts","webpack://impulse-ts/./src/typescript/Trainer/MiniBatchTrainer.ts","webpack://impulse-ts/./src/typescript/Trainer/Optimizer/AbstractOptimizer.ts","webpack://impulse-ts/./src/typescript/Trainer/Optimizer/OptimizerAdagrad.ts","webpack://impulse-ts/./src/typescript/Trainer/Optimizer/OptimizerAdam.ts","webpack://impulse-ts/./src/typescript/Trainer/Optimizer/OptimizerGradientDescent.ts","webpack://impulse-ts/./src/typescript/Trainer/Optimizer/OptimizerMomentum.ts","webpack://impulse-ts/./src/typescript/Trainer/Optimizer/OptimizerRMSProp.ts","webpack://impulse-ts/./src/typescript/Trainer/Optimizer/index.ts","webpack://impulse-ts/./src/typescript/Trainer/RNNTrainer.ts","webpack://impulse-ts/./src/typescript/Trainer/Trainer.ts","webpack://impulse-ts/./src/typescript/Trainer/index.ts","webpack://impulse-ts/./src/typescript/types.ts","webpack://impulse-ts/./node_modules/impulse-math-ts/dist/impulse-math-ts.js","webpack://impulse-ts/external node-commonjs \"fs\"","webpack://impulse-ts/webpack/bootstrap","webpack://impulse-ts/webpack/runtime/compat get default export","webpack://impulse-ts/webpack/runtime/define property getters","webpack://impulse-ts/webpack/runtime/hasOwnProperty shorthand","webpack://impulse-ts/webpack/runtime/make namespace object","webpack://impulse-ts/./src/typescript/main.ts"],"sourcesContent":["import { Matrix } from \"impulse-math-ts\";\nimport { Dimension, Layers } from \"../types\";\nimport { AbstractBackPropagation } from \"./Backpropagation/AbstractBackpropagation\";\n\nabstract class AbstractLayer {\n  protected width = 0;\n  protected height = 0;\n  protected depth = 0;\n  protected previousLayer: Layers | null = null;\n  protected backPropagation: AbstractBackPropagation | null = null;\n\n  constructor() {}\n\n  setBackPropagation(backPropagation: AbstractBackPropagation): Layers {\n    this.backPropagation = backPropagation;\n    return this;\n  }\n\n  getBackPropagation(): AbstractBackPropagation | null {\n    return this.backPropagation;\n  }\n\n  setWidth(value: number): Layers {\n    this.width = value;\n    return this;\n  }\n\n  getWidth(): number {\n    return this.width;\n  }\n\n  setHeight(value: number): Layers {\n    this.height = value;\n    return this;\n  }\n\n  getHeight(): number {\n    return this.height;\n  }\n\n  setDepth(value: number): Layers {\n    this.depth = value;\n    return this;\n  }\n\n  getDepth(): number {\n    return this.depth;\n  }\n\n  abstract getOutputWidth(): number;\n\n  abstract getOutputHeight(): number;\n\n  abstract getOutputDepth(): number;\n\n  abstract configure(): void;\n\n  abstract is1D(): boolean;\n\n  abstract is3D(): boolean;\n\n  transition(previousLayer: Layers): Layers {\n    this.previousLayer = previousLayer;\n    return this;\n  }\n\n  abstract getSize(): Dimension | number;\n\n  abstract activation(value: Matrix): Matrix;\n\n  abstract getType(): string;\n\n  abstract derivative(delta: Matrix): Matrix;\n\n  abstract penalty(): number;\n}\n\nexport { AbstractLayer };\n","import { AbstractLayer } from \"./AbstractLayer\";\nimport { Layers } from \"../types\";\nimport { Matrix } from \"impulse-math-ts\";\n\nabstract class AbstractLayer1D extends AbstractLayer {\n  protected depth = 1;\n  public W: Matrix;\n  public b: Matrix;\n  public A: Matrix;\n  public Z: Matrix;\n  public gW: Matrix;\n  public gb: Matrix;\n  public vW: Matrix;\n  public sW: Matrix;\n  public vb: Matrix;\n  public sb: Matrix;\n  public dW: Matrix;\n  public db: Matrix;\n  public dZ: Matrix;\n\n  constructor() {\n    super();\n    this.W = new Matrix();\n    this.b = new Matrix();\n    this.A = new Matrix();\n    this.Z = new Matrix();\n    this.gW = new Matrix();\n    this.gb = new Matrix();\n    this.vW = new Matrix();\n    this.vb = new Matrix();\n    this.sW = new Matrix();\n    this.sb = new Matrix();\n    this.dW = new Matrix();\n    this.db = new Matrix();\n  }\n\n  configure(): void {\n    this.W.resize(this.getHeight(), this.getWidth());\n    this.W = this.W.setRandom(this.previousLayer ? (this.previousLayer.getHeight() as number) : this.getHeight());\n\n    this.b.resize(this.getHeight(), 1);\n    this.b = this.b.setRandom(this.previousLayer ? (this.previousLayer.getHeight() as number) : this.getHeight());\n\n    this.gW.resize(this.getHeight(), this.getWidth());\n    this.gW = this.gW.setZeros();\n\n    this.gb.resize(this.getHeight(), 1);\n    this.gb = this.gb.setZeros();\n\n    this.sW.resize(this.getHeight(), this.getWidth());\n    this.sW = this.sW.setZeros();\n\n    this.sb.resize(this.getHeight(), 1);\n    this.sb = this.sb.setZeros();\n\n    this.vW.resize(this.getHeight(), this.getWidth());\n    this.vW = this.vW.setZeros();\n\n    this.vb.resize(this.getHeight(), 1);\n    this.vb = this.vb.setZeros();\n\n    this.dW.resize(this.getHeight(), this.getWidth());\n    this.dW = this.dW.setZeros();\n\n    this.db.resize(this.getHeight(), 1);\n    this.db = this.db.setZeros();\n  }\n\n  forward(input: Matrix): Matrix {\n    this.Z = this.W.dot(input).add(this.b.replicate(1, input.cols));\n    this.A = this.activation(this.Z);\n    return this.A;\n  }\n\n  is1D(): boolean {\n    return true;\n  }\n\n  is3D(): boolean {\n    return false;\n  }\n\n  transition(previousLayer: Layers): AbstractLayer1D {\n    if (previousLayer.is1D()) {\n      this.setWidth(previousLayer.getSize() as number);\n    } else if (previousLayer.is3D()) {\n      this.setWidth(previousLayer.getOutputWidth() * previousLayer.getOutputHeight() * previousLayer.getOutputDepth());\n    }\n\n    super.transition(previousLayer);\n\n    return this;\n  }\n\n  setSize(value: number): AbstractLayer1D {\n    this.setHeight(value as number);\n\n    return this;\n  }\n\n  getSize(): number {\n    return this.height;\n  }\n\n  getOutputWidth(): number {\n    return this.width;\n  }\n\n  getOutputHeight(): number {\n    return this.height;\n  }\n\n  getOutputDepth(): number {\n    return 1;\n  }\n\n  penalty(): number {\n    return this.W.pow(2).sum();\n  }\n}\n\nexport { AbstractLayer1D };\n","import { AbstractLayer } from \"./AbstractLayer\";\nimport { Dimension, Layers } from \"../types\";\nimport { Matrix } from \"impulse-math-ts\";\n\nabstract class AbstractLayer3D extends AbstractLayer {\n  public W: Matrix;\n  public b: Matrix;\n  public A: Matrix;\n  public Z: Matrix;\n  public gW: Matrix;\n  public gb: Matrix;\n  public vW: Matrix;\n  public sW: Matrix;\n  public vb: Matrix;\n  public sb: Matrix;\n  public dW: Matrix;\n  public db: Matrix;\n  public dZ: Matrix;\n\n  constructor() {\n    super();\n    this.W = new Matrix();\n    this.b = new Matrix();\n    this.A = new Matrix();\n    this.Z = new Matrix();\n    this.gW = new Matrix();\n    this.gb = new Matrix();\n    this.vW = new Matrix();\n    this.vb = new Matrix();\n    this.sW = new Matrix();\n    this.sb = new Matrix();\n    this.dW = new Matrix();\n    this.db = new Matrix();\n  }\n\n  configure(): void {\n    // do nothing\n  }\n\n  is1D(): boolean {\n    return false;\n  }\n\n  is3D(): boolean {\n    return true;\n  }\n\n  transition(previousLayer: Layers): Layers {\n    if (previousLayer.is3D()) {\n      this.setSize([previousLayer.getOutputWidth(), previousLayer.getOutputHeight(), previousLayer.getOutputDepth()]);\n    }\n\n    super.transition(previousLayer);\n\n    return this;\n  }\n\n  setSize(dimension: Dimension | number): Layers {\n    this.setWidth(dimension[0]);\n    this.setHeight(dimension[1]);\n    this.setDepth(dimension[2]);\n\n    return this;\n  }\n\n  getSize(): Dimension {\n    return [this.getWidth(), this.getHeight(), this.getDepth()];\n  }\n\n  abstract getPadding(): number;\n\n  abstract getStride(): number;\n\n  abstract getFilterSize(): number;\n\n  abstract forward(input: Matrix): Matrix;\n\n  abstract derivative(delta: Matrix): Matrix;\n\n  penalty(): number {\n    return this.W.pow(2).sum();\n  }\n}\n\nexport { AbstractLayer3D };\n","import { Layers } from \"../../types\";\nimport { Matrix } from \"../../Math/Matrix\";\n\nexport abstract class AbstractBackPropagation {\n  protected layer: Layers | null = null;\n  protected previousLayer: Layers | null = null;\n\n  constructor(layer: Layers | null, previousLayer: Layers) {\n    this.layer = layer;\n    this.previousLayer = previousLayer;\n  }\n\n  abstract propagate(\n    input: Matrix,\n    numberOfExamples: number,\n    regularization: number,\n    layer: Layers,\n    sigma: Matrix\n  ): Matrix;\n}\n","import { AbstractBackPropagation } from \"./AbstractBackpropagation\";\nimport { Matrix } from \"impulse-math-ts\";\nimport { Layers } from \"../../types\";\n\nexport class Backpropagation1Dto1D extends AbstractBackPropagation {\n  propagate(input: Matrix, numberOfExamples: number, regularization: number, layer: Layers, sigma: Matrix): Matrix {\n    const previousActivations = this.previousLayer !== null ? this.previousLayer.A : input;\n\n    const delta = sigma.dot(previousActivations.transpose());\n    this.layer.gW = delta.divide(numberOfExamples).add(layer.W.multiply(regularization / numberOfExamples));\n    this.layer.gb = sigma.rowwiseSum().transpose().divide(numberOfExamples);\n\n    if (this.previousLayer !== null) {\n      // @ts-ignore\n      const result = this.layer.W.transpose().dot(sigma);\n      if (result.rows !== previousActivations.rows || result.cols !== previousActivations.cols) {\n        throw new Error(\n          `Dimension error 1. (${result.rows}, ${result.cols}) | (${previousActivations.rows}, ${previousActivations.cols})`\n        );\n      }\n      if (this.layer.gW.rows !== this.layer.W.rows || this.layer.gW.cols !== this.layer.W.cols) {\n        throw new Error(\n          `Dimension error 2. (${this.layer.gW.rows}, ${this.layer.gW.cols}) | (${this.layer.W.rows}, ${this.layer.W.cols})`\n        );\n      }\n      if (this.layer.gb.rows !== this.layer.b.rows || this.layer.gb.cols !== this.layer.b.cols) {\n        throw new Error(\n          `Dimension error 3. (${this.layer.gb.rows}, ${this.layer.gb.cols}) | (${this.layer.b.rows}, ${this.layer.b.cols})`\n        );\n      }\n      return result;\n    }\n    return new Matrix();\n  }\n}\n","import { AbstractBackPropagation } from \"./AbstractBackpropagation\";\nimport { Matrix } from \"../../Math/Matrix\";\nimport { Layers } from \"../../types\";\n\nexport class Backpropagation3Dto1D extends AbstractBackPropagation {\n  propagate(input: Matrix, numberOfExamples: number, regularization: number, layer: Layers, sigma: Matrix): Matrix {\n    return sigma;\n  }\n}\n","import { Layers, LayerType } from \"../../types\";\nimport { Backpropagation1Dto1D } from \"./Backpropagation1Dto1D\";\nimport { Backpropagation3Dto1D } from \"./Backpropagation3Dto1D\";\nimport { BackpropagationToMaxPool } from \"./BackpropagationToMaxPool\";\nimport { BackpropagationToConv } from \"./BackpropagationToConv\";\nimport { AbstractBackPropagation } from \"./AbstractBackpropagation\";\n\nexport class BackpropagationFactory {\n  static create(previousLayer: Layers, layer: Layers): AbstractBackPropagation | null {\n    if (previousLayer == null) {\n      if (layer.is1D()) {\n        return new Backpropagation1Dto1D(layer, previousLayer);\n      } else if (layer.getType() == LayerType.conv) {\n        return new Backpropagation3Dto1D(layer, previousLayer);\n      }\n    } else {\n      if (previousLayer.getType() == LayerType.maxpool) {\n        return new BackpropagationToMaxPool(layer, previousLayer);\n      } else if (previousLayer.getType() == LayerType.conv) {\n        return new BackpropagationToConv(layer, previousLayer);\n      } else if (previousLayer.is1D() || previousLayer.getType() == LayerType.fullyconnected) {\n        return new Backpropagation1Dto1D(layer, previousLayer);\n      }\n    }\n    return null;\n  }\n}\n","import { AbstractBackPropagation } from \"./AbstractBackpropagation\";\nimport { Matrix } from \"impulse-math-ts\";\nimport { Layers, Layers3D } from \"../../types\";\nimport { getComputation } from \"impulse-math-ts\";\n\nexport class BackpropagationToConv extends AbstractBackPropagation {\n  protected previousLayer: Layers3D | null = null;\n\n  propagate(input: Matrix, numberOfExamples: number, regularization: number, layer: Layers, sigma: Matrix): Matrix {\n    const previousLayer = this.previousLayer;\n\n    if (previousLayer) {\n      const padding = previousLayer.getPadding();\n      const stride = previousLayer.getStride();\n      const filterSize = previousLayer.getFilterSize();\n      const outputWidth = previousLayer.getOutputWidth();\n      const outputHeight = previousLayer.getOutputHeight();\n      const outputDepth = previousLayer.getOutputDepth();\n      const inputWidth = previousLayer.getWidth();\n      const inputHeight = previousLayer.getHeight();\n      const inputDepth = previousLayer.getDepth();\n\n      const tmpResult = getComputation().execute(\n        \"fillZeros\",\n        new Matrix((inputWidth + 2 * padding) * (inputHeight + 2 * padding) * inputDepth, numberOfExamples)\n      ) as Matrix;\n\n      const result = new Matrix(inputWidth * inputHeight * inputDepth, numberOfExamples);\n\n      previousLayer.gW = getComputation().execute(\"fillZeros\", previousLayer.gW) as Matrix;\n      previousLayer.gb = getComputation().execute(\"fillZeros\", previousLayer.gb) as Matrix;\n\n      for (let m = 0; m < numberOfExamples; m++) {\n        for (let c = 0; c < outputDepth; c++) {\n          for (let h = 0; h < outputHeight; h++) {\n            for (let w = 0; w < outputWidth; w++) {\n              const vertStart = stride * h;\n              const vertEnd = vertStart + filterSize;\n              const horizStart = stride * w;\n              const horizEnd = horizStart + filterSize;\n\n              // filter loop\n              for (let d = 0; d < inputDepth; d++) {\n                for (\n                  let y = 0, vertical = vertStart, verticalPad = -padding;\n                  y < filterSize;\n                  y++, vertical++, verticalPad++\n                ) {\n                  for (\n                    let x = 0, horizontal = horizStart, horizontalPad = -padding;\n                    x < filterSize;\n                    x++, horizontal++, horizontalPad++\n                  ) {\n                    if (previousLayer.W.data && tmpResult.data && sigma.data) {\n                      tmpResult.data[\n                        d * (inputWidth + 2 * padding) * (inputHeight + 2 * padding) +\n                          vertical * (inputWidth + 2 * padding) +\n                          horizontal\n                      ][m] +=\n                        previousLayer.W.data[c][d * filterSize * filterSize + y * filterSize + x] *\n                        sigma.data[c * outputWidth * outputHeight + h * outputWidth + w][m];\n                    }\n\n                    let z = 0;\n                    if (padding == 0) {\n                      if (previousLayer.Z.data) {\n                        z = previousLayer.Z.data[d * inputWidth * inputHeight + vertical * inputWidth + horizontal][m];\n                      }\n                    } else {\n                      if (\n                        verticalPad >= 0 &&\n                        horizontalPad >= 0 &&\n                        verticalPad < inputHeight &&\n                        horizontalPad < inputWidth\n                      ) {\n                        if (previousLayer.Z.data) {\n                          z =\n                            previousLayer.Z.data[\n                              d * inputWidth * inputHeight + verticalPad * inputWidth + horizontalPad\n                            ][m];\n                        }\n                      }\n                    }\n\n                    if (previousLayer.gW.data && sigma.data) {\n                      previousLayer.gW.data[c][d * filterSize * filterSize + y * filterSize + x] +=\n                        (z * sigma.data[c * (outputWidth * outputHeight) + h * outputWidth + w][m]) / numberOfExamples;\n                    }\n                  }\n                }\n              }\n\n              if (previousLayer.gb.data && sigma.data) {\n                previousLayer.gb.data[c][0] +=\n                  sigma.data[c * (outputWidth * outputHeight) + h * outputWidth + w][m] / numberOfExamples;\n              }\n            }\n          }\n        }\n\n        if (padding > 0) {\n          // unpad\n          for (let c = 0; c < inputDepth; c++) {\n            for (let h = -padding, y = 0; h < inputHeight + padding; h++, y++) {\n              for (let w = -padding, x = 0; w < inputWidth + padding; w++, x++) {\n                if (w >= 0 && h >= 0 && w < inputWidth && h < inputHeight && result.data && tmpResult.data) {\n                  result.data[c * inputWidth * inputHeight + h * inputWidth + w][m] =\n                    tmpResult.data[\n                      c * (inputWidth + 2 * padding) * (inputHeight + 2 * padding) + y * (inputWidth + 2 * padding) + x\n                    ][m];\n                }\n              }\n            }\n          }\n        }\n      }\n\n      if (padding > 0) {\n        return result;\n      }\n\n      return tmpResult;\n    }\n  }\n}\n","import { AbstractBackPropagation } from \"./AbstractBackpropagation\";\nimport { Matrix } from \"impulse-math-ts\";\nimport { Layers, Layers3D } from \"../../types\";\nimport { getComputation } from \"impulse-math-ts\";\n\nexport class BackpropagationToMaxPool extends AbstractBackPropagation {\n  protected previousLayer: Layers3D | null = null;\n\n  propagate(input: Matrix, numberOfExamples: number, regularization: number, layer: Layers, sigma: Matrix): Matrix {\n    const prevLayer = this.previousLayer;\n    if (prevLayer) {\n      const result = getComputation().execute(\"fillZeros\", new Matrix(prevLayer.Z.rows, prevLayer.Z.cols)) as Matrix;\n\n      const filterSize = prevLayer.getFilterSize();\n      const stride = prevLayer.getStride();\n      const inputWidth = prevLayer.getWidth();\n      const inputHeight = prevLayer.getHeight();\n      const inputDepth = prevLayer.getDepth();\n      const outputWidth = prevLayer.getOutputWidth();\n      const outputHeight = prevLayer.getOutputHeight();\n      const outputDepth = prevLayer.getOutputDepth();\n\n      for (let m = 0; m < numberOfExamples; m++) {\n        for (let c = 0; c < outputDepth; c++) {\n          for (let h = 0; h < outputHeight; h++) {\n            for (let w = 0; w < outputWidth; w++) {\n              const vertStart = stride * h;\n              const vertEnd = vertStart + filterSize;\n              const horizStart = stride * w;\n              const horizEnd = horizStart + filterSize;\n\n              let _max = -Infinity;\n              const inputOffset = inputHeight * inputWidth * c;\n              const outputOffset = outputHeight * outputWidth * c;\n              let maxX = 0;\n              let maxY = 0;\n\n              for (let y = 0, vStart = vertStart; y < filterSize; y++, vStart++) {\n                for (let x = 0, hStart = horizStart; x < filterSize; x++, hStart++) {\n                  if (prevLayer.Z.data && _max < prevLayer.Z.data[inputOffset + vStart * inputWidth + hStart][m]) {\n                    _max = prevLayer.Z.data[inputOffset + vStart * inputWidth + hStart][m];\n                    maxX = hStart;\n                    maxY = vStart;\n                  }\n                }\n              }\n\n              if (result.data && sigma.data) {\n                result.data[inputOffset + maxY * inputWidth + maxX][m] =\n                  sigma.data[outputOffset + h * outputWidth + w][m];\n              }\n            }\n          }\n        }\n      }\n\n      return result;\n    }\n\n    return new Matrix();\n  }\n}\n","import { Matrix, im2col, getComputation } from \"impulse-math-ts\";\nimport { LayerType } from \"../types\";\nimport { AbstractLayer3D } from \"./AbstractLayer3D\";\n\nexport class ConvLayer extends AbstractLayer3D {\n  protected numFilters = 32;\n  protected filterSize = 4;\n  protected padding = 1;\n  protected stride = 1;\n\n  configure(): void {\n    this.W.resize(this.numFilters, this.filterSize * this.filterSize * this.depth);\n    this.W = this.W.setRandom(this.getOutputWidth() * this.getOutputHeight() * this.getOutputDepth());\n\n    this.b.resize(this.numFilters, 1);\n    this.b = this.b.setRandom(this.getOutputWidth() * this.getOutputHeight() * this.getOutputDepth());\n\n    this.gW.resize(this.numFilters, this.filterSize * this.filterSize * this.depth);\n    this.gW = this.gW.setZeros();\n\n    this.gb.resize(this.numFilters, 1);\n    this.gb = this.gb.setZeros();\n\n    this.sW.resize(this.numFilters, this.filterSize * this.filterSize * this.depth);\n    this.sW = this.sW.setZeros();\n\n    this.sb.resize(this.numFilters, 1);\n    this.sb = this.sb.setZeros();\n\n    this.vW.resize(this.numFilters, this.filterSize * this.filterSize * this.depth);\n    this.vW = this.vW.setZeros();\n\n    this.vb.resize(this.numFilters, 1);\n    this.vb = this.vb.setZeros();\n  }\n\n  getOutputHeight(): number {\n    return (this.width - this.filterSize + 2 * this.padding) / this.stride + 1;\n  }\n\n  getOutputWidth(): number {\n    return (this.height - this.filterSize + 2 * this.padding) / this.stride + 1;\n  }\n\n  getOutputDepth(): number {\n    return this.numFilters;\n  }\n\n  setFilterSize(size: number): ConvLayer {\n    this.filterSize = size;\n    return this;\n  }\n\n  getFilterSize(): number {\n    return this.filterSize;\n  }\n\n  setNumFilters(numFilters: number): ConvLayer {\n    this.numFilters = numFilters;\n    return this;\n  }\n\n  getNumFilters(): number {\n    return this.numFilters;\n  }\n\n  setPadding(padding: number): ConvLayer {\n    this.padding = padding;\n    return this;\n  }\n\n  getPadding(): number {\n    return this.padding;\n  }\n\n  setStride(stride: number): ConvLayer {\n    this.stride = stride;\n    return this;\n  }\n\n  getStride(): number {\n    return this.stride;\n  }\n\n  forward(input: Matrix): Matrix {\n    const result = new Matrix(\n      this.getOutputWidth() * this.getOutputHeight() * this.getOutputDepth(),\n      input.cols\n    ).setZeros();\n\n    for (let i = 0; i < input.cols; i += 1) {\n      const conv = im2col(\n        input.col(i),\n        this.depth,\n        this.height,\n        this.width,\n        this.filterSize,\n        this.filterSize,\n        this.padding,\n        this.padding,\n        this.stride,\n        this.stride\n      );\n\n      const tmp = this.W.dot(conv.transpose()).add(this.b.replicate(1, conv.rows));\n      result.setCol(i, tmp.rollToColMatrix());\n    }\n\n    this.Z = result;\n    this.A = this.activation(this.Z);\n\n    return this.A;\n  }\n\n  activation(m: Matrix): Matrix {\n    return m.setMin(0);\n  }\n\n  getType(): LayerType {\n    return LayerType.conv;\n  }\n\n  derivative(delta: Matrix) {\n    return getComputation().execute(\"reluBackpropagation\", delta, this.A) as Matrix;\n  }\n}\n","import { Dimension, LayerType } from \"../types\";\nimport { ConvLayer } from \"./Conv\";\n\nclass FullyConnectedLayer extends ConvLayer {\n  transition(previousLayer: FullyConnectedLayer): FullyConnectedLayer {\n    if (previousLayer.is3D()) {\n      if (previousLayer.getType() == LayerType.maxpool) {\n        this.filterSize = previousLayer.getOutputWidth();\n        this.padding = 0;\n        this.stride = 1;\n        this.width = previousLayer.getOutputWidth();\n        this.height = previousLayer.getOutputHeight();\n        this.depth = previousLayer.getOutputDepth();\n        this.numFilters =\n          previousLayer.getOutputWidth() * previousLayer.getOutputHeight() * previousLayer.getOutputDepth();\n      } else {\n        throw new Error(\"Invalid usage. Cannot fully connect with previous non maxpool Layer.\");\n      }\n    } else {\n      throw new Error(\"Invalid usage. Cannot fully connect with previous 1D Layer.\");\n    }\n\n    return this;\n  }\n\n  setSize(dimension: Dimension): FullyConnectedLayer {\n    return this;\n  }\n\n  setFilterSize(filterSize: number): FullyConnectedLayer {\n    return this;\n  }\n\n  setStride(stride: number): FullyConnectedLayer {\n    return this;\n  }\n\n  setPadding(padding: number): FullyConnectedLayer {\n    return this;\n  }\n\n  setWidth(value: number): FullyConnectedLayer {\n    return this;\n  }\n\n  setHeight(value: number): FullyConnectedLayer {\n    return this;\n  }\n\n  setDepth(value: number): FullyConnectedLayer {\n    return this;\n  }\n\n  setNumFilters(value: number): FullyConnectedLayer {\n    return this;\n  }\n}\n\nexport { FullyConnectedLayer };\n","import { Matrix } from \"impulse-math-ts\";\nimport { Dimension, LayerType } from \"../types\";\nimport { AbstractLayer } from \"./AbstractLayer\";\n\nexport class LSTMLayer extends AbstractLayer {\n  public Wf: Matrix | null = null;\n  public bf: Matrix | null = null;\n  public Wi: Matrix | null = null;\n  public bi: Matrix | null = null;\n  public Wc: Matrix | null = null;\n  public bc: Matrix | null = null;\n  public Wo: Matrix | null = null;\n  public bo: Matrix | null = null;\n  public Wy: Matrix | null = null;\n  public by: Matrix | null = null;\n  public dxt: Matrix | null = null;\n  public dWf: Matrix | null = null;\n  public dWi: Matrix | null = null;\n  public dWc: Matrix | null = null;\n  public dWo: Matrix | null = null;\n  public dbf: Matrix | null = null;\n  public dbi: Matrix | null = null;\n  public dbc: Matrix | null = null;\n  public dbo: Matrix | null = null;\n\n  configure(): void {}\n\n  forward(input: Matrix, aPrev: Matrix, cPrev): Matrix[] {\n    const nx = input.rows;\n    const m = input.cols;\n    const ny = this.Wy.rows;\n    const na = this.Wy.cols;\n\n    const concat = new Matrix(nx + na, m);\n\n    const ft = this.Wf.dot(concat).add(this.bf).sigmoid();\n    const it = this.Wi.dot(concat).add(this.bi).sigmoid();\n    const cct = this.Wc.dot(concat).add(this.bc).tanh();\n    const cNext = ft.multiply(cPrev).add(it.multiply(cct));\n    const ot = this.Wo.dot(concat).add(this.bo).sigmoid();\n    const aNext = ot.multiply(cNext.tanh());\n\n    const ytPred = this.Wy.dot(aNext).add(this.by).softmax();\n    return [aNext, cPrev];\n  }\n\n  backward(daNext: Matrix, dcNext: Matrix): void {}\n\n  activation(m: Matrix): Matrix {\n    return m;\n  }\n\n  getType(): LayerType {\n    return LayerType.rnnlayer;\n  }\n\n  derivative(delta: Matrix): Matrix {\n    return delta;\n  }\n\n  is1D(): boolean {\n    return true;\n  }\n\n  is3D(): boolean {\n    return false;\n  }\n\n  setSize(value: Dimension): LSTMLayer {\n    this.setWidth(value[0]);\n    this.setHeight(value[1]);\n    this.setDepth(value[2]);\n\n    return this;\n  }\n\n  getSize(): number {\n    return this.height;\n  }\n\n  getOutputWidth(): number {\n    return this.width;\n  }\n\n  getOutputHeight(): number {\n    return this.height;\n  }\n\n  getOutputDepth(): number {\n    return this.depth;\n  }\n\n  penalty(): number {\n    return 0;\n  }\n}\n","import { Matrix } from \"impulse-math-ts\";\nimport { LayerType } from \"../types\";\nimport { AbstractLayer1D } from \"./AbstractLayer1D\";\n\nclass LogisticLayer extends AbstractLayer1D {\n  activation(m: Matrix): Matrix {\n    return m.multiply(-1).exp().add(1).fraction(1);\n  }\n\n  getType(): LayerType {\n    return LayerType.logistic;\n  }\n\n  derivative(delta: Matrix): Matrix {\n    return delta.multiply(this.activation(delta).multiply(this.activation(delta.minusOne())));\n  }\n}\n\nexport { LogisticLayer };\n","import { Matrix } from \"impulse-math-ts\";\nimport { maxpool } from \"impulse-math-ts\";\nimport { LayerType } from \"../types\";\nimport { AbstractLayer3D } from \"./AbstractLayer3D\";\n\nclass MaxPoolLayer extends AbstractLayer3D {\n  filterSize = 0;\n  stride = 0;\n\n  configure(): void {\n    // do nothing\n  }\n\n  getOutputHeight(): number {\n    return (this.height - this.filterSize) / this.stride + 1;\n  }\n\n  getOutputWidth(): number {\n    return (this.width - this.filterSize) / this.stride + 1;\n  }\n\n  getOutputDepth(): number {\n    return this.depth;\n  }\n\n  setFilterSize(size: number): MaxPoolLayer {\n    this.filterSize = size;\n    return this;\n  }\n\n  getFilterSize(): number {\n    return this.filterSize;\n  }\n\n  setStride(stride: number): MaxPoolLayer {\n    this.stride = stride;\n    return this;\n  }\n\n  getStride(): number {\n    return this.stride;\n  }\n\n  getPadding(): number {\n    return 0;\n  }\n\n  forward(input: Matrix): Matrix {\n    const result = new Matrix(this.getOutputWidth() * this.getOutputHeight() * this.getOutputDepth(), input.cols);\n\n    for (let i = 0; i < input.cols; i += 1) {\n      const pool = maxpool(\n        input.col(i),\n        this.depth,\n        this.height,\n        this.width,\n        this.filterSize,\n        this.filterSize,\n        this.stride,\n        this.stride\n      );\n\n      result.setCol(i, pool.rollToColMatrix());\n    }\n\n    this.Z = result;\n    this.A = this.activation(this.Z);\n\n    return this.A;\n  }\n\n  activation(m: Matrix): Matrix {\n    return m;\n  }\n\n  getType(): LayerType {\n    return LayerType.maxpool;\n  }\n\n  derivative(delta: Matrix): Matrix {\n    return delta;\n  }\n}\n\nexport { MaxPoolLayer };\n","import { Matrix } from \"impulse-math-ts\";\nimport { LayerType } from \"../types\";\nimport { AbstractLayer1D } from \"./AbstractLayer1D\";\n\nclass PurelinLayer extends AbstractLayer1D {\n  activation(m: Matrix): Matrix {\n    return m;\n  }\n\n  getType(): LayerType {\n    return LayerType.purelin;\n  }\n\n  derivative(delta: Matrix): Matrix {\n    return delta.setOnes();\n  }\n}\n\nexport { PurelinLayer };\n","import { Matrix } from \"impulse-math-ts\";\nimport { Dimension, LayerType } from \"../types\";\nimport { AbstractLayer } from \"./AbstractLayer\";\n\nexport interface GradientResult {\n  dWax: Matrix;\n  dWya: Matrix;\n  dWaa: Matrix;\n  db: Matrix;\n  dby: Matrix;\n  daNext: Matrix;\n}\n\nexport class RecurrentLayer extends AbstractLayer {\n  public Wax: Matrix | null = null;\n  public Waa: Matrix | null = null;\n  public Wya: Matrix | null = null;\n  public b: Matrix | null = null;\n  public by: Matrix | null = null;\n  public dWax: Matrix | null = null;\n  public dWaa: Matrix | null = null;\n  public dWya: Matrix | null = null;\n  public db: Matrix | null = null;\n  public dby: Matrix | null = null;\n  public Y: Matrix[] = [];\n  public A: Matrix[] = [];\n  public X: Matrix[] = [];\n  public aNext: Matrix | null = null;\n  public aPrev: Matrix | null = null;\n  public daNext: Matrix | null = null;\n\n  configure(): void {\n    this.Wax = new Matrix(this.getWidth(), this.getHeight());\n    this.Wax = this.Wax.setRandom(this.getWidth());\n\n    this.Waa = new Matrix(this.getWidth(), this.getWidth());\n    this.Waa = this.Waa.setRandom(this.getWidth());\n\n    this.Wya = new Matrix(this.getDepth(), this.getWidth());\n    this.Wya = this.Wya.setRandom(this.getDepth());\n\n    this.b = new Matrix(this.getWidth(), 1);\n    this.b = this.b.setRandom(this.getWidth());\n\n    this.by = new Matrix(this.getDepth(), 1);\n    this.by = this.by.setRandom(this.getDepth());\n\n    this.dWax = new Matrix(this.getWidth(), this.getHeight());\n    this.dWax = this.dWax.setZeros();\n\n    this.dWaa = new Matrix(this.getWidth(), this.getWidth());\n    this.dWaa = this.dWaa.setZeros();\n\n    this.dWya = new Matrix(this.getDepth(), this.getWidth());\n    this.dWya = this.dWya.setZeros();\n\n    this.db = new Matrix(this.getWidth(), 1);\n    this.db = this.db.setZeros();\n\n    this.dby = new Matrix(this.getDepth(), 1);\n    this.dby = this.dby.setZeros();\n\n    this.daNext = new Matrix(this.getWidth(), this.getWidth());\n    this.daNext = this.daNext.setZeros();\n  }\n\n  forward(x: Matrix, aPrev: Matrix): Matrix[] {\n    const aNext = this.Wax.dot(x)\n      .add(this.Waa.dot(aPrev).replicate(1, this.getWidth()))\n      .add(this.b.replicate(1, x.cols))\n      .tanh();\n    const y = this.Wya.dot(aNext).add(this.by.replicate(1, x.cols)).softmax();\n    this.A.push(aNext);\n    this.X.push(x);\n    this.Y.push(y);\n    this.aPrev = aPrev;\n    return [aNext, y];\n  }\n\n  backward(dy: Matrix, x: Matrix, a: Matrix, aPrev: Matrix): GradientResult {\n    const dTanh = a.pow(2).minusOne().multiply(dy);\n\n    const dWax = dTanh.dot(x.transpose());\n    const dWaa = dTanh.dot(aPrev.transpose());\n    const db = this.db; //.add(dtanh.colwiseSum().divide(dtanh.cols)).setMin(-5).setMax(5);\n    const dby = this.dby; //.replicate(1, this.getWidth()).add(dy).setMin(-5).setMax(5);\n    const dWya = this.dWya; //.add(dy.dot(a.transpose())).setMin(-5).setMax(5);\n    const daNext = this.Waa.transpose().dot(dTanh);\n\n    return {\n      dWax,\n      dWya,\n      dWaa,\n      db,\n      dby,\n      daNext,\n    };\n  }\n\n  activation(m: Matrix): Matrix {\n    return m;\n  }\n\n  getType(): LayerType {\n    return LayerType.rnnlayer;\n  }\n\n  derivative(delta: Matrix): Matrix {\n    return delta;\n  }\n\n  is1D(): boolean {\n    return true;\n  }\n\n  is3D(): boolean {\n    return false;\n  }\n\n  setSize(value: Dimension): RecurrentLayer {\n    this.setWidth(value[0]);\n    this.setHeight(value[1]);\n    this.setDepth(value[2]);\n\n    return this;\n  }\n\n  getSize(): number {\n    return this.height;\n  }\n\n  getOutputWidth(): number {\n    return this.width;\n  }\n\n  getOutputHeight(): number {\n    return this.height;\n  }\n\n  getOutputDepth(): number {\n    return this.depth;\n  }\n\n  penalty(): number {\n    return 0;\n  }\n\n  getWidth(): number {\n    return this.width;\n  }\n}\n","import { Matrix } from \"impulse-math-ts\";\nimport { LayerType } from \"../types\";\nimport { AbstractLayer1D } from \"./AbstractLayer1D\";\nimport { getComputation } from \"impulse-math-ts\";\n\nclass ReluLayer extends AbstractLayer1D {\n  activation(m: Matrix): Matrix {\n    return m.setMin(0.0);\n  }\n\n  getType(): LayerType {\n    return LayerType.relu;\n  }\n\n  derivative(delta: Matrix) {\n    return getComputation().execute(\"reluBackpropagation\", delta, this.A) as Matrix;\n  }\n}\n\nexport { ReluLayer };\n","import { Matrix } from \"impulse-math-ts\";\nimport { LayerType } from \"../types\";\nimport { AbstractLayer1D } from \"./AbstractLayer1D\";\n\nclass SoftmaxLayer extends AbstractLayer1D {\n  activation(m: Matrix): Matrix {\n    return m.softmax();\n  }\n\n  getType(): LayerType {\n    return LayerType.softmax;\n  }\n\n  derivative(delta: Matrix): Matrix {\n    return delta.multiply(-1).add(1).fraction(1);\n  }\n}\n\nexport { SoftmaxLayer };\n","import { Matrix } from \"impulse-math-ts\";\nimport { LayerType } from \"../types\";\nimport { AbstractLayer1D } from \"./AbstractLayer1D\";\n\nclass SoftplusLayer extends AbstractLayer1D {\n  activation(m: Matrix): Matrix {\n    return m.exp().add(1).log();\n  }\n\n  getType(): LayerType {\n    return LayerType.softplus;\n  }\n\n  derivative(delta: Matrix): Matrix {\n    return delta.multiply(-1).exp().add(1).fraction(1);\n  }\n}\n\nexport { SoftplusLayer };\n","import { Matrix } from \"impulse-math-ts\";\nimport { LayerType } from \"../types\";\nimport { AbstractLayer1D } from \"./AbstractLayer1D\";\n\nclass TanhLayer extends AbstractLayer1D {\n  activation(m: Matrix): Matrix {\n    return m.tanh();\n  }\n\n  getType(): LayerType {\n    return LayerType.tanh;\n  }\n\n  derivative(sigma: Matrix): Matrix {\n    return this.activation(sigma).pow(2).minusOne();\n  }\n}\n\nexport { TanhLayer };\n","import { AbstractLayer } from \"./AbstractLayer\";\nimport { SoftmaxLayer } from \"./Softmax\";\nimport { LogisticLayer } from \"./Logistic\";\nimport { TanhLayer } from \"./Tanh\";\nimport { ReluLayer } from \"./Relu\";\nimport { SoftplusLayer } from \"./Softplus\";\nimport { ConvLayer } from \"./Conv\";\nimport { FullyConnectedLayer } from \"./FullyConnected\";\nimport { MaxPoolLayer } from \"./MaxPool\";\nimport { RecurrentLayer } from \"./Recurrent\";\nimport { PurelinLayer } from \"./Purelin\";\nimport { LSTMLayer } from \"./LSTM\";\n\nexport {\n  AbstractLayer,\n  SoftmaxLayer,\n  LogisticLayer,\n  TanhLayer,\n  ReluLayer,\n  SoftplusLayer,\n  ConvLayer,\n  FullyConnectedLayer,\n  MaxPoolLayer,\n  RecurrentLayer,\n  PurelinLayer,\n  LSTMLayer,\n};\n","import { Dimension, Layers } from \"../types\";\nimport { Matrix } from \"impulse-math-ts\";\nimport * as fs from \"fs\";\n\nclass Network {\n  private readonly dimensions: Dimension | null = null;\n  private size = 0;\n  private layers: Layers[] = [];\n\n  constructor(dimensions: Dimension) {\n    this.dimensions = dimensions;\n  }\n\n  addLayer(layer: Layers): Network {\n    this.size++;\n    this.layers.push(layer);\n\n    return this;\n  }\n\n  getLayers(): Layers[] {\n    return this.layers;\n  }\n\n  forward(input: Matrix): Matrix {\n    let output = input;\n\n    this.layers.forEach((layer: Layers) => {\n      output = layer.forward(output);\n    });\n\n    return output;\n  }\n\n  backward(X: Matrix, Y: Matrix, regularization: number): void {\n    const m = X.cols;\n    const predictions = this.forward(X);\n    //let sigma = Y.divide(predictions).multiply(-1).subtract(Y.minusOne().divide(predictions.minusOne()));\n    let sigma = predictions.subtract(Y);\n\n    for (let layer = this.layers.length - 1; layer >= 0; layer -= 1) {\n      sigma = this.layers[layer]\n        .getBackPropagation()\n        .propagate(X, m, regularization, this.layers[layer], this.layers[layer].derivative(sigma));\n    }\n  }\n\n  save(path: string): Promise<string> {\n    const resultJSON = {\n      dimensions: this.dimensions,\n      layers: [],\n    };\n\n    this.layers.forEach((layer: Layers) => {\n      resultJSON.layers.push({\n        type: layer.getType(),\n        size: layer.getSize(),\n        weights: {\n          W: layer.W.data,\n          b: layer.b.data,\n        },\n      });\n    });\n\n    const result = JSON.stringify(resultJSON);\n\n    return new Promise((resolve, reject) => {\n      fs.writeFile(path, result, (err) => {\n        if (err) {\n          console.error(err);\n          reject();\n        }\n        resolve(result);\n      });\n    });\n  }\n}\n\nexport { Network };\nexport default Network;\n","import { Dimension, Layers, LayersLSTM } from \"../types\";\nimport { Matrix } from \"impulse-math-ts\";\n\nexport class NetworkLSTM {\n  private readonly dimensions: Dimension | null = null;\n  private size = 0;\n  private layers: LayersLSTM[] = [];\n\n  constructor(dimensions: Dimension) {\n    this.dimensions = dimensions;\n  }\n\n  addLayer(layer: LayersLSTM): NetworkLSTM {\n    this.size++;\n    this.layers.push(layer);\n\n    return this;\n  }\n\n  getLayers(): LayersLSTM[] {\n    return this.layers;\n  }\n\n  loss(vocabularySize: number, sequenceLength: number): number {\n    return -Math.log(1 / vocabularySize) * sequenceLength;\n  }\n\n  sample(charIndices: Object) {}\n\n  forward(X: Matrix[], a0: Matrix): Matrix[] {\n    const nX = X.length;\n    const m = X[0].rows;\n    const tX = X[0].cols;\n    const nY = this.layers[0].Wy.rows;\n    const nA = this.layers[0].Wy.cols;\n\n    const a = new Array(nA).map(() => {\n      return new Matrix(m, tX).setZeros();\n    });\n    const c = new Array(nA).map(() => {\n      return new Matrix(m, tX).setZeros();\n    });\n    const y = new Array(nY).map(() => {\n      return new Matrix(m, tX).setZeros();\n    });\n\n    let aNext = a0;\n    let cNext = new Matrix(nA, m).setZeros();\n\n    for (let t = 0; t < tX; t += 1) {\n      const dataInput = [];\n      X.forEach((m: Matrix, i) => {\n        dataInput[i] = [];\n        for (let row = 0; row < m.rows; row += 1) {\n          dataInput[i].push(m.data[row][t]);\n        }\n      });\n      const input = Matrix.from(dataInput);\n      const [_aNext, _cNext, _yt] = this.layers[0].forward(input, aNext, cNext);\n    }\n  }\n\n  backward(da: Matrix[]): void {\n    const na = da.length;\n    const m = da[0].rows;\n    const tx = da[0].cols;\n    const nx = this.layers[0].x1.rows;\n\n    for (let t = tx - 1; t >= 0; t -= 1) {\n      //this.layers[0].backward(_da, dcPrevT);\n    }\n  }\n\n  /*save(path: string): Promise<string> {\n    const resultJSON = {\n      dimensions: this.dimensions,\n      layers: [],\n    };\n\n    this.layers.forEach((layer: Layers) => {\n      resultJSON.layers.push({\n        type: layer.getType(),\n        size: layer.getSize(),\n        weights: {\n          W: layer.W.data,\n          b: layer.b.data,\n        },\n      });\n    });\n\n    const result = JSON.stringify(resultJSON);\n\n    return new Promise((resolve, reject) => {\n      fs.writeFile(path, result, (err) => {\n        if (err) {\n          console.error(err);\n          reject();\n        }\n        resolve(result);\n      });\n    });\n  }*/\n}\n","import { Dimension, LayersRNN } from \"../types\";\nimport { Matrix } from \"impulse-math-ts\";\nimport { DatasetVocabulary } from \"impulse-dataset-ts/src/typescript/Dataset/DatasetVocabulary\";\n\nexport class NetworkRNN {\n  private readonly dimensions: Dimension | null = null;\n  private size = 0;\n  private layers: LayersRNN[] = [];\n\n  constructor(dimensions: Dimension) {\n    this.dimensions = dimensions;\n  }\n\n  addLayer(layer: LayersRNN): NetworkRNN {\n    this.size++;\n    this.layers.push(layer);\n\n    return this;\n  }\n\n  getLayers(): LayersRNN[] {\n    return this.layers;\n  }\n\n  loss(vocabularySize: number, sequenceLength: number): number {\n    return -Math.log(1 / vocabularySize) * sequenceLength;\n  }\n\n  sample(dataset: DatasetVocabulary) {\n    const Waa = this.layers[0].Waa;\n    const Wax = this.layers[0].Wax;\n    const Wya = this.layers[0].Wya;\n    const by = this.layers[0].by;\n    const b = this.layers[0].b;\n    const indices = [];\n    const charIndices = dataset.getCharIndices();\n    const newLineCharacter = charIndices[\"\\n\"];\n    const chars = dataset.getChars();\n\n    let x = new Matrix(this.dimensions[1], 1).setZeros();\n    let aPrev = new Matrix(this.dimensions[0], 1).setRandom(this.dimensions[1]);\n\n    let idx = -1;\n    let counter = 0;\n\n    while (idx != newLineCharacter && counter != 50) {\n      const a = Wax.dot(x).add(Waa.dot(aPrev)).add(b).setMin(1e-3).tanh();\n      const z = Wya.dot(a).add(by);\n      const y = z.softmax();\n\n      idx = charIndices[chars[y.colMaxCoeffIndex(0)]];\n      x = new Matrix(this.dimensions[1], 1).setZeros();\n      let maxIndex = y.colMaxCoeffIndex(0);\n      if (maxIndex === -1) {\n        maxIndex = Math.floor(Math.random() * this.dimensions[1]);\n        idx = charIndices[chars[maxIndex]];\n      }\n      x.data[maxIndex][0] = 1;\n\n      indices.push(idx);\n      aPrev = a;\n\n      counter += 1;\n    }\n\n    if (counter === 50) {\n      indices.push(newLineCharacter);\n    }\n\n    return indices\n      .map((i) => {\n        return chars[i];\n      })\n      .join(\"\");\n  }\n\n  forward(X: Matrix, Y: Matrix, a0: Matrix): [number] {\n    const x = [null];\n    const a = [a0];\n    const yHat = [null];\n    let loss = 0;\n    for (let t = 1; t <= X.rows; t += 1) {\n      x[t] = new Matrix(this.dimensions[1], this.dimensions[0]).setZeros();\n      x[t].data[X.data[t - 1][0]][0] = 1;\n      const [_a, _yHat] = this.layers[0].forward(x[t], a[t - 1]);\n      a[t] = _a;\n      yHat[t] = _yHat; //.setMin(1e-5);\n      loss += 0; // todo\n    }\n    this.layers[0].A = a;\n    this.layers[0].X = x;\n    this.layers[0].Y = yHat;\n    return [loss];\n  }\n\n  backward(X: Matrix): void {\n    const a = this.layers[0].A;\n    const x = this.layers[0].X;\n    const yHat = this.layers[0].Y;\n\n    let _dWax = new Matrix(this.layers[0].Wax.rows, this.layers[0].Wax.cols).setZeros();\n    let _dWaa = new Matrix(this.layers[0].Waa.rows, this.layers[0].Waa.cols).setZeros();\n    let _dWya = new Matrix(this.layers[0].Wya.rows, this.layers[0].Wya.cols).setZeros();\n    let _db = new Matrix(this.layers[0].db.rows, this.layers[0].db.cols).setZeros();\n    let _dby = new Matrix(this.layers[0].dby.rows, this.layers[0].dby.cols).setZeros();\n    let _daNext = new Matrix(this.layers[0].daNext.rows, this.layers[0].daNext.rows).setZeros();\n\n    for (let t = X.rows - 1; t >= 1; t -= 1) {\n      // loop over examples\n      const dy = Matrix.from(a[t].data);\n      dy.data[X.data[t - 1][0]][0] -= 1;\n      const { dWax, dWya, dWaa, db, dby, daNext } = this.layers[0].backward(dy, x[t], a[t], a[t - 1]);\n      _dWax = _dWax.add(dWax.replicate(1, _dWax.cols));\n      _dWaa = _dWaa.add(dWaa.replicate(1, _dWaa.cols));\n      _dWya = _dWya.add(dWya);\n      _db = _db.add(db);\n      _dby = _dby.add(dby);\n      _daNext = _daNext.add(daNext);\n    }\n\n    // gradient clipping\n    this.layers[0].dWax = _dWax.setMin(-5).setMax(5);\n    this.layers[0].dWaa = _dWaa.setMin(-5).setMax(5);\n    this.layers[0].dWya = _dWya.setMin(-5).setMax(5);\n    this.layers[0].db = _dby.setMin(-5).setMax(5);\n    this.layers[0].dby = _dby.setMin(-5).setMax(5);\n    this.layers[0].daNext = _daNext.setMin(-5).setMax(5);\n  }\n\n  optimize(X: Matrix, Y: Matrix, aPrev: Matrix, learningRate: number): [number, Matrix] {\n    const [loss] = this.forward(X, Y, aPrev);\n    this.backward(X);\n\n    this.layers[0].Wax = this.layers[0].Wax.add(\n      this.layers[0].dWax.replicate(1, this.getDimensions()[2]).multiply(-learningRate)\n    );\n    this.layers[0].Waa = this.layers[0].Waa.add(this.layers[0].dWaa.multiply(-learningRate));\n    this.layers[0].Wya = this.layers[0].Wya.add(this.layers[0].dWya.multiply(-learningRate));\n    //this.layers[0].b = this.layers[0].b.add(this.layers[0].db.multiply(-learningRate));\n    //this.layers[0].by = this.layers[0].by.add(\n    //  this.layers[0].dby.multiply(-learningRate).rowwiseSum().divide(this.layers[0].dby.cols).transpose()\n    //);\n\n    return [loss, this.layers[0].A[X.rows - 1]];\n  }\n\n  getDimensions(): Dimension {\n    return this.dimensions;\n  }\n\n  /*save(path: string): Promise<string> {\n    const resultJSON = {\n      dimensions: this.dimensions,\n      layers: [],\n    };\n\n    this.layers.forEach((layer: Layers) => {\n      resultJSON.layers.push({\n        type: layer.getType(),\n        size: layer.getSize(),\n        weights: {\n          W: layer.W.data,\n          b: layer.b.data,\n        },\n      });\n    });\n\n    const result = JSON.stringify(resultJSON);\n\n    return new Promise((resolve, reject) => {\n      fs.writeFile(path, result, (err) => {\n        if (err) {\n          console.error(err);\n          reject();\n        }\n        resolve(result);\n      });\n    });\n  }*/\n}\n","import { Network } from \"./Network\";\nimport { NetworkRNN } from \"./NetworkRNN\";\nimport { NetworkLSTM } from \"./NetworkLSTM\";\n\ntype Networks = Network | NetworkRNN | NetworkLSTM;\n\nexport { Network, NetworkRNN, Networks };\n","import { Dimension, Layers } from \"../types\";\nimport { Network, NetworkRNN, Networks } from \"../Network\";\nimport { BackpropagationFactory } from \"../Layer/Backpropagation/BackpropagationFactory\";\nimport { NetworkLSTM } from \"../Network/NetworkLSTM\";\nimport { DatasetVocabulary } from \"../Dataset/DatasetVocabulary\";\n\nabstract class AbstractNetworkBuilder {\n  protected dimensions: Dimension | null = null;\n  protected lastLayer: Layers | null = null;\n  protected network: Networks | null = null;\n\n  constructor(dimension: Dimension, type = \"DNN\") {\n    this.dimensions = dimension;\n\n    if (type === \"DNN\") {\n      this.network = new Network(this.dimensions);\n    } else if (type === \"RNN\") {\n      this.network = new NetworkRNN(this.dimensions);\n    } else if (type === \"LSTM\") {\n      this.network = new NetworkLSTM(this.dimensions);\n    }\n  }\n\n  createLayer(layerClass: Layers, callback: (layer: Layers) => void | null = null): AbstractNetworkBuilder {\n    // @ts-ignore\n    const layer: Layers = new layerClass();\n\n    if (typeof callback === \"function\") {\n      callback(layer);\n    }\n\n    if (this.lastLayer === null) {\n      this.firstLayerTransition(layer);\n    } else {\n      // @ts-ignore\n      layer.transition(this.lastLayer);\n    }\n\n    layer.configure();\n    layer.setBackPropagation(BackpropagationFactory.create(this.lastLayer, layer));\n\n    this.network.addLayer(layer);\n    this.lastLayer = layer;\n\n    return this;\n  }\n\n  getNetwork(): Networks | null {\n    return this.network;\n  }\n\n  abstract firstLayerTransition(layer: Layers): void;\n}\n\nexport { AbstractNetworkBuilder };\n","import { AbstractNetworkBuilder } from \"./AbstractNetworkBuilder\";\nimport { Layers } from \"../types\";\nimport { Network } from \"../Network\";\nimport * as fs from \"fs\";\nimport { LogisticLayer, ReluLayer, SoftmaxLayer, SoftplusLayer, TanhLayer } from \"../Layer/\";\nimport { Matrix } from \"impulse-math-ts\";\nimport { JSONLayerData } from \"./types\";\n\nclass NetworkBuilder1D extends AbstractNetworkBuilder {\n  firstLayerTransition(layer: Layers): void {\n    layer.setWidth(this.dimensions[0]);\n  }\n\n  static fromJSON(jsonPath: string): Promise<Network> {\n    return new Promise((resolve, reject) => {\n      fs.readFile(jsonPath, (err, data) => {\n        if (err) {\n          reject(err);\n          return;\n        }\n        const json = JSON.parse(data.toString());\n\n        const builder = new NetworkBuilder1D(json[\"dimensions\"]);\n\n        json[\"layers\"].forEach((layerData: JSONLayerData) => {\n          let layerClass = null;\n\n          if (layerData[\"type\"] === \"logistic\") {\n            layerClass = LogisticLayer;\n          } else if (layerData[\"type\"] === \"softmax\") {\n            layerClass = SoftmaxLayer;\n          } else if (layerData[\"type\"] === \"relu\") {\n            layerClass = ReluLayer;\n          } else if (layerData[\"type\"] === \"softplus\") {\n            layerClass = SoftplusLayer;\n          } else if (layerData[\"type\"] === \"tanh\") {\n            layerClass = TanhLayer;\n          }\n\n          builder.createLayer(layerClass, (layer) => {\n            // @ts-ignore\n            layer.setSize(layerData[\"size\"] as number);\n          });\n        });\n\n        const network = builder.getNetwork();\n\n        network.getLayers().forEach((layer, i) => {\n          layer.W = new Matrix(\n            json[\"layers\"][i][\"weights\"][\"W\"].length,\n            json[\"layers\"][i][\"weights\"][\"W\"][0].length,\n            json[\"layers\"][i][\"weights\"][\"W\"]\n          );\n          layer.b = new Matrix(\n            json[\"layers\"][i][\"weights\"][\"b\"].length,\n            json[\"layers\"][i][\"weights\"][\"b\"][0].length,\n            json[\"layers\"][i][\"weights\"][\"b\"]\n          );\n        });\n\n        resolve(network);\n      });\n    });\n  }\n}\n\nexport { NetworkBuilder1D };\n","import { AbstractNetworkBuilder } from \"./AbstractNetworkBuilder\";\nimport { Layers } from \"../types\";\nimport { Network } from \"../Network\";\nimport * as fs from \"fs\";\nimport { LogisticLayer, ReluLayer, SoftmaxLayer, SoftplusLayer, TanhLayer } from \"../Layer/\";\nimport { ConvLayer } from \"../Layer/\";\nimport { MaxPoolLayer } from \"../Layer/\";\nimport { JSONLayerData } from \"./types\";\n\nclass NetworkBuilder3D extends AbstractNetworkBuilder {\n  firstLayerTransition(layer: Layers): void {\n    if (this.dimensions) {\n      // @ts-ignore\n      layer.setSize(this.dimensions);\n    }\n  }\n\n  static fromJSON(jsonPath: string): Promise<Network> {\n    return new Promise((resolve, reject) => {\n      fs.readFile(jsonPath, (err, data) => {\n        if (err) {\n          reject(err);\n          return;\n        }\n        const json = JSON.parse(data.toString());\n\n        const builder = new NetworkBuilder3D(json[\"size\"]);\n\n        json[\"layers\"].forEach((layerData: JSONLayerData) => {\n          if (layerData[\"type\"] === \"logistic\") {\n            // @ts-ignore\n            builder.createLayer(LogisticLayer, (layer) => {\n              // @ts-ignore\n              layer.setSize(layerData[\"size\"]);\n            });\n          } else if (layerData[\"type\"] === \"softmax\") {\n            // @ts-ignore\n            builder.createLayer(SoftmaxLayer, (layer) => {\n              // @ts-ignore\n              layer.setSize(layerData[\"size\"]);\n            });\n          } else if (layerData[\"type\"] === \"relu\") {\n            // @ts-ignore\n            builder.createLayer(ReluLayer, (layer) => {\n              // @ts-ignore\n              layer.setSize(layerData[\"size\"]);\n            });\n          } else if (layerData[\"type\"] === \"softplus\") {\n            // @ts-ignore\n            builder.createLayer(SoftplusLayer, (layer) => {\n              // @ts-ignore\n              layer.setSize(layerData[\"size\"]);\n            });\n          } else if (layerData[\"type\"] === \"tanh\") {\n            // @ts-ignore\n            builder.createLayer(TanhLayer, (layer) => {\n              // @ts-ignore\n              layer.setSize(layerData[\"size\"]);\n            });\n          } else if (layerData[\"type\"] === \"conv\") {\n            // @ts-ignore\n            builder.createLayer(ConvLayer, (layer: ConvLayer) => {\n              layer.setSize(layerData[\"size\"]);\n              layer.setFilterSize(layerData[\"filterSize\"]);\n              layer.setStride(layerData[\"stride\"]);\n              layer.setNumFilters(layerData[\"numFilters\"]);\n              layer.setPadding(layerData[\"padding\"]);\n            });\n          } else if (layerData[\"type\"] === \"maxpool\") {\n            // @ts-ignore\n            builder.createLayer(MaxPoolLayer, (layer: MaxPoolLayer) => {\n              layer.setSize(layerData[\"size\"]);\n              layer.setFilterSize(layerData[\"filterSize\"]);\n              layer.setStride(layerData[\"stride\"]);\n            });\n          } else if (layerData[\"type\"] === \"fullyconnected\") {\n            // @ts-ignore\n            builder.createLayer(MaxPoolLayer);\n          }\n        });\n\n        const network = builder.getNetwork();\n\n        if (network) {\n          network.getLayers().forEach((layer, i) => {\n            layer.W = json[\"layers\"][\"W\"];\n            layer.b = json[\"layers\"][\"b\"];\n          });\n\n          resolve(network);\n        }\n      });\n    });\n  }\n}\n\nexport { NetworkBuilder3D };\n","import { AbstractNetworkBuilder } from \"./AbstractNetworkBuilder\";\nimport { NetworkBuilder1D } from \"./NetworkBuilder1D\";\nimport { NetworkBuilder3D } from \"./NetworkBuilder3D\";\n\nexport { AbstractNetworkBuilder, NetworkBuilder1D, NetworkBuilder3D };\n","import { Network } from \"../Network\";\nimport { AbstractOptimizer } from \"./Optimizer/AbstractOptimizer\";\nimport { Dataset } from \"impulse-dataset-ts/src/typescript/Dataset/Dataset\";\n\nexport interface CostResult {\n  cost: number;\n  accuracy: number;\n}\n\nexport interface StepCallbackParameters {\n  iteration: number;\n}\n\nexport abstract class AbstractTrainer {\n  network: Network | null = null;\n  optimizer: AbstractOptimizer | null = null;\n  regularization = 1e-4;\n  iterations = 1000;\n  learningRate = 0.001;\n  verbose = true;\n  verboseStep = 1;\n  stepCallback = (data: StepCallbackParameters): void => undefined;\n\n  constructor(network: Network, optimizer: AbstractOptimizer) {\n    this.network = network;\n    this.optimizer = optimizer;\n  }\n\n  abstract train(inputDataset: Dataset, outputDataset: Dataset): AbstractTrainer;\n\n  setRegularization(regularization: number): AbstractTrainer {\n    this.regularization = regularization;\n    return this;\n  }\n\n  setIterations(iterations: number): AbstractTrainer {\n    this.iterations = iterations;\n    return this;\n  }\n\n  setLearningRate(learningRate: number): AbstractTrainer {\n    this.learningRate = learningRate;\n    return this;\n  }\n\n  setVerbose(verbose: boolean): AbstractTrainer {\n    this.verbose = verbose;\n    return this;\n  }\n\n  setVerboseStep(verboseStep: number): AbstractTrainer {\n    this.verboseStep = verboseStep;\n    return this;\n  }\n\n  setStepCallback(stepCallback: (data: StepCallbackParameters) => void): AbstractTrainer {\n    this.stepCallback = stepCallback;\n    return this;\n  }\n\n  cost(inputDataset: Dataset, outputDataset: Dataset): CostResult {\n    const numberOfExamples = inputDataset.getNumberOfExamples();\n\n    let accuracy = 0;\n    let penalty = 0;\n\n    this.network.getLayers().forEach((layer) => {\n      penalty += layer.penalty();\n    });\n\n    const predictions = this.network.forward(inputDataset.data);\n    const correctOutput = outputDataset.data;\n\n    /*const error = Y.multiply(predictions.log())\n      .add(Y.minusOne().multiply(predictions.minusOne().log()))\n      .multiply(-1)\n      .sum();*/\n    const error = correctOutput.multiply(predictions.log()).sum();\n    const cost = (-1 / numberOfExamples) * error + this.regularization / (penalty * (2 * inputDataset.data.cols));\n\n    for (let col = 0; col < predictions.cols; col += 1) {\n      const index1 = predictions.colMaxCoeffIndex(col);\n      const index2 = correctOutput.colMaxCoeffIndex(col);\n\n      if (index1 === index2) {\n        accuracy++;\n      }\n    }\n\n    return {\n      cost,\n      accuracy: (accuracy / numberOfExamples) * 100,\n    };\n  }\n}\n","import { AbstractTrainer, CostResult } from \"./AbstractTrainer\";\nimport { Dataset } from \"impulse-dataset-ts/src/typescript/Dataset/Dataset\";\nimport { round } from \"impulse-math-ts\";\n\nexport class MiniBatchTrainer extends AbstractTrainer {\n  batchSize = 100;\n\n  setBatchSize(batchSize: number): MiniBatchTrainer {\n    this.batchSize = batchSize;\n    return this;\n  }\n\n  cost(inputDataset: Dataset, outputDataset: Dataset): CostResult {\n    const batchSize = this.batchSize;\n    const numberOfExamples = inputDataset.getNumberOfExamples();\n    const numBatches = Math.ceil(numberOfExamples / batchSize);\n\n    let cost = 0.0;\n    let accuracy = 0.0;\n\n    // calculate penalty\n    let penalty = 0.0;\n\n    this.network.getLayers().forEach((layer) => {\n      penalty = layer.penalty();\n    });\n\n    const startTime = new Date().getTime();\n    const startIterationTime = new Date().getTime();\n\n    for (let batch = 0, offset = 0; batch < numberOfExamples; batch += this.batchSize, offset += this.batchSize) {\n      const startIterationTime2 = new Date().getTime();\n      const input = inputDataset.getBatch(offset, this.batchSize);\n      const correctOutput = outputDataset.getBatch(offset, this.batchSize);\n      const predictions = this.network.forward(input.data);\n\n      const error = correctOutput.data.multiply(predictions.log()).sum();\n      cost += (-1 / numberOfExamples) * error + this.regularization / (penalty * (2 * inputDataset.data.cols));\n\n      for (let col = 0; col < predictions.cols; col += 1) {\n        const index1 = predictions.colMaxCoeffIndex(col);\n        const index2 = correctOutput.data.colMaxCoeffIndex(col);\n\n        if (index1 === index2) {\n          accuracy++;\n        }\n      }\n    }\n\n    return {\n      cost,\n      accuracy: (accuracy / numberOfExamples) * 100,\n    };\n  }\n\n  train(inputDataset: Dataset, outputDataset: Dataset): MiniBatchTrainer {\n    const numberOfExamples = inputDataset.getNumberOfExamples();\n\n    let t = 0;\n\n    this.optimizer.setBatchSize(this.batchSize);\n    this.optimizer.setLearningRate(this.learningRate);\n\n    for (let i = 0; i < this.iterations; i += 1) {\n      const startTime = new Date().getTime();\n      const startIterationTime = new Date().getTime();\n\n      for (let batch = 0, offset = 0; batch < numberOfExamples; batch += this.batchSize, offset += this.batchSize) {\n        const startIterationTime2 = new Date().getTime();\n        const input = inputDataset.getBatch(offset, this.batchSize);\n        const output = outputDataset.getBatch(offset, this.batchSize);\n        const predictions = this.network.forward(input.data);\n\n        this.network.backward(input.data, output.data, this.regularization);\n\n        this.optimizer.setT(++t);\n\n        this.network.getLayers().forEach((layer) => {\n          this.optimizer.optimize(layer);\n        });\n\n        if (this.verbose) {\n          const cost = this.cost(input, output);\n          const endIterationTime = new Date().getTime();\n          console.log(\n            `Batch: ${offset} / ${numberOfExamples} | Batch time: ${\n              endIterationTime - startIterationTime2\n            }ms | Time from start: ${round((endIterationTime - startIterationTime) / 1000, 1)}s. | Cost: ${round(\n              cost.cost,\n              2\n            )} | Acc: ${cost.accuracy}`\n          );\n        }\n      }\n\n      if (this.verbose) {\n        if ((i + 1) % this.verboseStep === 0) {\n          const endTime = new Date().getTime();\n          const currentResult = this.cost(inputDataset, outputDataset);\n\n          console.log(\n            `Iteration: ${i + 1} | Cost: ${round(currentResult.cost, 5)} | Accuracy: ${\n              currentResult.accuracy\n            }% | Time: ${(endTime - startTime) / 1000} s.`\n          );\n        }\n      }\n\n      this.stepCallback({\n        iteration: i,\n      });\n    }\n\n    return this;\n  }\n}\n","import { Layers } from \"../../types\";\n\nexport abstract class AbstractOptimizer {\n  protected batchSize = 0;\n  protected t = 0;\n  protected learningRate = 0;\n\n  setBatchSize(batchSize: number): AbstractOptimizer {\n    this.batchSize = batchSize;\n    return this;\n  }\n\n  setT(t: number): AbstractOptimizer {\n    this.t = t;\n    return this;\n  }\n\n  setLearningRate(learningRate: number): AbstractOptimizer {\n    this.learningRate = learningRate;\n    return this;\n  }\n\n  abstract optimize(layer: Layers): void;\n}\n","import { AbstractOptimizer } from \"./AbstractOptimizer\";\nimport { Layers } from \"../../types\";\n\nexport class OptimizerAdagrad extends AbstractOptimizer {\n  optimize(layer: Layers): void {\n    this.adagrad(layer, this.learningRate);\n  }\n\n  adagrad(layer: Layers, learningRate: number): void {\n    layer.dW = layer.dW.add(layer.gW.pow(2));\n    layer.W = layer.W.subtract(layer.gW.multiply(learningRate).divide(layer.dW.sqrt().add(1e-8)).multiply(layer.gW));\n\n    layer.db = layer.db.add(layer.gb.pow(2));\n    layer.b = layer.b.subtract(layer.db.multiply(learningRate).divide(layer.db.sqrt().add(1e-8)).multiply(layer.gb));\n  }\n}\n","import { AbstractOptimizer } from \"./AbstractOptimizer\";\nimport { Layers } from \"../../types\";\n\nexport class OptimizerAdam extends AbstractOptimizer {\n  protected beta1 = 0.9;\n  protected beta2 = 0.999;\n\n  setBeta1(beta1: number): OptimizerAdam {\n    this.beta1 = beta1;\n    return this;\n  }\n\n  setBeta2(beta2: number): OptimizerAdam {\n    this.beta2 = beta2;\n    return this;\n  }\n\n  optimize(layer: Layers): void {\n    this.adam(layer, this.learningRate, this.t);\n  }\n\n  adam(layer: Layers, learningRate: number, t: number): void {\n    layer.vW = layer.vW.multiply(this.beta1).add(layer.gW.multiply(1 - this.beta1));\n    layer.vb = layer.vb.multiply(this.beta1).add(layer.gb.multiply(1 - this.beta1));\n\n    layer.sW = layer.sW.multiply(this.beta2).add(layer.sW.pow(2).multiply(1 - this.beta2));\n    layer.sb = layer.sb.multiply(this.beta2).add(layer.sb.pow(2).multiply(1 - this.beta2));\n\n    const vWCorrected = layer.vW.divide(1 - Math.pow(this.beta1, 2));\n    const vbCorrected = layer.vb.divide(1 - Math.pow(this.beta1, 2));\n\n    const sWCorrected = layer.sW.add(1e-8).sqrt();\n    const sbCorrected = layer.sb.add(1e-8).sqrt();\n\n    layer.W = layer.W.subtract(vWCorrected.divide(sWCorrected).multiply(learningRate));\n    layer.b = layer.b.subtract(vbCorrected.divide(sbCorrected).multiply(learningRate));\n  }\n}\n","import { AbstractOptimizer } from \"./AbstractOptimizer\";\nimport { Layers } from \"../../types\";\n\nexport class OptimizerGradientDescent extends AbstractOptimizer {\n  optimize(layer: Layers): void {\n    this.gradientDescent(layer, this.learningRate);\n  }\n\n  gradientDescent(layer: Layers, learningRate: number): void {\n    layer.W = layer.W.subtract(layer.gW.multiply(learningRate));\n    layer.b = layer.b.subtract(layer.b.multiply(learningRate));\n  }\n}\n","import { AbstractOptimizer } from \"./AbstractOptimizer\";\nimport { Layers } from \"../../types\";\n\nexport class OptimizerMomentum extends AbstractOptimizer {\n  protected beta = 0.9;\n\n  optimize(layer: Layers): void {\n    this.momentum(layer, this.learningRate);\n  }\n\n  setBeta(beta: number): OptimizerMomentum {\n    this.beta = beta;\n    return this;\n  }\n\n  momentum(layer: Layers, learningRate: number): void {\n    layer.vW = layer.gW.multiply(this.beta).add(layer.gW.multiply(1 - this.beta));\n    layer.vb = layer.gb.multiply(this.beta).add(layer.gb.multiply(1 - this.beta));\n\n    layer.W = layer.W.subtract(layer.vW.multiply(learningRate));\n    layer.b = layer.b.subtract(layer.vb.multiply(learningRate));\n  }\n}\n","import { AbstractOptimizer } from \"./AbstractOptimizer\";\nimport { Layers } from \"../../types\";\n\nexport class OptimizerRMSProp extends AbstractOptimizer {\n  protected alpha = 1e-3;\n  protected beta = 0.9;\n\n  setBeta(beta: number): OptimizerRMSProp {\n    this.beta = beta;\n    return this;\n  }\n\n  setAlpha(alpha: number): OptimizerRMSProp {\n    this.alpha = alpha;\n    return this;\n  }\n\n  optimize(layer: Layers): void {\n    this.rmsprop(layer, this.learningRate, this.alpha, this.beta);\n  }\n\n  rmsprop(layer: Layers, learningRate: number, alpha: number, beta: number): void {\n    layer.sW = layer.sW.multiply(beta).add(layer.gW.pow(2).multiply(1 - beta));\n    layer.sb = layer.sb.multiply(beta).add(layer.gb.pow(2).multiply(1 - beta));\n\n    layer.W = layer.W.subtract(layer.gW.multiply(alpha).divide(layer.sW.sqrt().add(1e-8)));\n    layer.b = layer.b.subtract(layer.gb.multiply(alpha).divide(layer.sb.sqrt().add(1e-8)));\n  }\n}\n","import { OptimizerAdam } from \"./OptimizerAdam\";\nimport { OptimizerGradientDescent } from \"./OptimizerGradientDescent\";\nimport { OptimizerAdagrad } from \"./OptimizerAdagrad\";\nimport { OptimizerMomentum } from \"./OptimizerMomentum\";\nimport { OptimizerRMSProp } from \"./OptimizerRMSProp\";\n\nexport { OptimizerAdam, OptimizerGradientDescent, OptimizerAdagrad, OptimizerMomentum, OptimizerRMSProp };\n","import { NetworkRNN } from \"../Network\";\nimport { DatasetVocabulary } from \"impulse-dataset-ts/src/typescript/Dataset/DatasetVocabulary\";\nimport { Matrix } from \"impulse-math-ts\";\n\nexport class RNNTrainer {\n  protected network: NetworkRNN | null = null;\n  protected iterations: number = 1000;\n  protected learningRate: number = 0.01;\n\n  constructor(network: NetworkRNN) {\n    this.network = network;\n  }\n\n  train(dataset: DatasetVocabulary): [number] {\n    let loss = this.network.loss(dataset.getVocabularySize(), 7);\n\n    const [X, Y] = dataset.buildData(100);\n    const [x, y] = dataset.vectorization(X, Y);\n\n    let aPrev = new Matrix(this.network.getDimensions()[0], this.network.getDimensions()[0]).setZeros();\n\n    for (let iteration = 0; iteration < this.iterations; iteration += 1) {\n      const index = iteration % x.length;\n      const [_loss] = this.network.forward(x[index], y, aPrev);\n      loss = _loss;\n      const [currentLoss, _aPrev] = this.network.optimize(x[index], y, aPrev, this.learningRate);\n      aPrev = _aPrev;\n      loss = loss * 0.999 + currentLoss * 0.001;\n      console.log(`Iteration ${iteration + 1} | Loss: ${loss} | Sample: ${this.network.sample(dataset).trim()}`);\n    }\n    return [loss];\n  }\n\n  setIterations(num: number): RNNTrainer {\n    this.iterations = num;\n    return this;\n  }\n\n  setLearningRate(num: number): RNNTrainer {\n    this.learningRate = num;\n    return this;\n  }\n}\n","import { AbstractTrainer } from \"./AbstractTrainer\";\nimport { Dataset } from \"impulse-dataset-ts/src/typescript/Dataset/Dataset\";\nimport { round } from \"impulse-math-ts\";\n\nexport class Trainer extends AbstractTrainer {\n  train(inputDataset: Dataset, outputDataset: Dataset): AbstractTrainer {\n    const numberOfExamples = inputDataset.getNumberOfExamples();\n\n    let t = 0;\n\n    this.optimizer.setBatchSize(numberOfExamples);\n    this.optimizer.setLearningRate(this.learningRate);\n\n    for (let i = 0; i < this.iterations; i += 1) {\n      const startTime = new Date().getTime();\n\n      this.network.backward(inputDataset.data, outputDataset.data, this.regularization);\n\n      this.optimizer.setT(++t);\n\n      this.network.getLayers().forEach((layer) => {\n        this.optimizer.optimize(layer);\n      });\n\n      if (this.verbose) {\n        if ((i + 1) % this.verboseStep === 0) {\n          const currentResult = this.cost(inputDataset, outputDataset);\n          const endTime = new Date().getTime();\n\n          console.log(\n            `Iteration: ${i + 1} | Cost: ${round(currentResult.cost, 5)} | Accuracy: ${round(\n              currentResult.accuracy,\n              2\n            )}% | Time: ${(endTime - startTime) / 1000} s.`\n          );\n        }\n      }\n\n      this.stepCallback({\n        iteration: i,\n      });\n    }\n\n    return this;\n  }\n}\n","import { MiniBatchTrainer } from \"./MiniBatchTrainer\";\nimport { Trainer } from \"./Trainer\";\nimport { RNNTrainer } from \"./RNNTrainer\";\n\nexport { MiniBatchTrainer, Trainer, RNNTrainer };\n","import { SoftmaxLayer, LogisticLayer, TanhLayer, ReluLayer, SoftplusLayer, AbstractLayer } from \"./Layer\";\nimport { ConvLayer } from \"./Layer/\";\nimport { MaxPoolLayer } from \"./Layer/\";\nimport { FullyConnectedLayer } from \"./Layer/\";\nimport { PurelinLayer } from \"./Layer\";\nimport { AbstractLayer3D } from \"./Layer/AbstractLayer3D\";\nimport { AbstractLayer1D } from \"./Layer/AbstractLayer1D\";\nimport { RecurrentLayer } from \"./Layer\";\nimport { LSTMLayer } from \"./Layer\";\n\nexport type Dimension = [number] | [number, number, number];\n\nexport enum LayerType {\n  logistic = \"logistic\",\n  softmax = \"softmax\",\n  tanh = \"tanh\",\n  relu = \"relu\",\n  softplus = \"softplus\",\n  conv = \"conv\",\n  maxpool = \"maxpool\",\n  fullyconnected = \"fullyconnected\",\n  purelin = \"purelin\",\n  rnnlayer = \"rnnlayer\",\n}\n\nexport type Layers =\n  | LogisticLayer\n  | SoftmaxLayer\n  | TanhLayer\n  | ReluLayer\n  | SoftplusLayer\n  | ConvLayer\n  | MaxPoolLayer\n  | FullyConnectedLayer\n  | PurelinLayer\n  | AbstractLayer3D\n  | AbstractLayer1D;\nexport type Layers1D = LogisticLayer | SoftmaxLayer | TanhLayer | ReluLayer | SoftplusLayer | PurelinLayer;\nexport type Layers3D = ConvLayer | MaxPoolLayer | FullyConnectedLayer | AbstractLayer3D;\nexport type LayersRNN = RecurrentLayer;\nexport type LayersLSTM = LSTMLayer;\n","(()=>{\"use strict\";var r={d:(t,o)=>{for(var e in o)r.o(o,e)&&!r.o(t,e)&&Object.defineProperty(t,e,{enumerable:!0,get:o[e]})},o:(r,t)=>Object.prototype.hasOwnProperty.call(r,t),r:r=>{\"undefined\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(r,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(r,\"__esModule\",{value:!0})}},t={};function o(r){return o=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(r){return typeof r}:function(r){return r&&\"function\"==typeof Symbol&&r.constructor===Symbol&&r!==Symbol.prototype?\"symbol\":typeof r},o(r)}function e(r,t){for(var o=0;o<t.length;o++){var e=t[o];e.enumerable=e.enumerable||!1,e.configurable=!0,\"value\"in e&&(e.writable=!0),Object.defineProperty(r,n(e.key),e)}}function n(r){var t=function(r,t){if(\"object\"!==o(r)||null===r)return r;var e=r[Symbol.toPrimitive];if(void 0!==e){var n=e.call(r,\"string\");if(\"object\"!==o(n))return n;throw new TypeError(\"@@toPrimitive must return a primitive value.\")}return String(r)}(r);return\"symbol\"===o(t)?t:String(t)}r.r(t),r.d(t,{ComputationCPU:()=>W,ComputationGPU:()=>f,Matrix:()=>H,getComputation:()=>Z,im2col:()=>J,maxpool:()=>Q,round:()=>V,setComputation:()=>I});var a=function(){function r(){var t,o,e;!function(r,t){if(!(r instanceof t))throw new TypeError(\"Cannot call a class as a function\")}(this,r),t=this,e={},(o=n(o=\"kernels\"))in t?Object.defineProperty(t,o,{value:e,enumerable:!0,configurable:!0,writable:!0}):t[o]=e}var t,o;return t=r,o=[{key:\"addKernel\",value:function(r,t){return this.kernels[r]=t,this}},{key:\"execute\",value:function(r){if(!this.kernels[r])throw new Error(\"Kernel '\".concat(r,\"' not exists.\"));for(var t=arguments.length,o=new Array(t>1?t-1:0),e=1;e<t;e++)o[e-1]=arguments[e];return this.kernels[r].apply(null,o)}}],o&&e(t.prototype,o),Object.defineProperty(t,\"prototype\",{writable:!1}),r}();function s(r){return s=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(r){return typeof r}:function(r){return r&&\"function\"==typeof Symbol&&r.constructor===Symbol&&r!==Symbol.prototype?\"symbol\":typeof r},s(r)}function i(r,t){return i=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(r,t){return r.__proto__=t,r},i(r,t)}function c(r,t){if(t&&(\"object\"===s(t)||\"function\"==typeof t))return t;if(void 0!==t)throw new TypeError(\"Derived constructors may only return object or undefined\");return function(r){if(void 0===r)throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");return r}(r)}function u(r){return u=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(r){return r.__proto__||Object.getPrototypeOf(r)},u(r)}var f=function(r){!function(r,t){if(\"function\"!=typeof t&&null!==t)throw new TypeError(\"Super expression must either be null or a function\");r.prototype=Object.create(t&&t.prototype,{constructor:{value:r,writable:!0,configurable:!0}}),Object.defineProperty(r,\"prototype\",{writable:!1}),t&&i(r,t)}(a,r);var t,o,e,n=(o=a,e=function(){if(\"undefined\"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if(\"function\"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(r){return!1}}(),function(){var r,t=u(o);if(e){var n=u(this).constructor;r=Reflect.construct(t,arguments,n)}else r=t.apply(this,arguments);return c(this,r)});function a(){return function(r,t){if(!(r instanceof t))throw new TypeError(\"Cannot call a class as a function\")}(this,a),n.call(this)}return t=a,Object.defineProperty(t,\"prototype\",{writable:!1}),t}(a);function l(r){return l=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(r){return typeof r}:function(r){return r&&\"function\"==typeof Symbol&&r.constructor===Symbol&&r!==Symbol.prototype?\"symbol\":typeof r},l(r)}function h(r,t){return h=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(r,t){return r.__proto__=t,r},h(r,t)}function v(r,t){if(t&&(\"object\"===l(t)||\"function\"==typeof t))return t;if(void 0!==t)throw new TypeError(\"Derived constructors may only return object or undefined\");return function(r){if(void 0===r)throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");return r}(r)}function w(r){return w=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(r){return r.__proto__||Object.getPrototypeOf(r)},w(r)}var d=function(r,t){if(r.rows!==t.rows)throw new Error(\"ROWS number not equal.\");if(r.cols!==t.cols)throw new Error(\"COLS number not equal.\");for(var o=[],e=0;e<r.rows;e+=1){o[e]=[];for(var n=0;n<r.cols;n+=1)o[e][n]=r.data[e][n]/t.data[e][n]}return new H(r.rows,t.cols,o)},y=function(r,t){for(var o=[],e=0;e<r.rows;e+=1){o[e]=[];for(var n=0;n<r.cols;n+=1)o[e][n]=r.data[e][n]/t}return new H(r.rows,r.cols,o)},p=function(r){for(var t=[],o=0;o<r.rows;o+=1){t[o]=[];for(var e=0;e<r.cols;e+=1)t[o][e]=1/(1+Math.exp(-r.data[o][e]))}return H.from(t)},m=function(r,t){for(var o=[],e=0;e<t.rows;e+=1){o[e]=[];for(var n=0;n<t.cols;n+=1)t.data&&(o[e][n]=Math.log(t.data[e][n]+1e-8))}for(var a=_(new H(t.rows,t.cols,o),r),s=[],i=0;i<r.rows;i+=1){s[i]=[];for(var c=0;c<r.cols;c+=1)r.data&&(s[i][c]=1-r.data[i][c])}for(var u=new H(r.rows,r.cols,s),f=[],l=0;l<t.rows;l+=1){f[l]=[];for(var h=0;h<t.cols;h+=1)t.data&&(f[l][h]=Math.log(1-t.data[l][h]+1e-8))}var v=new H(t.rows,t.cols,f);return P(_(C(a,-1),r),_(C(v,-1),q(u,1))).sum()},b=function(r,t){return p(t).multiply(p(t).minusOne())},k=function(r){for(var t=[],o=0;o<r.rows;o+=1){t[o]=[];for(var e=0;e<r.cols;e+=1)t[o][e]=(1-Math.exp(-2*r.data[o][e]))/(1+Math.exp(-2*r.data[o][e]))}return H.from(t)},g=function(r){for(var t=[],o=0;o<r.rows;o+=1){t[o]=[];for(var e=0;e<r.cols;e+=1)r.data&&(t[o][e]=Math.max(0,r.data[o][e]))}return new H(r.rows,r.cols,t)},O=function(r,t){for(var o=[],e=0;e<r.rows;e+=1){o[e]=[];for(var n=0;n<r.cols;n+=1)r.data&&(o[e][n]=t.data[e][n]>0?1:0)}return _(new H(r.rows,r.cols,o),r)},S=function(r){for(var t=[],o=0;o<r.rows;o+=1){t[o]=[];for(var e=0;e<r.cols;e+=1)r.data&&(t[o][e]=Math.log(1+Math.exp(r.data[o][e])))}return new H(r.rows,r.cols,t)},M=function(r){for(var t=[],o=0;o<r.rows;o+=1){t[o]=[];for(var e=0;e<r.cols;e+=1)r.data&&(t[o][e]=Math.pow(r.data[o][e],2))}return new H(r.rows,r.cols,t).sum()},x=function(r){for(var t=[],o=0;o<r.rows;o+=1){t[o]=[];for(var e=0;e<r.cols;e+=1)r.data&&(t[o][e]=Math.sqrt(r.data[o][e]+1e-8))}return new H(r.rows,r.cols,t)},j=function(r,t){if(r.cols!==t.rows)throw new Error(\"DIMENSIONS error. m1.cols \".concat(r.rows,\" \").concat(r.cols,\" !== m2.rows \").concat(t.rows,\" \").concat(t.cols,\".\"));for(var o=[],e=0;e<r.rows;++e){o[e]=new Array(t.cols);for(var n=0;n<t.cols;++n){o[e][n]=0;for(var a=0;a<r.cols;++a)r.data&&t.data&&(o[e][n]+=r.data[e][a]*t.data[a][n])}}return new H(r.rows,t.cols,o)},P=function(r,t){if(r.rows!==t.rows)throw new Error(\"ROWS number not equal.\");if(r.cols!==t.cols)throw new Error(\"COLS number not equal. m1.cols \".concat(r.cols,\" !== m2.cols \").concat(t.cols));for(var o=[],e=0;e<r.rows;e+=1){o[e]=[];for(var n=0;n<r.cols;n+=1)r.data&&t.data&&(o[e][n]=r.data[e][n]+t.data[e][n])}return new H(r.rows,r.cols,o)},E=function(r,t){if(r.rows!==t.rows)throw new Error(\"ROWS number not equal: m1.rows \".concat(r.rows,\" !== m2.rows \").concat(t.rows));if(r.cols!==t.cols)throw new Error(\"COLS number not equal: m1.cols \".concat(r.cols,\" !== m2.cols \").concat(t.cols));for(var o=[],e=0;e<r.rows;e+=1){o[e]=[];for(var n=0;n<r.cols;n+=1)r.data&&t.data&&(o[e][n]=r.data[e][n]-t.data[e][n])}return new H(r.rows,r.cols,o)},K=function(r,t){for(var o=[],e=0;e<r.rows;e+=1){o[e]=[];for(var n=0;n<r.cols;n+=1)o[e][n]=(4*Math.random()-2)*Math.sqrt(2/t)}return new H(r.rows,r.cols,o)},R=function(r){for(var t=[],o=0;o<r.rows;o+=1){t[o]=[];for(var e=0;e<r.cols;e+=1)t[o][e]=0}return new H(r.rows,r.cols,t)},_=function(r,t){if(r.rows!==t.rows)throw new Error(\"ROWS number not equal: m1.rows \".concat(r.rows,\" !== m2.rows \").concat(t.rows));if(r.cols!==t.cols)throw new Error(\"COLS number not equal: m1.cols \".concat(r.cols,\" !== m2.cols \").concat(t.cols));for(var o=[],e=0;e<r.rows;e+=1){o[e]=[];for(var n=0;n<r.cols;n+=1)r.data&&t.data&&(o[e][n]=r.data[e][n]*t.data[e][n])}return new H(r.rows,r.cols,o)},C=function(r,t){for(var o=[],e=0;e<r.rows;e+=1){o[e]=[];for(var n=0;n<r.cols;n+=1)r.data&&(o[e][n]=r.data[e][n]*t)}return new H(r.rows,r.cols,o)},q=function(r,t){for(var o=[],e=0;e<r.rows;e+=1){o[e]=[];for(var n=0;n<r.cols;n+=1)r.data&&(o[e][n]=t-r.data[e][n])}return new H(r.rows,r.cols,o)},T=function(r,t){for(var o=[],e=0;e<r.rows;e+=1){o[e]=[];for(var n=0;n<r.cols;n+=1)r.data&&(o[e][n]=Math.pow(r.data[e][n],t))}return new H(r.rows,r.cols,o)},A=function(r,t){for(var o=[],e=0;e<r.rows;e+=1){o[e]=[];for(var n=0;n<r.cols;n+=1)r.data&&(o[e][n]=Math.log(r.data[e][n]+1e-8))}return new H(r.rows,r.cols,o)},D=function(r,t){for(var o=[],e=0;e<r.rows;e+=1){o[e]=[];for(var n=0;n<r.cols;n+=1)r.data&&(o[e][n]=Math.log(1-r.data[e][n]))}return new H(r.rows,r.cols,o)},N=function(r,t){for(var o=[],e=0;e<r.rows;e+=1){o[e]=[];for(var n=0;n<r.cols;n+=1)o[e][n]=r.data[e][n]+t}return new H(r.rows,r.cols,o)},B=function(r){for(var t=[],o=0;o<r.cols;o+=1){t[o]=[];for(var e=0;e<r.rows;e+=1)r.data&&(t[o][e]=r.data[e][o])}return new H(r.cols,r.rows,t)},W=function(r){!function(r,t){if(\"function\"!=typeof t&&null!==t)throw new TypeError(\"Super expression must either be null or a function\");r.prototype=Object.create(t&&t.prototype,{constructor:{value:r,writable:!0,configurable:!0}}),Object.defineProperty(r,\"prototype\",{writable:!1}),t&&h(r,t)}(a,r);var t,o,e,n=(o=a,e=function(){if(\"undefined\"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if(\"function\"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(r){return!1}}(),function(){var r,t=w(o);if(e){var n=w(this).constructor;r=Reflect.construct(t,arguments,n)}else r=t.apply(this,arguments);return v(this,r)});function a(){var r;return function(r,t){if(!(r instanceof t))throw new TypeError(\"Cannot call a class as a function\")}(this,a),(r=n.call(this)).addKernel(\"multiply\",j),r.addKernel(\"add\",P),r.addKernel(\"subtract\",E),r.addKernel(\"subtractFromNumber\",q),r.addKernel(\"fillRandom\",K),r.addKernel(\"fillZeros\",R),r.addKernel(\"elementWiseMultiply\",_),r.addKernel(\"multiplyNumber\",C),r.addKernel(\"elementWiseDivide\",d),r.addKernel(\"divideNumber\",y),r.addKernel(\"logisticActivation\",p),r.addKernel(\"logisticLoss\",m),r.addKernel(\"logisticBackpropagation\",b),r.addKernel(\"tanhActivation\",k),r.addKernel(\"reluActivation\",g),r.addKernel(\"reluBackpropagation\",O),r.addKernel(\"softplusActivation\",S),r.addKernel(\"penalty\",M),r.addKernel(\"sqrt\",x),r.addKernel(\"transpose\",B),r.addKernel(\"pow\",T),r.addKernel(\"log\",A),r.addKernel(\"logMinusOne\",D),r.addKernel(\"addNumber\",N),r}return t=a,Object.defineProperty(t,\"prototype\",{writable:!1}),t}(a),L=new W,I=function(r){L=r},Z=function(){return L};function z(r){return z=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(r){return typeof r}:function(r){return r&&\"function\"==typeof Symbol&&r.constructor===Symbol&&r!==Symbol.prototype?\"symbol\":typeof r},z(r)}function F(r,t){if(!(r instanceof t))throw new TypeError(\"Cannot call a class as a function\")}function U(r,t){for(var o=0;o<t.length;o++){var e=t[o];e.enumerable=e.enumerable||!1,e.configurable=!0,\"value\"in e&&(e.writable=!0),Object.defineProperty(r,$(e.key),e)}}function G(r,t,o){return(t=$(t))in r?Object.defineProperty(r,t,{value:o,enumerable:!0,configurable:!0,writable:!0}):r[t]=o,r}function $(r){var t=function(r,t){if(\"object\"!==z(r)||null===r)return r;var o=r[Symbol.toPrimitive];if(void 0!==o){var e=o.call(r,\"string\");if(\"object\"!==z(e))return e;throw new TypeError(\"@@toPrimitive must return a primitive value.\")}return String(r)}(r);return\"symbol\"===z(t)?t:String(t)}var H=function(){function r(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0,o=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,e=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null;F(this,r),G(this,\"rows\",0),G(this,\"cols\",0),G(this,\"data\",null),this.resize(t,o),e&&this.generateData(e)}var t,o,e;return t=r,o=[{key:\"resize\",value:function(r,t){this.rows=r,this.cols=t,this.data=new Array(this.rows);for(var o=0;o<this.rows;o+=1)this.data[o]=new Array(this.cols);return this}},{key:\"generateData\",value:function(r){for(var t=[],o=0;o<this.rows;o+=1)t[o]=new Array(this.cols);for(var e=0;e<this.cols;e+=1)for(var n=0;n<this.rows;n+=1)\"number\"==typeof r[n]?t[n][e]=r[n]:\"string\"==typeof r[n][e]&&/^[0-9.]+$/.test(String(r[n][e]))?t[n][e]=Number(r[n][e]):t[n][e]=r[n][e];return this.data=t,this}},{key:\"sum\",value:function(){for(var r=0,t=0;t<this.rows;t+=1)for(var o=0;o<this.cols;o+=1)r+=this.data[t][o];return r}},{key:\"colwiseSum\",value:function(){for(var t=[],o=this.transpose(),e=0;e<o.rows;e+=1){t[e]=[0];for(var n=0;n<o.cols;n+=1)t[e][0]+=o.data[e][n]}return new r(this.cols,1,t)}},{key:\"rowwiseSum\",value:function(){for(var t=[[]],o=0;o<this.rows;o+=1){for(var e=0,n=0;n<this.cols;n+=1)e+=this.data[o][n];t[0].push(e)}return new r(1,this.rows,t)}},{key:\"flatten\",value:function(){for(var r=[],t=0;t<this.rows;t+=1)for(var o=0;o<this.cols;o+=1)r.push(this.data[t][o]);return r}},{key:\"replicate\",value:function(t,o){if(1===t&&1===this.cols&&o>1){for(var e=[],n=0;n<this.rows;n+=1){e[n]=[];for(var a=0;a<o;a+=1)e[n][a]=this.data[n][0]}return r.from(e)}if(1===o&&1===this.rows&&t>1){for(var s=[],i=0;i<t;i+=1){s[i]=[];for(var c=0;c<this.cols;c+=1)s[i][c]=this.data[0][c]}return r.from(s)}return this}},{key:\"transpose\",value:function(){return Z().execute(\"transpose\",this)}},{key:\"colMaxCoeffIndex\",value:function(r){for(var t=-1,o=-1/0,e=0;e<this.rows;e+=1)this.data&&this.data[e][r]>o&&(o=this.data[e][r],t=e);return t}},{key:\"rowMaxCoeffIndex\",value:function(r){for(var t=-1,o=-1/0,e=0;e<this.cols;e+=1)this.data[r][e]>o&&(o=this.data[r][e],t=e);return t}},{key:\"block\",value:function(t,o,e,n){for(var a=[],s=t,i=0;s<this.rows&&s<t+e;s+=1,i+=1){a[i]=new Array(n);for(var c=o,u=0;c<this.cols&&c<o+n;c+=1,u+=1)a[i][u]=this.data[s][c]}return new r(e,n,a)}},{key:\"col\",value:function(t){for(var o=[],e=0;e<this.rows;e+=1)o[e]=[this.data[e][t]];return new r(this.rows,1,o)}},{key:\"row\",value:function(t){for(var o=[],e=0;e<this.cols;e+=1)o[e]=[this.data[t][e]];return new r(this.cols,1,o)}},{key:\"setCol\",value:function(r,t){for(var o=0;o<this.rows;o+=1)this.data&&t.data&&(this.data[o][r]=t.data[o][0]);return this}},{key:\"sigmoid\",value:function(){return this.multiply(-1).exp().add(1).fraction(1)}},{key:\"rollToColMatrix\",value:function(){for(var t=[],o=0,e=0;e<this.rows;e+=1)for(var n=0;n<this.cols;n+=1)t[o]=[],t[o++][0]=this.data[e][n];return r.from(t)}},{key:\"abs\",value:function(){for(var t=[],o=0;o<this.rows;o+=1){t[o]=[];for(var e=0;e<this.cols;e+=1)t[o][e]=Math.abs(this.data[o][e])}return r.from(t)}},{key:\"mean\",value:function(){for(var r=0,t=this.rows*this.cols,o=0;o<this.rows;o+=1)for(var e=0;e<this.cols;e+=1)r+=this.data[o][e];return r/t}},{key:\"max\",value:function(){for(var r=-1/0,t=0;t<this.rows;t+=1)for(var o=0;o<this.cols;o+=1)r=Math.max(this.data[t][o],r);return r}},{key:\"setMax\",value:function(t){for(var o=[],e=0;e<this.rows;e+=1){o[e]=[];for(var n=0;n<this.cols;n+=1)o[e][n]=Math.min(this.data[e][n],t)}return r.from(o)}},{key:\"setMin\",value:function(t){for(var o=[],e=0;e<this.rows;e+=1){o[e]=[];for(var n=0;n<this.cols;n+=1)o[e][n]=Math.max(this.data[e][n],t)}return r.from(o)}},{key:\"setZeros\",value:function(){for(var t=[],o=0;o<this.rows;o+=1){t[o]=[];for(var e=0;e<this.cols;e+=1)t[o][e]=0}return r.from(t)}},{key:\"setOnes\",value:function(){for(var t=[],o=0;o<this.rows;o+=1){t[o]=[];for(var e=0;e<this.cols;e+=1)t[o][e]=1}return r.from(t)}},{key:\"setRandom\",value:function(){for(var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:1,o=[],e=0;e<this.rows;e+=1){o[e]=[];for(var n=0;n<this.cols;n+=1)o[e][n]=(4*Math.random()-2)*Math.sqrt(2/t)}return r.from(o)}},{key:\"fraction\",value:function(){for(var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:1,o=[],e=0;e<this.rows;e+=1){o[e]=[];for(var n=0;n<this.cols;n+=1)o[e][n]=t/this.data[e][n]}return r.from(o)}},{key:\"sqrt\",value:function(){for(var t=[],o=0;o<this.rows;o+=1){t[o]=[];for(var e=0;e<this.cols;e+=1)t[o][e]=Math.sqrt(this.data[o][e]+1e-8)}return r.from(t)}},{key:\"dot\",value:function(r){return Z().execute(\"multiply\",this,r)}},{key:\"multiply\",value:function(t){if(\"number\"==typeof t){for(var o=[],e=0;e<this.rows;e+=1){o[e]=[];for(var n=0;n<this.cols;n+=1)o[e][n]=this.data[e][n]*t}return r.from(o)}if(t.rows!==this.rows||this.cols!==t.cols)throw new Error(\"Dimension error: \".concat(this.shape(),\" !== \").concat(t.shape()));for(var a=[],s=0;s<this.rows;s+=1){a[s]=[];for(var i=0;i<this.cols;i+=1)a[s][i]=this.data[s][i]*t.data[s][i]}return r.from(a)}},{key:\"subtract\",value:function(t){if(\"number\"==typeof t){for(var o=[],e=0;e<this.rows;e+=1){o[e]=[];for(var n=0;n<this.cols;n+=1)o[e][n]=this.data[e][n]-t}return r.from(o)}if(this.rows!==t.rows||this.cols!==t.cols)throw new Error(\"Dimensions error: \".concat(this.rows,\", \").concat(this.cols,\" !== \").concat(t.rows,\", \").concat(t.cols));for(var a=[],s=0;s<this.rows;s+=1){a[s]=[];for(var i=0;i<this.cols;i+=1)a[s][i]=this.data[s][i]-t.data[s][i]}return r.from(a)}},{key:\"forEach\",value:function(t){for(var o=[],e=0;e<this.rows;e+=1){o[e]=[];for(var n=0;n<this.cols;n+=1)o[e][n]=t(this.data[e][n])}return r.from(o)}},{key:\"shape\",value:function(){return[this.rows,this.cols]}},{key:\"divide\",value:function(t){if(\"number\"==typeof t){for(var o=[],e=0;e<this.rows;e+=1){o[e]=[];for(var n=0;n<this.cols;n+=1)o[e][n]=this.data[e][n]/t}return r.from(o)}if(t.rows!==this.rows||t.cols!==this.cols)throw new Error(\"Dimensions error (\".concat(this.rows,\", \").concat(this.cols,\") !== (\").concat(t.rows,\", \").concat(t.cols,\")\"));for(var a=[],s=0;s<this.rows;s+=1){a[s]=[];for(var i=0;i<this.cols;i+=1)a[s][i]=this.data[s][i]/t.data[s][i]}return r.from(a)}},{key:\"minusOne\",value:function(){for(var t=[],o=0;o<this.rows;o+=1){t[o]=[];for(var e=0;e<this.cols;e+=1)t[o][e]=1-this.data[o][e]}return r.from(t)}},{key:\"subtractFromNumber\",value:function(t){for(var o=[],e=0;e<this.rows;e+=1){o[e]=[];for(var n=0;n<this.cols;n+=1)o[e][n]=t-this.data[e][n]}return r.from(o)}},{key:\"add\",value:function(t){if(\"number\"==typeof t){for(var o=[],e=0;e<this.rows;e+=1){o[e]=[];for(var n=0;n<this.cols;n+=1)o[e][n]=this.data[e][n]+t}return r.from(o)}if(t instanceof r){if(t.rows!==this.rows||t.cols!==this.cols)throw new Error(\"Dimention error: rows (x: \".concat(this.rows,\", y: \").concat(this.cols,\") !== (x: \").concat(t.rows,\", y: \").concat(t.cols,\")\"));for(var a=[],s=0;s<this.rows;s+=1){a[s]=[];for(var i=0;i<this.cols;i+=1)a[s][i]=this.data[s][i]+t.data[s][i]}return r.from(a)}return this}},{key:\"log\",value:function(){for(var t=[],o=0;o<this.rows;o+=1){t[o]=[];for(var e=0;e<this.cols;e+=1)t[o][e]=Math.log(this.data[o][e]+1e-8)}return r.from(t)}},{key:\"tanh\",value:function(){return this.exp().subtract(this.multiply(-1).exp()).divide(this.exp().add(this.multiply(-1).exp()))}},{key:\"softmax\",value:function(){var r=this.max()-1e-8;return this.subtract(r).exp().divide(this.rowwiseSum().replicate(this.cols,1).transpose())}},{key:\"exp\",value:function(){for(var t=[],o=0;o<this.rows;o+=1){t[o]=[];for(var e=0;e<this.cols;e+=1)t[o][e]=Math.exp(this.data[o][e]+1e-8)}return r.from(t)}},{key:\"pow\",value:function(t){for(var o=[],e=0;e<this.rows;e+=1){o[e]=[];for(var n=0;n<this.cols;n+=1)o[e][n]=Math.pow(this.data[e][n],t)}return r.from(o)}},{key:\"value\",value:function(r,t){var o=arguments.length>2&&void 0!==arguments[2]?arguments[2]:void 0;return void 0===o?this.data[r][t]:(this.data[r][t]=o,this)}},{key:\"copy\",value:function(){return r.from(this.data)}}],e=[{key:\"from\",value:function(t){var o;return new r(t.length,(null===(o=t[0])||void 0===o?void 0:o.length)||0,t)}}],o&&U(t.prototype,o),e&&U(t,e),Object.defineProperty(t,\"prototype\",{writable:!1}),r}(),J=function(r,t,o,e,n,a,s,i,c,u){for(var f=0,l=new H(((e-a+2*i)/u+1)*((o-n+2*s)/c+1),a*n*t).setZeros(),h=-s;h+n<=o+s;h+=c)for(var v=-i;v+a<=e+i;v+=u){for(var w=0,d=0;d<t;d++)for(var y=o*e*d,p=0;p<n;p++)for(var m=0;m<a;m++)h+p>=0&&v+m>=0&&v+m<e&&h+p<o&&(l.data[f][w]=r.data[(p+h)*e+v+m+y][0]),w++;f++}return l},Q=function(r,t,o,e,n,a,s,i){for(var c=(e-a)/i+1,u=(o-n)/s+1,f=0,l=new H(c*u*t,1).setZeros(),h=0;h+n<=o;h+=s)for(var v=0;v+a<=e;v+=i){for(var w=0;w<t;w++){for(var d=-1/0,y=o*e*w,p=c*u*w,m=0;m<n;m++)for(var b=0;b<a;b++)d=Math.max(d,r.data[y+(m+h)*e+v+b][0]);l.data[p+f][0]=d}f++}return l},V=function(r,t){return Math.round((r+223e-18)*Math.pow(10,t))/Math.pow(10,t)};module.exports=t})();\n//# sourceMappingURL=impulse-math-ts.js.map","module.exports = require(\"fs\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import { NetworkBuilder1D, NetworkBuilder3D } from \"./NetworkBuilder\";\nimport {\n  SoftmaxLayer,\n  LogisticLayer,\n  ReluLayer,\n  SoftplusLayer,\n  TanhLayer,\n  ConvLayer,\n  FullyConnectedLayer,\n  MaxPoolLayer,\n  RecurrentLayer,\n  LSTMLayer,\n} from \"./Layer\";\nimport { Matrix } from \"impulse-math-ts\";\nimport {\n  OptimizerAdam,\n  OptimizerGradientDescent,\n  OptimizerAdagrad,\n  OptimizerMomentum,\n  OptimizerRMSProp,\n} from \"./Trainer/Optimizer\";\nimport { MiniBatchTrainer, Trainer as TrainerTrainer, RNNTrainer } from \"./Trainer\";\nimport { NetworkRNN } from \"./Network\";\n\nconst NetworkBuilder = { NetworkBuilder1D, NetworkBuilder3D };\nconst Math = {\n  Matrix,\n};\nconst Layer = {\n  SoftmaxLayer,\n  LogisticLayer,\n  ReluLayer,\n  SoftplusLayer,\n  TanhLayer,\n  ConvLayer,\n  MaxPoolLayer,\n  FullyConnectedLayer,\n  RecurrentLayer,\n  LSTMLayer,\n};\nconst Optimizer = {\n  OptimizerAdam,\n  OptimizerGradientDescent,\n  OptimizerAdagrad,\n  OptimizerMomentum,\n  OptimizerRMSProp,\n};\nconst Trainer = {\n  MiniBatchTrainer,\n  Trainer: TrainerTrainer,\n  RNNTrainer,\n};\nconst Network = {\n  NetworkRNN,\n};\n\nexport { NetworkBuilder, Math, Layer, Optimizer, Trainer, Network };\n"],"names":["AbstractLayer","backPropagation","value","width","height","depth","previousLayer","Matrix","AbstractLayer1D","W","b","A","Z","gW","gb","vW","vb","sW","sb","dW","db","resize","getHeight","getWidth","setRandom","setZeros","input","dot","add","replicate","cols","activation","is1D","setWidth","getSize","is3D","getOutputWidth","getOutputHeight","getOutputDepth","setHeight","pow","sum","AbstractLayer3D","setSize","dimension","setDepth","getDepth","AbstractBackPropagation","layer","Backpropagation1Dto1D","numberOfExamples","regularization","sigma","previousActivations","delta","transpose","divide","multiply","rowwiseSum","result","rows","Error","Backpropagation3Dto1D","LayerType","BackpropagationToMaxPool","BackpropagationToConv","BackpropagationFactory","getType","conv","maxpool","fullyconnected","getComputation","padding","getPadding","stride","getStride","filterSize","getFilterSize","outputWidth","outputHeight","outputDepth","inputWidth","inputHeight","inputDepth","tmpResult","execute","m","c","h","w","vertStart","vertEnd","horizStart","horizEnd","d","y","vertical","verticalPad","x","horizontal","horizontalPad","data","z","prevLayer","_max","Infinity","inputOffset","outputOffset","maxX","maxY","vStart","hStart","im2col","ConvLayer","numFilters","size","i","col","tmp","setCol","rollToColMatrix","setMin","FullyConnectedLayer","LSTMLayer","aPrev","cPrev","nx","ny","Wy","na","concat","ft","Wf","bf","sigmoid","it","Wi","bi","cct","Wc","bc","tanh","cNext","ot","Wo","bo","aNext","ytPred","by","softmax","daNext","dcNext","rnnlayer","LogisticLayer","exp","fraction","logistic","minusOne","MaxPoolLayer","pool","PurelinLayer","purelin","setOnes","RecurrentLayer","Wax","Waa","Wya","dWax","dWaa","dWya","dby","push","X","Y","dy","a","dTanh","ReluLayer","relu","SoftmaxLayer","SoftplusLayer","log","softplus","TanhLayer","fs","Network","dimensions","layers","output","forEach","forward","predictions","subtract","length","getBackPropagation","propagate","derivative","path","resultJSON","type","weights","JSON","stringify","Promise","resolve","reject","writeFile","err","console","error","NetworkLSTM","vocabularySize","sequenceLength","Math","charIndices","a0","nX","tX","nY","nA","Array","map","dataInput","row","t","from","_aNext","_cNext","_yt","da","tx","x1","NetworkRNN","dataset","indices","getCharIndices","newLineCharacter","chars","getChars","idx","counter","colMaxCoeffIndex","maxIndex","floor","random","join","yHat","loss","_a","_yHat","_dWax","_dWaa","_dWya","_db","_dby","_daNext","backward","setMax","learningRate","getDimensions","AbstractNetworkBuilder","network","layerClass","callback","lastLayer","firstLayerTransition","transition","configure","setBackPropagation","create","addLayer","NetworkBuilder1D","jsonPath","readFile","json","parse","toString","builder","layerData","createLayer","getNetwork","getLayers","NetworkBuilder3D","setFilterSize","setStride","setNumFilters","setPadding","AbstractTrainer","optimizer","undefined","iterations","verbose","verboseStep","stepCallback","inputDataset","outputDataset","getNumberOfExamples","accuracy","penalty","correctOutput","cost","index1","index2","round","MiniBatchTrainer","batchSize","numBatches","ceil","startTime","Date","getTime","startIterationTime","batch","offset","startIterationTime2","getBatch","setBatchSize","setLearningRate","setT","optimize","endIterationTime","endTime","currentResult","iteration","AbstractOptimizer","OptimizerAdagrad","adagrad","sqrt","OptimizerAdam","beta1","beta2","adam","vWCorrected","vbCorrected","sWCorrected","sbCorrected","OptimizerGradientDescent","gradientDescent","OptimizerMomentum","momentum","beta","OptimizerRMSProp","alpha","rmsprop","RNNTrainer","getVocabularySize","buildData","vectorization","index","_loss","currentLoss","_aPrev","sample","trim","num","Trainer","TrainerTrainer","NetworkBuilder","Layer","Optimizer"],"sourceRoot":""}