{"version":3,"file":"impulse-ts.js","mappings":"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","sources":["webpack://impulse-ts/./node_modules/impulse-math-ts/dist/impulse-math-ts.js","webpack://impulse-ts/external node-commonjs \"path\"","webpack://impulse-ts/webpack/bootstrap","webpack://impulse-ts/webpack/runtime/define property getters","webpack://impulse-ts/webpack/runtime/hasOwnProperty shorthand","webpack://impulse-ts/webpack/runtime/make namespace object","webpack://impulse-ts/external node-commonjs \"fs\"","webpack://impulse-ts/./src/typescript/Network/Network.ts","webpack://impulse-ts/./src/typescript/Network/NetworkRNN.ts","webpack://impulse-ts/./src/typescript/types.ts","webpack://impulse-ts/./src/typescript/Layer/Backpropagation/AbstractBackpropagation.ts","webpack://impulse-ts/./src/typescript/Layer/Backpropagation/Backpropagation1Dto1D.ts","webpack://impulse-ts/./src/typescript/Layer/Backpropagation/Backpropagation3Dto1D.ts","webpack://impulse-ts/./src/typescript/Layer/Backpropagation/BackpropagationToMaxPool.ts","webpack://impulse-ts/./src/typescript/Layer/Backpropagation/BackpropagationToConv.ts","webpack://impulse-ts/./src/typescript/Layer/Backpropagation/BackpropagationFactory.ts","webpack://impulse-ts/./src/typescript/Network/NetworkLSTM.ts","webpack://impulse-ts/./src/typescript/NetworkBuilder/AbstractNetworkBuilder.ts","webpack://impulse-ts/./src/typescript/Layer/AbstractLayer.ts","webpack://impulse-ts/./src/typescript/Layer/AbstractLayer1D.ts","webpack://impulse-ts/./src/typescript/Layer/Softmax.ts","webpack://impulse-ts/./src/typescript/Layer/Logistic.ts","webpack://impulse-ts/./src/typescript/Layer/Tanh.ts","webpack://impulse-ts/./src/typescript/Layer/Relu.ts","webpack://impulse-ts/./src/typescript/Layer/Softplus.ts","webpack://impulse-ts/./src/typescript/Layer/AbstractLayer3D.ts","webpack://impulse-ts/./src/typescript/Layer/Conv.ts","webpack://impulse-ts/./src/typescript/Layer/FullyConnected.ts","webpack://impulse-ts/./src/typescript/Layer/MaxPool.ts","webpack://impulse-ts/./src/typescript/Layer/Recurrent.ts","webpack://impulse-ts/./src/typescript/Layer/LSTM.ts","webpack://impulse-ts/./src/typescript/NetworkBuilder/NetworkBuilder1D.ts","webpack://impulse-ts/./src/typescript/NetworkBuilder/NetworkBuilder3D.ts","webpack://impulse-ts/./src/typescript/Trainer/Optimizer/AbstractOptimizer.ts","webpack://impulse-ts/./src/typescript/Trainer/Optimizer/OptimizerAdam.ts","webpack://impulse-ts/./src/typescript/Trainer/Optimizer/OptimizerGradientDescent.ts","webpack://impulse-ts/./src/typescript/Trainer/Optimizer/OptimizerAdagrad.ts","webpack://impulse-ts/./src/typescript/Trainer/Optimizer/OptimizerMomentum.ts","webpack://impulse-ts/./src/typescript/Trainer/Optimizer/OptimizerRMSProp.ts","webpack://impulse-ts/./src/typescript/Trainer/AbstractTrainer.ts","webpack://impulse-ts/./src/typescript/Trainer/MiniBatchTrainer.ts","webpack://impulse-ts/./src/typescript/Trainer/Trainer.ts","webpack://impulse-ts/./src/typescript/Trainer/RNNTrainer.ts","webpack://impulse-ts/./src/typescript/main.ts"],"sourcesContent":["(()=>{var t={382:(t,r,o)=>{t=o.nmd(t);try{process.dlopen(t,__dirname+o(17).sep+o.p+\"9e034ce62a57cddc1a2b4486c9983546.node\")}catch(t){throw new Error(\"node-loader:\\n\"+t)}},17:t=>{\"use strict\";t.exports=require(\"path\")}},r={};function o(e){var n=r[e];if(void 0!==n)return n.exports;var i=r[e]={id:e,loaded:!1,exports:{}};return t[e](i,i.exports,o),i.loaded=!0,i.exports}o.d=(t,r)=>{for(var e in r)o.o(r,e)&&!o.o(t,e)&&Object.defineProperty(t,e,{enumerable:!0,get:r[e]})},o.o=(t,r)=>Object.prototype.hasOwnProperty.call(t,r),o.r=t=>{\"undefined\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(t,\"__esModule\",{value:!0})},o.nmd=t=>(t.paths=[],t.children||(t.children=[]),t),o.p=\"\";var e={};(()=>{\"use strict\";function t(r){return t=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&\"function\"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?\"symbol\":typeof t},t(r)}function r(t,r){for(var o=0;o<r.length;o++){var e=r[o];e.enumerable=e.enumerable||!1,e.configurable=!0,\"value\"in e&&(e.writable=!0),Object.defineProperty(t,n(e.key),e)}}function n(r){var o=function(r,o){if(\"object\"!==t(r)||null===r)return r;var e=r[Symbol.toPrimitive];if(void 0!==e){var n=e.call(r,\"string\");if(\"object\"!==t(n))return n;throw new TypeError(\"@@toPrimitive must return a primitive value.\")}return String(r)}(r);return\"symbol\"===t(o)?o:String(o)}o.r(e),o.d(e,{ComputationCPU:()=>b,ComputationMultiCore:()=>h,Matrix:()=>E,getComputation:()=>g,im2col:()=>_,maxpool:()=>C,round:()=>R,setComputation:()=>O});var i=function(){function t(){var r,o,e;!function(t,r){if(!(t instanceof r))throw new TypeError(\"Cannot call a class as a function\")}(this,t),r=this,e={},(o=n(o=\"kernels\"))in r?Object.defineProperty(r,o,{value:e,enumerable:!0,configurable:!0,writable:!0}):r[o]=e}var o,e;return o=t,e=[{key:\"addKernel\",value:function(t,r){return this.kernels[t]=r,this}},{key:\"execute\",value:function(t){if(!this.kernels[t])throw new Error(\"Kernel '\".concat(t,\"' not exists.\"));for(var r=arguments.length,o=new Array(r>1?r-1:0),e=1;e<r;e++)o[e-1]=arguments[e];return this.kernels[t].apply(null,o)}}],e&&r(o.prototype,e),Object.defineProperty(o,\"prototype\",{writable:!1}),t}(),a=o(382),s=function(t,r){console.log((0,a.MatrixMultiply)([1,2,3,4],[4,3,2,1]))};function u(t){return u=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&\"function\"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?\"symbol\":typeof t},u(t)}function f(t,r){return f=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(t,r){return t.__proto__=r,t},f(t,r)}function c(t,r){if(r&&(\"object\"===u(r)||\"function\"==typeof r))return r;if(void 0!==r)throw new TypeError(\"Derived constructors may only return object or undefined\");return function(t){if(void 0===t)throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");return t}(t)}function l(t){return l=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(t){return t.__proto__||Object.getPrototypeOf(t)},l(t)}var h=function(t){!function(t,r){if(\"function\"!=typeof r&&null!==r)throw new TypeError(\"Super expression must either be null or a function\");t.prototype=Object.create(r&&r.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),Object.defineProperty(t,\"prototype\",{writable:!1}),r&&f(t,r)}(i,t);var r,o,e,n=(o=i,e=function(){if(\"undefined\"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if(\"function\"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(t){return!1}}(),function(){var t,r=l(o);if(e){var n=l(this).constructor;t=Reflect.construct(r,arguments,n)}else t=r.apply(this,arguments);return c(this,t)});function i(){var t;return function(t,r){if(!(t instanceof r))throw new TypeError(\"Cannot call a class as a function\")}(this,i),(t=n.call(this)).addKernel(\"dot\",s),t}return r=i,Object.defineProperty(r,\"prototype\",{writable:!1}),r}(i),v=function(t,r){if(t.cols!==r.rows)throw new Error(\"DIMENSIONS error. m1.cols \".concat(t.rows,\" \").concat(t.cols,\" !== m2.rows \").concat(r.rows,\" \").concat(r.cols,\".\"));for(var o=[],e=0;e<t.rows;++e){o[e]=new Array(r.cols);for(var n=0;n<r.cols;++n){o[e][n]=0;for(var i=0;i<t.cols;++i)t.data&&r.data&&(o[e][n]+=t.data[e][i]*r.data[i][n])}}return new E(t.rows,r.cols,o)},y=function(t){for(var r=[],o=0;o<t.cols;++o){r[o]=new Array(t.rows);for(var e=0;e<t.rows;++e)r[o][e]=t.data[e][o]}return new E(t.cols,t.rows,r)};function p(t){return p=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&\"function\"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?\"symbol\":typeof t},p(t)}function d(t,r){return d=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(t,r){return t.__proto__=r,t},d(t,r)}function w(t,r){if(r&&(\"object\"===p(r)||\"function\"==typeof r))return r;if(void 0!==r)throw new TypeError(\"Derived constructors may only return object or undefined\");return function(t){if(void 0===t)throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");return t}(t)}function m(t){return m=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(t){return t.__proto__||Object.getPrototypeOf(t)},m(t)}var b=function(t){!function(t,r){if(\"function\"!=typeof r&&null!==r)throw new TypeError(\"Super expression must either be null or a function\");t.prototype=Object.create(r&&r.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),Object.defineProperty(t,\"prototype\",{writable:!1}),r&&d(t,r)}(i,t);var r,o,e,n=(o=i,e=function(){if(\"undefined\"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if(\"function\"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(t){return!1}}(),function(){var t,r=m(o);if(e){var n=m(this).constructor;t=Reflect.construct(r,arguments,n)}else t=r.apply(this,arguments);return w(this,t)});function i(){var t;return function(t,r){if(!(t instanceof r))throw new TypeError(\"Cannot call a class as a function\")}(this,i),(t=n.call(this)).addKernel(\"dot\",v),t.addKernel(\"transpose\",y),t}return r=i,Object.defineProperty(r,\"prototype\",{writable:!1}),r}(i),k=new b,O=function(t){k=t},g=function(){return k};function x(t){return x=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&\"function\"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?\"symbol\":typeof t},x(t)}function S(t,r){if(!(t instanceof r))throw new TypeError(\"Cannot call a class as a function\")}function j(t,r){for(var o=0;o<r.length;o++){var e=r[o];e.enumerable=e.enumerable||!1,e.configurable=!0,\"value\"in e&&(e.writable=!0),Object.defineProperty(t,M(e.key),e)}}function P(t,r,o){return(r=M(r))in t?Object.defineProperty(t,r,{value:o,enumerable:!0,configurable:!0,writable:!0}):t[r]=o,t}function M(t){var r=function(t,r){if(\"object\"!==x(t)||null===t)return t;var o=t[Symbol.toPrimitive];if(void 0!==o){var e=o.call(t,\"string\");if(\"object\"!==x(e))return e;throw new TypeError(\"@@toPrimitive must return a primitive value.\")}return String(t)}(t);return\"symbol\"===x(r)?r:String(r)}var E=function(){function t(){var r=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0,o=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,e=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null;S(this,t),P(this,\"rows\",0),P(this,\"cols\",0),P(this,\"data\",null),this.resize(r,o),e&&this.generateData(e)}var r,o,e;return r=t,o=[{key:\"resize\",value:function(t,r){this.rows=t,this.cols=r,this.data=new Array(this.rows);for(var o=0;o<this.rows;o+=1)this.data[o]=new Array(this.cols);return this}},{key:\"generateData\",value:function(t){for(var r=[],o=0;o<this.rows;o+=1)r[o]=new Array(this.cols);for(var e=0;e<this.cols;e+=1)for(var n=0;n<this.rows;n+=1)\"number\"==typeof t[n]?r[n][e]=t[n]:\"string\"==typeof t[n][e]&&/^[0-9.]+$/.test(String(t[n][e]))?r[n][e]=Number(t[n][e]):r[n][e]=t[n][e];return this.data=r,this}},{key:\"sum\",value:function(){for(var t=0,r=0;r<this.rows;r+=1)for(var o=0;o<this.cols;o+=1)t+=this.data[r][o];return t}},{key:\"colwiseSum\",value:function(){for(var r=[],o=this.transpose(),e=0;e<o.rows;e+=1){r[e]=[0];for(var n=0;n<o.cols;n+=1)r[e][0]+=o.data[e][n]}return new t(this.cols,1,r)}},{key:\"rowwiseSum\",value:function(){for(var r=[[]],o=0;o<this.rows;o+=1){for(var e=0,n=0;n<this.cols;n+=1)e+=this.data[o][n];r[0].push(e)}return new t(1,this.rows,r)}},{key:\"flatten\",value:function(){for(var t=[],r=0;r<this.rows;r+=1)for(var o=0;o<this.cols;o+=1)t.push(this.data[r][o]);return t}},{key:\"replicate\",value:function(r,o){if(1===r&&1===this.cols&&o>1){for(var e=[],n=0;n<this.rows;n+=1){e[n]=[];for(var i=0;i<o;i+=1)e[n][i]=this.data[n][0]}return t.from(e)}if(1===o&&1===this.rows&&r>1){for(var a=[],s=0;s<r;s+=1){a[s]=[];for(var u=0;u<this.cols;u+=1)a[s][u]=this.data[0][u]}return t.from(a)}return this}},{key:\"transpose\",value:function(){return g().execute(\"transpose\",this)}},{key:\"colMaxCoeffIndex\",value:function(t){for(var r=-1,o=-1/0,e=0;e<this.rows;e+=1)this.data&&this.data[e][t]>o&&(o=this.data[e][t],r=e);return r}},{key:\"rowMaxCoeffIndex\",value:function(t){for(var r=-1,o=-1/0,e=0;e<this.cols;e+=1)this.data[t][e]>o&&(o=this.data[t][e],r=e);return r}},{key:\"block\",value:function(r,o,e,n){for(var i=[],a=r,s=0;a<this.rows&&a<r+e;a+=1,s+=1){i[s]=new Array(n);for(var u=o,f=0;u<this.cols&&u<o+n;u+=1,f+=1)i[s][f]=this.data[a][u]}return new t(e,n,i)}},{key:\"col\",value:function(r){for(var o=[],e=0;e<this.rows;e+=1)o[e]=[this.data[e][r]];return new t(this.rows,1,o)}},{key:\"row\",value:function(r){for(var o=[],e=0;e<this.cols;e+=1)o[e]=[this.data[r][e]];return new t(this.cols,1,o)}},{key:\"setCol\",value:function(t,r){for(var o=0;o<this.rows;o+=1)this.data&&r.data&&(this.data[o][t]=r.data[o][0]);return this}},{key:\"sigmoid\",value:function(){return this.multiply(-1).exp().add(1).fraction(1)}},{key:\"rollToColMatrix\",value:function(){for(var r=[],o=0,e=0;e<this.rows;e+=1)for(var n=0;n<this.cols;n+=1)r[o]=[],r[o++][0]=this.data[e][n];return t.from(r)}},{key:\"abs\",value:function(){for(var r=[],o=0;o<this.rows;o+=1){r[o]=[];for(var e=0;e<this.cols;e+=1)r[o][e]=Math.abs(this.data[o][e])}return t.from(r)}},{key:\"mean\",value:function(){for(var t=0,r=this.rows*this.cols,o=0;o<this.rows;o+=1)for(var e=0;e<this.cols;e+=1)t+=this.data[o][e];return t/r}},{key:\"max\",value:function(){for(var t=-1/0,r=0;r<this.rows;r+=1)for(var o=0;o<this.cols;o+=1)t=Math.max(this.data[r][o],t);return t}},{key:\"setMax\",value:function(r){for(var o=[],e=0;e<this.rows;e+=1){o[e]=[];for(var n=0;n<this.cols;n+=1)o[e][n]=Math.min(this.data[e][n],r)}return t.from(o)}},{key:\"setMin\",value:function(r){for(var o=[],e=0;e<this.rows;e+=1){o[e]=[];for(var n=0;n<this.cols;n+=1)o[e][n]=Math.max(this.data[e][n],r)}return t.from(o)}},{key:\"setZeros\",value:function(){for(var r=[],o=0;o<this.rows;o+=1){r[o]=[];for(var e=0;e<this.cols;e+=1)r[o][e]=0}return t.from(r)}},{key:\"setOnes\",value:function(){for(var r=[],o=0;o<this.rows;o+=1){r[o]=[];for(var e=0;e<this.cols;e+=1)r[o][e]=1}return t.from(r)}},{key:\"setRandom\",value:function(){for(var r=arguments.length>0&&void 0!==arguments[0]?arguments[0]:1,o=[],e=0;e<this.rows;e+=1){o[e]=[];for(var n=0;n<this.cols;n+=1)o[e][n]=(4*Math.random()-2)*Math.sqrt(2/r)}return t.from(o)}},{key:\"fraction\",value:function(){for(var r=arguments.length>0&&void 0!==arguments[0]?arguments[0]:1,o=[],e=0;e<this.rows;e+=1){o[e]=[];for(var n=0;n<this.cols;n+=1)o[e][n]=r/this.data[e][n]}return t.from(o)}},{key:\"sqrt\",value:function(){for(var r=[],o=0;o<this.rows;o+=1){r[o]=[];for(var e=0;e<this.cols;e+=1)r[o][e]=Math.sqrt(this.data[o][e]+1e-8)}return t.from(r)}},{key:\"dot\",value:function(t){return g().execute(\"dot\",this,t)}},{key:\"multiply\",value:function(r){if(\"number\"==typeof r){for(var o=[],e=0;e<this.rows;e+=1){o[e]=[];for(var n=0;n<this.cols;n+=1)o[e][n]=this.data[e][n]*r}return t.from(o)}if(r.rows!==this.rows||this.cols!==r.cols)throw new Error(\"Dimension error: \".concat(this.shape(),\" !== \").concat(r.shape()));for(var i=[],a=0;a<this.rows;a+=1){i[a]=[];for(var s=0;s<this.cols;s+=1)i[a][s]=this.data[a][s]*r.data[a][s]}return t.from(i)}},{key:\"subtract\",value:function(r){if(\"number\"==typeof r){for(var o=[],e=0;e<this.rows;e+=1){o[e]=[];for(var n=0;n<this.cols;n+=1)o[e][n]=this.data[e][n]-r}return t.from(o)}if(this.rows!==r.rows||this.cols!==r.cols)throw new Error(\"Dimensions error: \".concat(this.rows,\", \").concat(this.cols,\" !== \").concat(r.rows,\", \").concat(r.cols));for(var i=[],a=0;a<this.rows;a+=1){i[a]=[];for(var s=0;s<this.cols;s+=1)i[a][s]=this.data[a][s]-r.data[a][s]}return t.from(i)}},{key:\"forEach\",value:function(r){for(var o=[],e=0;e<this.rows;e+=1){o[e]=[];for(var n=0;n<this.cols;n+=1)o[e][n]=r(this.data[e][n])}return t.from(o)}},{key:\"shape\",value:function(){return[this.rows,this.cols]}},{key:\"divide\",value:function(r){if(\"number\"==typeof r){for(var o=[],e=0;e<this.rows;e+=1){o[e]=[];for(var n=0;n<this.cols;n+=1)o[e][n]=this.data[e][n]/r}return t.from(o)}if(r.rows!==this.rows||r.cols!==this.cols)throw new Error(\"Dimensions error (\".concat(this.rows,\", \").concat(this.cols,\") !== (\").concat(r.rows,\", \").concat(r.cols,\")\"));for(var i=[],a=0;a<this.rows;a+=1){i[a]=[];for(var s=0;s<this.cols;s+=1)i[a][s]=this.data[a][s]/r.data[a][s]}return t.from(i)}},{key:\"minusOne\",value:function(){for(var r=[],o=0;o<this.rows;o+=1){r[o]=[];for(var e=0;e<this.cols;e+=1)r[o][e]=1-this.data[o][e]}return t.from(r)}},{key:\"subtractFromNumber\",value:function(r){for(var o=[],e=0;e<this.rows;e+=1){o[e]=[];for(var n=0;n<this.cols;n+=1)o[e][n]=r-this.data[e][n]}return t.from(o)}},{key:\"add\",value:function(r){if(\"number\"==typeof r){for(var o=[],e=0;e<this.rows;e+=1){o[e]=[];for(var n=0;n<this.cols;n+=1)o[e][n]=this.data[e][n]+r}return t.from(o)}if(r instanceof t){if(r.rows!==this.rows||r.cols!==this.cols)throw new Error(\"Dimention error: rows (x: \".concat(this.rows,\", y: \").concat(this.cols,\") !== (x: \").concat(r.rows,\", y: \").concat(r.cols,\")\"));for(var i=[],a=0;a<this.rows;a+=1){i[a]=[];for(var s=0;s<this.cols;s+=1)i[a][s]=this.data[a][s]+r.data[a][s]}return t.from(i)}return this}},{key:\"log\",value:function(){for(var r=[],o=0;o<this.rows;o+=1){r[o]=[];for(var e=0;e<this.cols;e+=1)r[o][e]=Math.log(this.data[o][e]+1e-8)}return t.from(r)}},{key:\"tanh\",value:function(){return this.exp().subtract(this.multiply(-1).exp()).divide(this.exp().add(this.multiply(-1).exp()))}},{key:\"softmax\",value:function(){var t=this.max()-1e-8;return this.subtract(t).exp().divide(this.rowwiseSum().replicate(this.cols,1).transpose())}},{key:\"exp\",value:function(){for(var r=[],o=0;o<this.rows;o+=1){r[o]=[];for(var e=0;e<this.cols;e+=1)r[o][e]=Math.exp(this.data[o][e]+1e-8)}return t.from(r)}},{key:\"pow\",value:function(r){for(var o=[],e=0;e<this.rows;e+=1){o[e]=[];for(var n=0;n<this.cols;n+=1)o[e][n]=Math.pow(this.data[e][n],r)}return t.from(o)}},{key:\"value\",value:function(t,r){var o=arguments.length>2&&void 0!==arguments[2]?arguments[2]:void 0;return void 0===o?this.data[t][r]:(this.data[t][r]=o,this)}},{key:\"copy\",value:function(){return t.from(this.data)}},{key:\"concat\",value:function(t){for(var r=0;r<t.rows;r+=1)this.data.push(t.data[r]);return this}}],e=[{key:\"from\",value:function(r){var o;return new t(r.length,(null===(o=r[0])||void 0===o?void 0:o.length)||0,r)}}],o&&j(r.prototype,o),e&&j(r,e),Object.defineProperty(r,\"prototype\",{writable:!1}),t}(),_=function(t,r,o,e,n,i,a,s,u,f){for(var c=0,l=new E(((e-i+2*s)/f+1)*((o-n+2*a)/u+1),i*n*r).setZeros(),h=-a;h+n<=o+a;h+=u)for(var v=-s;v+i<=e+s;v+=f){for(var y=0,p=0;p<r;p++)for(var d=o*e*p,w=0;w<n;w++)for(var m=0;m<i;m++)h+w>=0&&v+m>=0&&v+m<e&&h+w<o&&(l.data[c][y]=t.data[(w+h)*e+v+m+d][0]),y++;c++}return l},C=function(t,r,o,e,n,i,a,s){for(var u=(e-i)/s+1,f=(o-n)/a+1,c=0,l=new E(u*f*r,1).setZeros(),h=0;h+n<=o;h+=a)for(var v=0;v+i<=e;v+=s){for(var y=0;y<r;y++){for(var p=-1/0,d=o*e*y,w=u*f*y,m=0;m<n;m++)for(var b=0;b<i;b++)p=Math.max(p,t.data[d+(m+h)*e+v+b][0]);l.data[w+c][0]=p}c++}return l},R=function(t,r){return Math.round((t+223e-18)*Math.pow(10,r))/Math.pow(10,r)}})(),module.exports=e})();\n//# sourceMappingURL=impulse-math-ts.js.map","module.exports = require(\"path\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"fs\");","import { Dimension, Layers } from \"../types\";\nimport { Matrix } from \"impulse-math-ts\";\nimport * as fs from \"fs\";\n\nclass Network {\n  private readonly dimensions: Dimension | null = null;\n  private size = 0;\n  private layers: Layers[] = [];\n\n  constructor(dimensions: Dimension) {\n    this.dimensions = dimensions;\n  }\n\n  addLayer(layer: Layers): Network {\n    this.size++;\n    this.layers.push(layer);\n\n    return this;\n  }\n\n  getLayers(): Layers[] {\n    return this.layers;\n  }\n\n  forward(input: Matrix): Matrix {\n    let output = input;\n\n    this.layers.forEach((layer: Layers) => {\n      output = layer.forward(output);\n    });\n\n    return output;\n  }\n\n  backward(X: Matrix, Y: Matrix, regularization: number): void {\n    const m = X.cols;\n    const predictions = this.forward(X);\n    //let sigma = Y.divide(predictions).multiply(-1).subtract(Y.minusOne().divide(predictions.minusOne()));\n    let sigma = predictions.subtract(Y);\n\n    for (let layer = this.layers.length - 1; layer >= 0; layer -= 1) {\n      sigma = this.layers[layer]\n        .getBackPropagation()\n        .propagate(X, m, regularization, this.layers[layer], this.layers[layer].derivative(sigma));\n    }\n  }\n\n  save(path: string): Promise<string> {\n    const resultJSON = {\n      dimensions: this.dimensions,\n      layers: [],\n    };\n\n    this.layers.forEach((layer: Layers) => {\n      resultJSON.layers.push({\n        type: layer.getType(),\n        size: layer.getSize(),\n        weights: {\n          W: layer.W.data,\n          b: layer.b.data,\n        },\n      });\n    });\n\n    const result = JSON.stringify(resultJSON);\n\n    return new Promise((resolve, reject) => {\n      fs.writeFile(path, result, (err) => {\n        if (err) {\n          console.error(err);\n          reject();\n        }\n        resolve(result);\n      });\n    });\n  }\n}\n\nexport { Network };\nexport default Network;\n","import { Dimension, LayersRNN } from \"../types\";\nimport { Matrix } from \"impulse-math-ts\";\nimport { DatasetVocabulary } from \"impulse-dataset-ts/src/typescript/Dataset/DatasetVocabulary\";\n\nexport class NetworkRNN {\n  private readonly dimensions: Dimension | null = null;\n  private size = 0;\n  private layers: LayersRNN[] = [];\n\n  constructor(dimensions: Dimension) {\n    this.dimensions = dimensions;\n  }\n\n  addLayer(layer: LayersRNN): NetworkRNN {\n    this.size++;\n    this.layers.push(layer);\n\n    return this;\n  }\n\n  getLayers(): LayersRNN[] {\n    return this.layers;\n  }\n\n  loss(vocabularySize: number, sequenceLength: number): number {\n    return -Math.log(1 / vocabularySize) * sequenceLength;\n  }\n\n  sample(dataset: DatasetVocabulary) {\n    const Waa = this.layers[0].Waa;\n    const Wax = this.layers[0].Wax;\n    const Wya = this.layers[0].Wya;\n    const by = this.layers[0].by;\n    const b = this.layers[0].b;\n    const indices = [];\n    const charIndices = dataset.getCharIndices();\n    const newLineCharacter = charIndices[\"\\n\"];\n    const chars = dataset.getChars();\n\n    let x = new Matrix(this.dimensions[1], 1).setZeros();\n    let aPrev = new Matrix(this.dimensions[0], 1).setRandom(this.dimensions[1]);\n\n    let idx = -1;\n    let counter = 0;\n\n    while (idx != newLineCharacter && counter != 50) {\n      const a = Wax.dot(x).add(Waa.dot(aPrev)).add(b).setMin(1e-3).tanh();\n      const z = Wya.dot(a).add(by);\n      const y = z.softmax();\n\n      idx = charIndices[chars[y.colMaxCoeffIndex(0)]];\n      x = new Matrix(this.dimensions[1], 1).setZeros();\n      let maxIndex = y.colMaxCoeffIndex(0);\n      if (maxIndex === -1) {\n        maxIndex = Math.floor(Math.random() * this.dimensions[1]);\n        idx = charIndices[chars[maxIndex]];\n      }\n      x.data[maxIndex][0] = 1;\n\n      indices.push(idx);\n      aPrev = a;\n\n      counter += 1;\n    }\n\n    if (counter === 50) {\n      indices.push(newLineCharacter);\n    }\n\n    return indices\n      .map((i) => {\n        return chars[i];\n      })\n      .join(\"\");\n  }\n\n  forward(X: Matrix, Y: Matrix, a0: Matrix): [number] {\n    const x = [null];\n    const a = [a0];\n    const yHat = [null];\n    let loss = 0;\n    for (let t = 1; t <= X.rows; t += 1) {\n      x[t] = new Matrix(this.dimensions[1], this.dimensions[0]).setZeros();\n      x[t].data[X.data[t - 1][0]][0] = 1;\n      const [_a, _yHat] = this.layers[0].forward(x[t], a[t - 1]);\n      a[t] = _a;\n      yHat[t] = _yHat; //.setMin(1e-5);\n      loss += 0; // todo\n    }\n    this.layers[0].A = a;\n    this.layers[0].X = x;\n    this.layers[0].Y = yHat;\n    return [loss];\n  }\n\n  backward(X: Matrix): void {\n    const a = this.layers[0].A;\n    const x = this.layers[0].X;\n    const yHat = this.layers[0].Y;\n\n    let _dWax = new Matrix(this.layers[0].Wax.rows, this.layers[0].Wax.cols).setZeros();\n    let _dWaa = new Matrix(this.layers[0].Waa.rows, this.layers[0].Waa.cols).setZeros();\n    let _dWya = new Matrix(this.layers[0].Wya.rows, this.layers[0].Wya.cols).setZeros();\n    let _db = new Matrix(this.layers[0].db.rows, this.layers[0].db.cols).setZeros();\n    let _dby = new Matrix(this.layers[0].dby.rows, this.layers[0].dby.cols).setZeros();\n    let _daNext = new Matrix(this.layers[0].daNext.rows, this.layers[0].daNext.rows).setZeros();\n\n    for (let t = X.rows - 1; t >= 1; t -= 1) {\n      // loop over examples\n      const dy = Matrix.from(a[t].data);\n      dy.data[X.data[t - 1][0]][0] -= 1;\n      const { dWax, dWya, dWaa, db, dby, daNext } = this.layers[0].backward(dy, x[t], a[t], a[t - 1]);\n      _dWax = _dWax.add(dWax.replicate(1, _dWax.cols));\n      _dWaa = _dWaa.add(dWaa.replicate(1, _dWaa.cols));\n      _dWya = _dWya.add(dWya);\n      _db = _db.add(db);\n      _dby = _dby.add(dby);\n      _daNext = _daNext.add(daNext);\n    }\n\n    // gradient clipping\n    this.layers[0].dWax = _dWax.setMin(-5).setMax(5);\n    this.layers[0].dWaa = _dWaa.setMin(-5).setMax(5);\n    this.layers[0].dWya = _dWya.setMin(-5).setMax(5);\n    this.layers[0].db = _dby.setMin(-5).setMax(5);\n    this.layers[0].dby = _dby.setMin(-5).setMax(5);\n    this.layers[0].daNext = _daNext.setMin(-5).setMax(5);\n  }\n\n  optimize(X: Matrix, Y: Matrix, aPrev: Matrix, learningRate: number): [number, Matrix] {\n    const [loss] = this.forward(X, Y, aPrev);\n    this.backward(X);\n\n    this.layers[0].Wax = this.layers[0].Wax.add(\n      this.layers[0].dWax.replicate(1, this.getDimensions()[2]).multiply(-learningRate)\n    );\n    this.layers[0].Waa = this.layers[0].Waa.add(this.layers[0].dWaa.multiply(-learningRate));\n    this.layers[0].Wya = this.layers[0].Wya.add(this.layers[0].dWya.multiply(-learningRate));\n    //this.layers[0].b = this.layers[0].b.add(this.layers[0].db.multiply(-learningRate));\n    //this.layers[0].by = this.layers[0].by.add(\n    //  this.layers[0].dby.multiply(-learningRate).rowwiseSum().divide(this.layers[0].dby.cols).transpose()\n    //);\n\n    return [loss, this.layers[0].A[X.rows - 1]];\n  }\n\n  getDimensions(): Dimension {\n    return this.dimensions;\n  }\n\n  /*save(path: string): Promise<string> {\n    const resultJSON = {\n      dimensions: this.dimensions,\n      layers: [],\n    };\n\n    this.layers.forEach((layer: Layers) => {\n      resultJSON.layers.push({\n        type: layer.getType(),\n        size: layer.getSize(),\n        weights: {\n          W: layer.W.data,\n          b: layer.b.data,\n        },\n      });\n    });\n\n    const result = JSON.stringify(resultJSON);\n\n    return new Promise((resolve, reject) => {\n      fs.writeFile(path, result, (err) => {\n        if (err) {\n          console.error(err);\n          reject();\n        }\n        resolve(result);\n      });\n    });\n  }*/\n}\n","import { SoftmaxLayer, LogisticLayer, TanhLayer, ReluLayer, SoftplusLayer, AbstractLayer } from \"./Layer\";\nimport { ConvLayer } from \"./Layer/\";\nimport { MaxPoolLayer } from \"./Layer/\";\nimport { FullyConnectedLayer } from \"./Layer/\";\nimport { PurelinLayer } from \"./Layer\";\nimport { AbstractLayer3D } from \"./Layer/AbstractLayer3D\";\nimport { AbstractLayer1D } from \"./Layer/AbstractLayer1D\";\nimport { RecurrentLayer } from \"./Layer\";\nimport { LSTMLayer } from \"./Layer\";\n\nexport type Dimension = [number] | [number, number, number];\n\nexport enum LayerType {\n  logistic = \"logistic\",\n  softmax = \"softmax\",\n  tanh = \"tanh\",\n  relu = \"relu\",\n  softplus = \"softplus\",\n  conv = \"conv\",\n  maxpool = \"maxpool\",\n  fullyconnected = \"fullyconnected\",\n  purelin = \"purelin\",\n  rnnlayer = \"rnnlayer\",\n}\n\nexport type Layers =\n  | LogisticLayer\n  | SoftmaxLayer\n  | TanhLayer\n  | ReluLayer\n  | SoftplusLayer\n  | ConvLayer\n  | MaxPoolLayer\n  | FullyConnectedLayer\n  | PurelinLayer\n  | AbstractLayer3D\n  | AbstractLayer1D;\nexport type Layers1D = LogisticLayer | SoftmaxLayer | TanhLayer | ReluLayer | SoftplusLayer | PurelinLayer;\nexport type Layers3D = ConvLayer | MaxPoolLayer | FullyConnectedLayer | AbstractLayer3D;\nexport type LayersRNN = RecurrentLayer;\nexport type LayersLSTM = LSTMLayer;\n","import { Layers } from \"../../types\";\nimport { Matrix } from \"../../Math/Matrix\";\n\nexport abstract class AbstractBackPropagation {\n  protected layer: Layers | null = null;\n  protected previousLayer: Layers | null = null;\n\n  constructor(layer: Layers | null, previousLayer: Layers) {\n    this.layer = layer;\n    this.previousLayer = previousLayer;\n  }\n\n  abstract propagate(\n    input: Matrix,\n    numberOfExamples: number,\n    regularization: number,\n    layer: Layers,\n    sigma: Matrix\n  ): Matrix;\n}\n","import { AbstractBackPropagation } from \"./AbstractBackpropagation\";\nimport { Matrix } from \"impulse-math-ts\";\nimport { Layers } from \"../../types\";\n\nexport class Backpropagation1Dto1D extends AbstractBackPropagation {\n  propagate(input: Matrix, numberOfExamples: number, regularization: number, layer: Layers, sigma: Matrix): Matrix {\n    const previousActivations = this.previousLayer !== null ? this.previousLayer.A : input;\n\n    const delta = sigma.dot(previousActivations.transpose());\n    this.layer.gW = delta.divide(numberOfExamples).add(layer.W.multiply(regularization / numberOfExamples));\n    this.layer.gb = sigma.rowwiseSum().transpose().divide(numberOfExamples);\n\n    if (this.previousLayer !== null) {\n      // @ts-ignore\n      const result = this.layer.W.transpose().dot(sigma);\n      if (result.rows !== previousActivations.rows || result.cols !== previousActivations.cols) {\n        throw new Error(\n          `Dimension error 1. (${result.rows}, ${result.cols}) | (${previousActivations.rows}, ${previousActivations.cols})`\n        );\n      }\n      if (this.layer.gW.rows !== this.layer.W.rows || this.layer.gW.cols !== this.layer.W.cols) {\n        throw new Error(\n          `Dimension error 2. (${this.layer.gW.rows}, ${this.layer.gW.cols}) | (${this.layer.W.rows}, ${this.layer.W.cols})`\n        );\n      }\n      if (this.layer.gb.rows !== this.layer.b.rows || this.layer.gb.cols !== this.layer.b.cols) {\n        throw new Error(\n          `Dimension error 3. (${this.layer.gb.rows}, ${this.layer.gb.cols}) | (${this.layer.b.rows}, ${this.layer.b.cols})`\n        );\n      }\n      return result;\n    }\n    return new Matrix();\n  }\n}\n","import { AbstractBackPropagation } from \"./AbstractBackpropagation\";\nimport { Matrix } from \"../../Math/Matrix\";\nimport { Layers } from \"../../types\";\n\nexport class Backpropagation3Dto1D extends AbstractBackPropagation {\n  propagate(input: Matrix, numberOfExamples: number, regularization: number, layer: Layers, sigma: Matrix): Matrix {\n    return sigma;\n  }\n}\n","import { AbstractBackPropagation } from \"./AbstractBackpropagation\";\nimport { Matrix } from \"impulse-math-ts\";\nimport { Layers, Layers3D } from \"../../types\";\nimport { getComputation } from \"impulse-math-ts\";\n\nexport class BackpropagationToMaxPool extends AbstractBackPropagation {\n  protected previousLayer: Layers3D | null = null;\n\n  propagate(input: Matrix, numberOfExamples: number, regularization: number, layer: Layers, sigma: Matrix): Matrix {\n    const prevLayer = this.previousLayer;\n    if (prevLayer) {\n      const result = getComputation().execute(\"fillZeros\", new Matrix(prevLayer.Z.rows, prevLayer.Z.cols)) as Matrix;\n\n      const filterSize = prevLayer.getFilterSize();\n      const stride = prevLayer.getStride();\n      const inputWidth = prevLayer.getWidth();\n      const inputHeight = prevLayer.getHeight();\n      const inputDepth = prevLayer.getDepth();\n      const outputWidth = prevLayer.getOutputWidth();\n      const outputHeight = prevLayer.getOutputHeight();\n      const outputDepth = prevLayer.getOutputDepth();\n\n      for (let m = 0; m < numberOfExamples; m++) {\n        for (let c = 0; c < outputDepth; c++) {\n          for (let h = 0; h < outputHeight; h++) {\n            for (let w = 0; w < outputWidth; w++) {\n              const vertStart = stride * h;\n              const vertEnd = vertStart + filterSize;\n              const horizStart = stride * w;\n              const horizEnd = horizStart + filterSize;\n\n              let _max = -Infinity;\n              const inputOffset = inputHeight * inputWidth * c;\n              const outputOffset = outputHeight * outputWidth * c;\n              let maxX = 0;\n              let maxY = 0;\n\n              for (let y = 0, vStart = vertStart; y < filterSize; y++, vStart++) {\n                for (let x = 0, hStart = horizStart; x < filterSize; x++, hStart++) {\n                  if (prevLayer.Z.data && _max < prevLayer.Z.data[inputOffset + vStart * inputWidth + hStart][m]) {\n                    _max = prevLayer.Z.data[inputOffset + vStart * inputWidth + hStart][m];\n                    maxX = hStart;\n                    maxY = vStart;\n                  }\n                }\n              }\n\n              if (result.data && sigma.data) {\n                result.data[inputOffset + maxY * inputWidth + maxX][m] =\n                  sigma.data[outputOffset + h * outputWidth + w][m];\n              }\n            }\n          }\n        }\n      }\n\n      return result;\n    }\n\n    return new Matrix();\n  }\n}\n","import { AbstractBackPropagation } from \"./AbstractBackpropagation\";\nimport { Matrix } from \"impulse-math-ts\";\nimport { Layers, Layers3D } from \"../../types\";\nimport { getComputation } from \"impulse-math-ts\";\n\nexport class BackpropagationToConv extends AbstractBackPropagation {\n  protected previousLayer: Layers3D | null = null;\n\n  propagate(input: Matrix, numberOfExamples: number, regularization: number, layer: Layers, sigma: Matrix): Matrix {\n    const previousLayer = this.previousLayer;\n\n    if (previousLayer) {\n      const padding = previousLayer.getPadding();\n      const stride = previousLayer.getStride();\n      const filterSize = previousLayer.getFilterSize();\n      const outputWidth = previousLayer.getOutputWidth();\n      const outputHeight = previousLayer.getOutputHeight();\n      const outputDepth = previousLayer.getOutputDepth();\n      const inputWidth = previousLayer.getWidth();\n      const inputHeight = previousLayer.getHeight();\n      const inputDepth = previousLayer.getDepth();\n\n      const tmpResult = getComputation().execute(\n        \"fillZeros\",\n        new Matrix((inputWidth + 2 * padding) * (inputHeight + 2 * padding) * inputDepth, numberOfExamples)\n      ) as Matrix;\n\n      const result = new Matrix(inputWidth * inputHeight * inputDepth, numberOfExamples);\n\n      previousLayer.gW = getComputation().execute(\"fillZeros\", previousLayer.gW) as Matrix;\n      previousLayer.gb = getComputation().execute(\"fillZeros\", previousLayer.gb) as Matrix;\n\n      for (let m = 0; m < numberOfExamples; m++) {\n        for (let c = 0; c < outputDepth; c++) {\n          for (let h = 0; h < outputHeight; h++) {\n            for (let w = 0; w < outputWidth; w++) {\n              const vertStart = stride * h;\n              const vertEnd = vertStart + filterSize;\n              const horizStart = stride * w;\n              const horizEnd = horizStart + filterSize;\n\n              // filter loop\n              for (let d = 0; d < inputDepth; d++) {\n                for (\n                  let y = 0, vertical = vertStart, verticalPad = -padding;\n                  y < filterSize;\n                  y++, vertical++, verticalPad++\n                ) {\n                  for (\n                    let x = 0, horizontal = horizStart, horizontalPad = -padding;\n                    x < filterSize;\n                    x++, horizontal++, horizontalPad++\n                  ) {\n                    if (previousLayer.W.data && tmpResult.data && sigma.data) {\n                      tmpResult.data[\n                        d * (inputWidth + 2 * padding) * (inputHeight + 2 * padding) +\n                          vertical * (inputWidth + 2 * padding) +\n                          horizontal\n                      ][m] +=\n                        previousLayer.W.data[c][d * filterSize * filterSize + y * filterSize + x] *\n                        sigma.data[c * outputWidth * outputHeight + h * outputWidth + w][m];\n                    }\n\n                    let z = 0;\n                    if (padding == 0) {\n                      if (previousLayer.Z.data) {\n                        z = previousLayer.Z.data[d * inputWidth * inputHeight + vertical * inputWidth + horizontal][m];\n                      }\n                    } else {\n                      if (\n                        verticalPad >= 0 &&\n                        horizontalPad >= 0 &&\n                        verticalPad < inputHeight &&\n                        horizontalPad < inputWidth\n                      ) {\n                        if (previousLayer.Z.data) {\n                          z =\n                            previousLayer.Z.data[\n                              d * inputWidth * inputHeight + verticalPad * inputWidth + horizontalPad\n                            ][m];\n                        }\n                      }\n                    }\n\n                    if (previousLayer.gW.data && sigma.data) {\n                      previousLayer.gW.data[c][d * filterSize * filterSize + y * filterSize + x] +=\n                        (z * sigma.data[c * (outputWidth * outputHeight) + h * outputWidth + w][m]) / numberOfExamples;\n                    }\n                  }\n                }\n              }\n\n              if (previousLayer.gb.data && sigma.data) {\n                previousLayer.gb.data[c][0] +=\n                  sigma.data[c * (outputWidth * outputHeight) + h * outputWidth + w][m] / numberOfExamples;\n              }\n            }\n          }\n        }\n\n        if (padding > 0) {\n          // unpad\n          for (let c = 0; c < inputDepth; c++) {\n            for (let h = -padding, y = 0; h < inputHeight + padding; h++, y++) {\n              for (let w = -padding, x = 0; w < inputWidth + padding; w++, x++) {\n                if (w >= 0 && h >= 0 && w < inputWidth && h < inputHeight && result.data && tmpResult.data) {\n                  result.data[c * inputWidth * inputHeight + h * inputWidth + w][m] =\n                    tmpResult.data[\n                      c * (inputWidth + 2 * padding) * (inputHeight + 2 * padding) + y * (inputWidth + 2 * padding) + x\n                    ][m];\n                }\n              }\n            }\n          }\n        }\n      }\n\n      if (padding > 0) {\n        return result;\n      }\n\n      return tmpResult;\n    }\n  }\n}\n","import { Layers, LayerType } from \"../../types\";\nimport { Backpropagation1Dto1D } from \"./Backpropagation1Dto1D\";\nimport { Backpropagation3Dto1D } from \"./Backpropagation3Dto1D\";\nimport { BackpropagationToMaxPool } from \"./BackpropagationToMaxPool\";\nimport { BackpropagationToConv } from \"./BackpropagationToConv\";\nimport { AbstractBackPropagation } from \"./AbstractBackpropagation\";\n\nexport class BackpropagationFactory {\n  static create(previousLayer: Layers, layer: Layers): AbstractBackPropagation | null {\n    if (previousLayer == null) {\n      if (layer.is1D()) {\n        return new Backpropagation1Dto1D(layer, previousLayer);\n      } else if (layer.getType() == LayerType.conv) {\n        return new Backpropagation3Dto1D(layer, previousLayer);\n      }\n    } else {\n      if (previousLayer.getType() == LayerType.maxpool) {\n        return new BackpropagationToMaxPool(layer, previousLayer);\n      } else if (previousLayer.getType() == LayerType.conv) {\n        return new BackpropagationToConv(layer, previousLayer);\n      } else if (previousLayer.is1D() || previousLayer.getType() == LayerType.fullyconnected) {\n        return new Backpropagation1Dto1D(layer, previousLayer);\n      }\n    }\n    return null;\n  }\n}\n","import { Dimension, Layers, LayersLSTM } from \"../types\";\nimport { Matrix } from \"impulse-math-ts\";\n\nexport class NetworkLSTM {\n  private readonly dimensions: Dimension | null = null;\n  private size = 0;\n  private layers: LayersLSTM[] = [];\n\n  constructor(dimensions: Dimension) {\n    this.dimensions = dimensions;\n  }\n\n  addLayer(layer: LayersLSTM): NetworkLSTM {\n    this.size++;\n    this.layers.push(layer);\n\n    return this;\n  }\n\n  getLayers(): LayersLSTM[] {\n    return this.layers;\n  }\n\n  loss(vocabularySize: number, sequenceLength: number): number {\n    return -Math.log(1 / vocabularySize) * sequenceLength;\n  }\n\n  sample(charIndices: Object) {}\n\n  forward(X: Matrix[], a0: Matrix): Matrix[] {\n    const nX = X.length;\n    const m = X[0].rows;\n    const tX = X[0].cols;\n    const nY = this.layers[0].Wy.rows;\n    const nA = this.layers[0].Wy.cols;\n\n    const a = new Array(nA).map(() => {\n      return new Matrix(m, tX).setZeros();\n    });\n    const c = new Array(nA).map(() => {\n      return new Matrix(m, tX).setZeros();\n    });\n    const y = new Array(nY).map(() => {\n      return new Matrix(m, tX).setZeros();\n    });\n\n    let aNext = a0;\n    let cNext = new Matrix(nA, m).setZeros();\n\n    for (let t = 0; t < tX; t += 1) {\n      const dataInput = [];\n      X.forEach((m: Matrix, i) => {\n        dataInput[i] = [];\n        for (let row = 0; row < m.rows; row += 1) {\n          dataInput[i].push(m.data[row][t]);\n        }\n      });\n      const input = Matrix.from(dataInput);\n      const [_aNext, _cNext, _yt] = this.layers[0].forward(input, aNext, cNext);\n    }\n  }\n\n  backward(da: Matrix[]): void {\n    const na = da.length;\n    const m = da[0].rows;\n    const tx = da[0].cols;\n    const nx = this.layers[0].x1.rows;\n\n    for (let t = tx - 1; t >= 0; t -= 1) {\n      //this.layers[0].backward(_da, dcPrevT);\n    }\n  }\n\n  /*save(path: string): Promise<string> {\n    const resultJSON = {\n      dimensions: this.dimensions,\n      layers: [],\n    };\n\n    this.layers.forEach((layer: Layers) => {\n      resultJSON.layers.push({\n        type: layer.getType(),\n        size: layer.getSize(),\n        weights: {\n          W: layer.W.data,\n          b: layer.b.data,\n        },\n      });\n    });\n\n    const result = JSON.stringify(resultJSON);\n\n    return new Promise((resolve, reject) => {\n      fs.writeFile(path, result, (err) => {\n        if (err) {\n          console.error(err);\n          reject();\n        }\n        resolve(result);\n      });\n    });\n  }*/\n}\n","import { Dimension, Layers } from \"../types\";\nimport { Network, NetworkRNN, Networks } from \"../Network\";\nimport { BackpropagationFactory } from \"../Layer/Backpropagation/BackpropagationFactory\";\nimport { NetworkLSTM } from \"../Network/NetworkLSTM\";\nimport { DatasetVocabulary } from \"../Dataset/DatasetVocabulary\";\n\nabstract class AbstractNetworkBuilder {\n  protected dimensions: Dimension | null = null;\n  protected lastLayer: Layers | null = null;\n  protected network: Networks | null = null;\n\n  constructor(dimension: Dimension, type = \"DNN\") {\n    this.dimensions = dimension;\n\n    if (type === \"DNN\") {\n      this.network = new Network(this.dimensions);\n    } else if (type === \"RNN\") {\n      this.network = new NetworkRNN(this.dimensions);\n    } else if (type === \"LSTM\") {\n      this.network = new NetworkLSTM(this.dimensions);\n    }\n  }\n\n  createLayer(layerClass: Layers, callback: (layer: Layers) => void | null = null): AbstractNetworkBuilder {\n    // @ts-ignore\n    const layer: Layers = new layerClass();\n\n    if (typeof callback === \"function\") {\n      callback(layer);\n    }\n\n    if (this.lastLayer === null) {\n      this.firstLayerTransition(layer);\n    } else {\n      // @ts-ignore\n      layer.transition(this.lastLayer);\n    }\n\n    layer.configure();\n    layer.setBackPropagation(BackpropagationFactory.create(this.lastLayer, layer));\n\n    this.network.addLayer(layer);\n    this.lastLayer = layer;\n\n    return this;\n  }\n\n  getNetwork(): Networks | null {\n    return this.network;\n  }\n\n  abstract firstLayerTransition(layer: Layers): void;\n}\n\nexport { AbstractNetworkBuilder };\n","import { Matrix } from \"impulse-math-ts\";\nimport { Dimension, Layers } from \"../types\";\nimport { AbstractBackPropagation } from \"./Backpropagation/AbstractBackpropagation\";\n\nabstract class AbstractLayer {\n  protected width = 0;\n  protected height = 0;\n  protected depth = 0;\n  protected previousLayer: Layers | null = null;\n  protected backPropagation: AbstractBackPropagation | null = null;\n\n  constructor() {}\n\n  setBackPropagation(backPropagation: AbstractBackPropagation): Layers {\n    this.backPropagation = backPropagation;\n    return this;\n  }\n\n  getBackPropagation(): AbstractBackPropagation | null {\n    return this.backPropagation;\n  }\n\n  setWidth(value: number): Layers {\n    this.width = value;\n    return this;\n  }\n\n  getWidth(): number {\n    return this.width;\n  }\n\n  setHeight(value: number): Layers {\n    this.height = value;\n    return this;\n  }\n\n  getHeight(): number {\n    return this.height;\n  }\n\n  setDepth(value: number): Layers {\n    this.depth = value;\n    return this;\n  }\n\n  getDepth(): number {\n    return this.depth;\n  }\n\n  abstract getOutputWidth(): number;\n\n  abstract getOutputHeight(): number;\n\n  abstract getOutputDepth(): number;\n\n  abstract configure(): void;\n\n  abstract is1D(): boolean;\n\n  abstract is3D(): boolean;\n\n  transition(previousLayer: Layers): Layers {\n    this.previousLayer = previousLayer;\n    return this;\n  }\n\n  abstract getSize(): Dimension | number;\n\n  abstract activation(value: Matrix): Matrix;\n\n  abstract getType(): string;\n\n  abstract derivative(delta: Matrix): Matrix;\n\n  abstract penalty(): number;\n}\n\nexport { AbstractLayer };\n","import { AbstractLayer } from \"./AbstractLayer\";\nimport { Layers } from \"../types\";\nimport { Matrix } from \"impulse-math-ts\";\n\nabstract class AbstractLayer1D extends AbstractLayer {\n  protected depth = 1;\n  public W: Matrix;\n  public b: Matrix;\n  public A: Matrix;\n  public Z: Matrix;\n  public gW: Matrix;\n  public gb: Matrix;\n  public vW: Matrix;\n  public sW: Matrix;\n  public vb: Matrix;\n  public sb: Matrix;\n  public dW: Matrix;\n  public db: Matrix;\n  public dZ: Matrix;\n\n  constructor() {\n    super();\n    this.W = new Matrix();\n    this.b = new Matrix();\n    this.A = new Matrix();\n    this.Z = new Matrix();\n    this.gW = new Matrix();\n    this.gb = new Matrix();\n    this.vW = new Matrix();\n    this.vb = new Matrix();\n    this.sW = new Matrix();\n    this.sb = new Matrix();\n    this.dW = new Matrix();\n    this.db = new Matrix();\n  }\n\n  configure(): void {\n    this.W.resize(this.getHeight(), this.getWidth());\n    this.W = this.W.setRandom(this.previousLayer ? (this.previousLayer.getHeight() as number) : this.getHeight());\n\n    this.b.resize(this.getHeight(), 1);\n    this.b = this.b.setRandom(this.previousLayer ? (this.previousLayer.getHeight() as number) : this.getHeight());\n\n    this.gW.resize(this.getHeight(), this.getWidth());\n    this.gW = this.gW.setZeros();\n\n    this.gb.resize(this.getHeight(), 1);\n    this.gb = this.gb.setZeros();\n\n    this.sW.resize(this.getHeight(), this.getWidth());\n    this.sW = this.sW.setZeros();\n\n    this.sb.resize(this.getHeight(), 1);\n    this.sb = this.sb.setZeros();\n\n    this.vW.resize(this.getHeight(), this.getWidth());\n    this.vW = this.vW.setZeros();\n\n    this.vb.resize(this.getHeight(), 1);\n    this.vb = this.vb.setZeros();\n\n    this.dW.resize(this.getHeight(), this.getWidth());\n    this.dW = this.dW.setZeros();\n\n    this.db.resize(this.getHeight(), 1);\n    this.db = this.db.setZeros();\n  }\n\n  forward(input: Matrix): Matrix {\n    this.Z = this.W.dot(input).add(this.b.replicate(1, input.cols));\n    this.A = this.activation(this.Z);\n    return this.A;\n  }\n\n  is1D(): boolean {\n    return true;\n  }\n\n  is3D(): boolean {\n    return false;\n  }\n\n  transition(previousLayer: Layers): AbstractLayer1D {\n    if (previousLayer.is1D()) {\n      this.setWidth(previousLayer.getSize() as number);\n    } else if (previousLayer.is3D()) {\n      this.setWidth(previousLayer.getOutputWidth() * previousLayer.getOutputHeight() * previousLayer.getOutputDepth());\n    }\n\n    super.transition(previousLayer);\n\n    return this;\n  }\n\n  setSize(value: number): AbstractLayer1D {\n    this.setHeight(value as number);\n\n    return this;\n  }\n\n  getSize(): number {\n    return this.height;\n  }\n\n  getOutputWidth(): number {\n    return this.width;\n  }\n\n  getOutputHeight(): number {\n    return this.height;\n  }\n\n  getOutputDepth(): number {\n    return 1;\n  }\n\n  penalty(): number {\n    return this.W.pow(2).sum();\n  }\n}\n\nexport { AbstractLayer1D };\n","import { Matrix } from \"impulse-math-ts\";\nimport { LayerType } from \"../types\";\nimport { AbstractLayer1D } from \"./AbstractLayer1D\";\n\nclass SoftmaxLayer extends AbstractLayer1D {\n  activation(m: Matrix): Matrix {\n    return m.softmax();\n  }\n\n  getType(): LayerType {\n    return LayerType.softmax;\n  }\n\n  derivative(delta: Matrix): Matrix {\n    return delta.multiply(-1).add(1).fraction(1);\n  }\n}\n\nexport { SoftmaxLayer };\n","import { Matrix } from \"impulse-math-ts\";\nimport { LayerType } from \"../types\";\nimport { AbstractLayer1D } from \"./AbstractLayer1D\";\n\nclass LogisticLayer extends AbstractLayer1D {\n  activation(m: Matrix): Matrix {\n    return m.multiply(-1).exp().add(1).fraction(1);\n  }\n\n  getType(): LayerType {\n    return LayerType.logistic;\n  }\n\n  derivative(delta: Matrix): Matrix {\n    return delta.multiply(this.activation(delta).multiply(this.activation(delta.minusOne())));\n  }\n}\n\nexport { LogisticLayer };\n","import { Matrix } from \"impulse-math-ts\";\nimport { LayerType } from \"../types\";\nimport { AbstractLayer1D } from \"./AbstractLayer1D\";\n\nclass TanhLayer extends AbstractLayer1D {\n  activation(m: Matrix): Matrix {\n    return m.tanh();\n  }\n\n  getType(): LayerType {\n    return LayerType.tanh;\n  }\n\n  derivative(sigma: Matrix): Matrix {\n    return this.activation(sigma).pow(2).minusOne();\n  }\n}\n\nexport { TanhLayer };\n","import { Matrix } from \"impulse-math-ts\";\nimport { LayerType } from \"../types\";\nimport { AbstractLayer1D } from \"./AbstractLayer1D\";\nimport { getComputation } from \"impulse-math-ts\";\n\nclass ReluLayer extends AbstractLayer1D {\n  activation(m: Matrix): Matrix {\n    return m.setMin(0.0);\n  }\n\n  getType(): LayerType {\n    return LayerType.relu;\n  }\n\n  derivative(delta: Matrix) {\n    return getComputation().execute(\"reluBackpropagation\", delta, this.A) as Matrix;\n  }\n}\n\nexport { ReluLayer };\n","import { Matrix } from \"impulse-math-ts\";\nimport { LayerType } from \"../types\";\nimport { AbstractLayer1D } from \"./AbstractLayer1D\";\n\nclass SoftplusLayer extends AbstractLayer1D {\n  activation(m: Matrix): Matrix {\n    return m.exp().add(1).log();\n  }\n\n  getType(): LayerType {\n    return LayerType.softplus;\n  }\n\n  derivative(delta: Matrix): Matrix {\n    return delta.multiply(-1).exp().add(1).fraction(1);\n  }\n}\n\nexport { SoftplusLayer };\n","import { AbstractLayer } from \"./AbstractLayer\";\nimport { Dimension, Layers } from \"../types\";\nimport { Matrix } from \"impulse-math-ts\";\n\nabstract class AbstractLayer3D extends AbstractLayer {\n  public W: Matrix;\n  public b: Matrix;\n  public A: Matrix;\n  public Z: Matrix;\n  public gW: Matrix;\n  public gb: Matrix;\n  public vW: Matrix;\n  public sW: Matrix;\n  public vb: Matrix;\n  public sb: Matrix;\n  public dW: Matrix;\n  public db: Matrix;\n  public dZ: Matrix;\n\n  constructor() {\n    super();\n    this.W = new Matrix();\n    this.b = new Matrix();\n    this.A = new Matrix();\n    this.Z = new Matrix();\n    this.gW = new Matrix();\n    this.gb = new Matrix();\n    this.vW = new Matrix();\n    this.vb = new Matrix();\n    this.sW = new Matrix();\n    this.sb = new Matrix();\n    this.dW = new Matrix();\n    this.db = new Matrix();\n  }\n\n  configure(): void {\n    // do nothing\n  }\n\n  is1D(): boolean {\n    return false;\n  }\n\n  is3D(): boolean {\n    return true;\n  }\n\n  transition(previousLayer: Layers): Layers {\n    if (previousLayer.is3D()) {\n      this.setSize([previousLayer.getOutputWidth(), previousLayer.getOutputHeight(), previousLayer.getOutputDepth()]);\n    }\n\n    super.transition(previousLayer);\n\n    return this;\n  }\n\n  setSize(dimension: Dimension | number): Layers {\n    this.setWidth(dimension[0]);\n    this.setHeight(dimension[1]);\n    this.setDepth(dimension[2]);\n\n    return this;\n  }\n\n  getSize(): Dimension {\n    return [this.getWidth(), this.getHeight(), this.getDepth()];\n  }\n\n  abstract getPadding(): number;\n\n  abstract getStride(): number;\n\n  abstract getFilterSize(): number;\n\n  abstract forward(input: Matrix): Matrix;\n\n  abstract derivative(delta: Matrix): Matrix;\n\n  penalty(): number {\n    return this.W.pow(2).sum();\n  }\n}\n\nexport { AbstractLayer3D };\n","import { Matrix, im2col, getComputation } from \"impulse-math-ts\";\nimport { LayerType } from \"../types\";\nimport { AbstractLayer3D } from \"./AbstractLayer3D\";\n\nexport class ConvLayer extends AbstractLayer3D {\n  protected numFilters = 32;\n  protected filterSize = 4;\n  protected padding = 1;\n  protected stride = 1;\n\n  configure(): void {\n    this.W.resize(this.numFilters, this.filterSize * this.filterSize * this.depth);\n    this.W = this.W.setRandom(this.getOutputWidth() * this.getOutputHeight() * this.getOutputDepth());\n\n    this.b.resize(this.numFilters, 1);\n    this.b = this.b.setRandom(this.getOutputWidth() * this.getOutputHeight() * this.getOutputDepth());\n\n    this.gW.resize(this.numFilters, this.filterSize * this.filterSize * this.depth);\n    this.gW = this.gW.setZeros();\n\n    this.gb.resize(this.numFilters, 1);\n    this.gb = this.gb.setZeros();\n\n    this.sW.resize(this.numFilters, this.filterSize * this.filterSize * this.depth);\n    this.sW = this.sW.setZeros();\n\n    this.sb.resize(this.numFilters, 1);\n    this.sb = this.sb.setZeros();\n\n    this.vW.resize(this.numFilters, this.filterSize * this.filterSize * this.depth);\n    this.vW = this.vW.setZeros();\n\n    this.vb.resize(this.numFilters, 1);\n    this.vb = this.vb.setZeros();\n  }\n\n  getOutputHeight(): number {\n    return (this.width - this.filterSize + 2 * this.padding) / this.stride + 1;\n  }\n\n  getOutputWidth(): number {\n    return (this.height - this.filterSize + 2 * this.padding) / this.stride + 1;\n  }\n\n  getOutputDepth(): number {\n    return this.numFilters;\n  }\n\n  setFilterSize(size: number): ConvLayer {\n    this.filterSize = size;\n    return this;\n  }\n\n  getFilterSize(): number {\n    return this.filterSize;\n  }\n\n  setNumFilters(numFilters: number): ConvLayer {\n    this.numFilters = numFilters;\n    return this;\n  }\n\n  getNumFilters(): number {\n    return this.numFilters;\n  }\n\n  setPadding(padding: number): ConvLayer {\n    this.padding = padding;\n    return this;\n  }\n\n  getPadding(): number {\n    return this.padding;\n  }\n\n  setStride(stride: number): ConvLayer {\n    this.stride = stride;\n    return this;\n  }\n\n  getStride(): number {\n    return this.stride;\n  }\n\n  forward(input: Matrix): Matrix {\n    const result = new Matrix(\n      this.getOutputWidth() * this.getOutputHeight() * this.getOutputDepth(),\n      input.cols\n    ).setZeros();\n\n    for (let i = 0; i < input.cols; i += 1) {\n      const conv = im2col(\n        input.col(i),\n        this.depth,\n        this.height,\n        this.width,\n        this.filterSize,\n        this.filterSize,\n        this.padding,\n        this.padding,\n        this.stride,\n        this.stride\n      );\n\n      const tmp = this.W.dot(conv.transpose()).add(this.b.replicate(1, conv.rows));\n      result.setCol(i, tmp.rollToColMatrix());\n    }\n\n    this.Z = result;\n    this.A = this.activation(this.Z);\n\n    return this.A;\n  }\n\n  activation(m: Matrix): Matrix {\n    return m.setMin(0);\n  }\n\n  getType(): LayerType {\n    return LayerType.conv;\n  }\n\n  derivative(delta: Matrix) {\n    return getComputation().execute(\"reluBackpropagation\", delta, this.A) as Matrix;\n  }\n}\n","import { Dimension, LayerType } from \"../types\";\nimport { ConvLayer } from \"./Conv\";\n\nclass FullyConnectedLayer extends ConvLayer {\n  transition(previousLayer: FullyConnectedLayer): FullyConnectedLayer {\n    if (previousLayer.is3D()) {\n      if (previousLayer.getType() == LayerType.maxpool) {\n        this.filterSize = previousLayer.getOutputWidth();\n        this.padding = 0;\n        this.stride = 1;\n        this.width = previousLayer.getOutputWidth();\n        this.height = previousLayer.getOutputHeight();\n        this.depth = previousLayer.getOutputDepth();\n        this.numFilters =\n          previousLayer.getOutputWidth() * previousLayer.getOutputHeight() * previousLayer.getOutputDepth();\n      } else {\n        throw new Error(\"Invalid usage. Cannot fully connect with previous non maxpool Layer.\");\n      }\n    } else {\n      throw new Error(\"Invalid usage. Cannot fully connect with previous 1D Layer.\");\n    }\n\n    return this;\n  }\n\n  setSize(dimension: Dimension): FullyConnectedLayer {\n    return this;\n  }\n\n  setFilterSize(filterSize: number): FullyConnectedLayer {\n    return this;\n  }\n\n  setStride(stride: number): FullyConnectedLayer {\n    return this;\n  }\n\n  setPadding(padding: number): FullyConnectedLayer {\n    return this;\n  }\n\n  setWidth(value: number): FullyConnectedLayer {\n    return this;\n  }\n\n  setHeight(value: number): FullyConnectedLayer {\n    return this;\n  }\n\n  setDepth(value: number): FullyConnectedLayer {\n    return this;\n  }\n\n  setNumFilters(value: number): FullyConnectedLayer {\n    return this;\n  }\n}\n\nexport { FullyConnectedLayer };\n","import { Matrix } from \"impulse-math-ts\";\nimport { maxpool } from \"impulse-math-ts\";\nimport { LayerType } from \"../types\";\nimport { AbstractLayer3D } from \"./AbstractLayer3D\";\n\nclass MaxPoolLayer extends AbstractLayer3D {\n  filterSize = 0;\n  stride = 0;\n\n  configure(): void {\n    // do nothing\n  }\n\n  getOutputHeight(): number {\n    return (this.height - this.filterSize) / this.stride + 1;\n  }\n\n  getOutputWidth(): number {\n    return (this.width - this.filterSize) / this.stride + 1;\n  }\n\n  getOutputDepth(): number {\n    return this.depth;\n  }\n\n  setFilterSize(size: number): MaxPoolLayer {\n    this.filterSize = size;\n    return this;\n  }\n\n  getFilterSize(): number {\n    return this.filterSize;\n  }\n\n  setStride(stride: number): MaxPoolLayer {\n    this.stride = stride;\n    return this;\n  }\n\n  getStride(): number {\n    return this.stride;\n  }\n\n  getPadding(): number {\n    return 0;\n  }\n\n  forward(input: Matrix): Matrix {\n    const result = new Matrix(this.getOutputWidth() * this.getOutputHeight() * this.getOutputDepth(), input.cols);\n\n    for (let i = 0; i < input.cols; i += 1) {\n      const pool = maxpool(\n        input.col(i),\n        this.depth,\n        this.height,\n        this.width,\n        this.filterSize,\n        this.filterSize,\n        this.stride,\n        this.stride\n      );\n\n      result.setCol(i, pool.rollToColMatrix());\n    }\n\n    this.Z = result;\n    this.A = this.activation(this.Z);\n\n    return this.A;\n  }\n\n  activation(m: Matrix): Matrix {\n    return m;\n  }\n\n  getType(): LayerType {\n    return LayerType.maxpool;\n  }\n\n  derivative(delta: Matrix): Matrix {\n    return delta;\n  }\n}\n\nexport { MaxPoolLayer };\n","import { Matrix } from \"impulse-math-ts\";\nimport { Dimension, LayerType } from \"../types\";\nimport { AbstractLayer } from \"./AbstractLayer\";\n\nexport interface GradientResult {\n  dWax: Matrix;\n  dWya: Matrix;\n  dWaa: Matrix;\n  db: Matrix;\n  dby: Matrix;\n  daNext: Matrix;\n}\n\nexport class RecurrentLayer extends AbstractLayer {\n  public Wax: Matrix | null = null;\n  public Waa: Matrix | null = null;\n  public Wya: Matrix | null = null;\n  public b: Matrix | null = null;\n  public by: Matrix | null = null;\n  public dWax: Matrix | null = null;\n  public dWaa: Matrix | null = null;\n  public dWya: Matrix | null = null;\n  public db: Matrix | null = null;\n  public dby: Matrix | null = null;\n  public Y: Matrix[] = [];\n  public A: Matrix[] = [];\n  public X: Matrix[] = [];\n  public aNext: Matrix | null = null;\n  public aPrev: Matrix | null = null;\n  public daNext: Matrix | null = null;\n\n  configure(): void {\n    this.Wax = new Matrix(this.getWidth(), this.getHeight());\n    this.Wax = this.Wax.setRandom(this.getWidth());\n\n    this.Waa = new Matrix(this.getWidth(), this.getWidth());\n    this.Waa = this.Waa.setRandom(this.getWidth());\n\n    this.Wya = new Matrix(this.getDepth(), this.getWidth());\n    this.Wya = this.Wya.setRandom(this.getDepth());\n\n    this.b = new Matrix(this.getWidth(), 1);\n    this.b = this.b.setRandom(this.getWidth());\n\n    this.by = new Matrix(this.getDepth(), 1);\n    this.by = this.by.setRandom(this.getDepth());\n\n    this.dWax = new Matrix(this.getWidth(), this.getHeight());\n    this.dWax = this.dWax.setZeros();\n\n    this.dWaa = new Matrix(this.getWidth(), this.getWidth());\n    this.dWaa = this.dWaa.setZeros();\n\n    this.dWya = new Matrix(this.getDepth(), this.getWidth());\n    this.dWya = this.dWya.setZeros();\n\n    this.db = new Matrix(this.getWidth(), 1);\n    this.db = this.db.setZeros();\n\n    this.dby = new Matrix(this.getDepth(), 1);\n    this.dby = this.dby.setZeros();\n\n    this.daNext = new Matrix(this.getWidth(), this.getWidth());\n    this.daNext = this.daNext.setZeros();\n  }\n\n  forward(x: Matrix, aPrev: Matrix): Matrix[] {\n    const aNext = this.Wax.dot(x)\n      .add(this.Waa.dot(aPrev).replicate(1, this.getWidth()))\n      .add(this.b.replicate(1, x.cols))\n      .tanh();\n    const y = this.Wya.dot(aNext).add(this.by.replicate(1, x.cols)).softmax();\n    this.A.push(aNext);\n    this.X.push(x);\n    this.Y.push(y);\n    this.aPrev = aPrev;\n    return [aNext, y];\n  }\n\n  backward(dy: Matrix, x: Matrix, a: Matrix, aPrev: Matrix): GradientResult {\n    const dTanh = a.pow(2).minusOne().multiply(dy);\n\n    const dWax = dTanh.dot(x.transpose());\n    const dWaa = dTanh.dot(aPrev.transpose());\n    const db = this.db.add(dTanh.colwiseSum().divide(dTanh.cols)).setMin(-5).setMax(5);\n    const dby = this.dby; //.replicate(1, this.getWidth()).add(dy).setMin(-5).setMax(5);\n    const dWya = this.dWya.add(dTanh.dot(aPrev.transpose())).setMin(-5).setMax(5);\n    const daNext = dTanh.dot(this.Waa.tranpose());\n\n    return {\n      dWax,\n      dWya,\n      dWaa,\n      db,\n      dby,\n      daNext,\n    };\n  }\n\n  activation(m: Matrix): Matrix {\n    return m;\n  }\n\n  getType(): LayerType {\n    return LayerType.rnnlayer;\n  }\n\n  derivative(delta: Matrix): Matrix {\n    return delta;\n  }\n\n  is1D(): boolean {\n    return true;\n  }\n\n  is3D(): boolean {\n    return false;\n  }\n\n  setSize(value: Dimension): RecurrentLayer {\n    this.setWidth(value[0]);\n    this.setHeight(value[1]);\n    this.setDepth(value[2]);\n\n    return this;\n  }\n\n  getSize(): number {\n    return this.height;\n  }\n\n  getOutputWidth(): number {\n    return this.width;\n  }\n\n  getOutputHeight(): number {\n    return this.height;\n  }\n\n  getOutputDepth(): number {\n    return this.depth;\n  }\n\n  penalty(): number {\n    return 0;\n  }\n\n  getWidth(): number {\n    return this.width;\n  }\n}\n","import { Matrix } from \"impulse-math-ts\";\nimport { Dimension, LayerType } from \"../types\";\nimport { AbstractLayer } from \"./AbstractLayer\";\n\nexport class LSTMLayer extends AbstractLayer {\n  public Wf: Matrix | null = null;\n  public bf: Matrix | null = null;\n  public Wi: Matrix | null = null;\n  public bi: Matrix | null = null;\n  public Wc: Matrix | null = null;\n  public bc: Matrix | null = null;\n  public Wo: Matrix | null = null;\n  public bo: Matrix | null = null;\n  public Wy: Matrix | null = null;\n  public by: Matrix | null = null;\n  public dxt: Matrix | null = null;\n  public dWf: Matrix | null = null;\n  public dWi: Matrix | null = null;\n  public dWc: Matrix | null = null;\n  public dWo: Matrix | null = null;\n  public dbf: Matrix | null = null;\n  public dbi: Matrix | null = null;\n  public dbc: Matrix | null = null;\n  public dbo: Matrix | null = null;\n\n  configure(): void {}\n\n  forward(input: Matrix, aPrev: Matrix, cPrev): Matrix[] {\n    const nx = input.rows;\n    const m = input.cols;\n    const ny = this.Wy.rows;\n    const na = this.Wy.cols;\n\n    const concat = new Matrix(nx + na, m).concat(input).concat(this.Wy);\n\n    const ft = this.Wf.dot(concat).add(this.bf).sigmoid();\n    const it = this.Wi.dot(concat).add(this.bi).sigmoid();\n    const cct = this.Wc.dot(concat).add(this.bc).tanh();\n    const cNext = ft.multiply(cPrev).add(it.multiply(cct));\n    const ot = this.Wo.dot(concat).add(this.bo).sigmoid();\n    const aNext = ot.multiply(cNext.tanh());\n\n    const ytPred = this.Wy.dot(aNext).add(this.by).softmax();\n    return [aNext, cPrev];\n  }\n\n  backward(daNext: Matrix, dcNext: Matrix): void {}\n\n  activation(m: Matrix): Matrix {\n    return m;\n  }\n\n  getType(): LayerType {\n    return LayerType.rnnlayer;\n  }\n\n  derivative(delta: Matrix): Matrix {\n    return delta;\n  }\n\n  is1D(): boolean {\n    return true;\n  }\n\n  is3D(): boolean {\n    return false;\n  }\n\n  setSize(value: Dimension): LSTMLayer {\n    this.setWidth(value[0]);\n    this.setHeight(value[1]);\n    this.setDepth(value[2]);\n\n    return this;\n  }\n\n  getSize(): number {\n    return this.height;\n  }\n\n  getOutputWidth(): number {\n    return this.width;\n  }\n\n  getOutputHeight(): number {\n    return this.height;\n  }\n\n  getOutputDepth(): number {\n    return this.depth;\n  }\n\n  penalty(): number {\n    return 0;\n  }\n}\n","import { AbstractNetworkBuilder } from \"./AbstractNetworkBuilder\";\nimport { Layers } from \"../types\";\nimport { Network } from \"../Network\";\nimport * as fs from \"fs\";\nimport { LogisticLayer, ReluLayer, SoftmaxLayer, SoftplusLayer, TanhLayer } from \"../Layer/\";\nimport { Matrix } from \"impulse-math-ts\";\nimport { JSONLayerData } from \"./types\";\n\nclass NetworkBuilder1D extends AbstractNetworkBuilder {\n  firstLayerTransition(layer: Layers): void {\n    layer.setWidth(this.dimensions[0]);\n  }\n\n  static fromJSON(jsonPath: string): Promise<Network> {\n    return new Promise((resolve, reject) => {\n      fs.readFile(jsonPath, (err, data) => {\n        if (err) {\n          reject(err);\n          return;\n        }\n        const json = JSON.parse(data.toString());\n\n        const builder = new NetworkBuilder1D(json[\"dimensions\"]);\n\n        json[\"layers\"].forEach((layerData: JSONLayerData) => {\n          let layerClass = null;\n\n          if (layerData[\"type\"] === \"logistic\") {\n            layerClass = LogisticLayer;\n          } else if (layerData[\"type\"] === \"softmax\") {\n            layerClass = SoftmaxLayer;\n          } else if (layerData[\"type\"] === \"relu\") {\n            layerClass = ReluLayer;\n          } else if (layerData[\"type\"] === \"softplus\") {\n            layerClass = SoftplusLayer;\n          } else if (layerData[\"type\"] === \"tanh\") {\n            layerClass = TanhLayer;\n          }\n\n          builder.createLayer(layerClass, (layer) => {\n            // @ts-ignore\n            layer.setSize(layerData[\"size\"] as number);\n          });\n        });\n\n        const network = builder.getNetwork();\n\n        network.getLayers().forEach((layer, i) => {\n          layer.W = new Matrix(\n            json[\"layers\"][i][\"weights\"][\"W\"].length,\n            json[\"layers\"][i][\"weights\"][\"W\"][0].length,\n            json[\"layers\"][i][\"weights\"][\"W\"]\n          );\n          layer.b = new Matrix(\n            json[\"layers\"][i][\"weights\"][\"b\"].length,\n            json[\"layers\"][i][\"weights\"][\"b\"][0].length,\n            json[\"layers\"][i][\"weights\"][\"b\"]\n          );\n        });\n\n        resolve(network);\n      });\n    });\n  }\n}\n\nexport { NetworkBuilder1D };\n","import { AbstractNetworkBuilder } from \"./AbstractNetworkBuilder\";\nimport { Layers } from \"../types\";\nimport { Network } from \"../Network\";\nimport * as fs from \"fs\";\nimport { LogisticLayer, ReluLayer, SoftmaxLayer, SoftplusLayer, TanhLayer } from \"../Layer/\";\nimport { ConvLayer } from \"../Layer/\";\nimport { MaxPoolLayer } from \"../Layer/\";\nimport { JSONLayerData } from \"./types\";\n\nclass NetworkBuilder3D extends AbstractNetworkBuilder {\n  firstLayerTransition(layer: Layers): void {\n    if (this.dimensions) {\n      // @ts-ignore\n      layer.setSize(this.dimensions);\n    }\n  }\n\n  static fromJSON(jsonPath: string): Promise<Network> {\n    return new Promise((resolve, reject) => {\n      fs.readFile(jsonPath, (err, data) => {\n        if (err) {\n          reject(err);\n          return;\n        }\n        const json = JSON.parse(data.toString());\n\n        const builder = new NetworkBuilder3D(json[\"size\"]);\n\n        json[\"layers\"].forEach((layerData: JSONLayerData) => {\n          if (layerData[\"type\"] === \"logistic\") {\n            // @ts-ignore\n            builder.createLayer(LogisticLayer, (layer) => {\n              // @ts-ignore\n              layer.setSize(layerData[\"size\"]);\n            });\n          } else if (layerData[\"type\"] === \"softmax\") {\n            // @ts-ignore\n            builder.createLayer(SoftmaxLayer, (layer) => {\n              // @ts-ignore\n              layer.setSize(layerData[\"size\"]);\n            });\n          } else if (layerData[\"type\"] === \"relu\") {\n            // @ts-ignore\n            builder.createLayer(ReluLayer, (layer) => {\n              // @ts-ignore\n              layer.setSize(layerData[\"size\"]);\n            });\n          } else if (layerData[\"type\"] === \"softplus\") {\n            // @ts-ignore\n            builder.createLayer(SoftplusLayer, (layer) => {\n              // @ts-ignore\n              layer.setSize(layerData[\"size\"]);\n            });\n          } else if (layerData[\"type\"] === \"tanh\") {\n            // @ts-ignore\n            builder.createLayer(TanhLayer, (layer) => {\n              // @ts-ignore\n              layer.setSize(layerData[\"size\"]);\n            });\n          } else if (layerData[\"type\"] === \"conv\") {\n            // @ts-ignore\n            builder.createLayer(ConvLayer, (layer: ConvLayer) => {\n              layer.setSize(layerData[\"size\"]);\n              layer.setFilterSize(layerData[\"filterSize\"]);\n              layer.setStride(layerData[\"stride\"]);\n              layer.setNumFilters(layerData[\"numFilters\"]);\n              layer.setPadding(layerData[\"padding\"]);\n            });\n          } else if (layerData[\"type\"] === \"maxpool\") {\n            // @ts-ignore\n            builder.createLayer(MaxPoolLayer, (layer: MaxPoolLayer) => {\n              layer.setSize(layerData[\"size\"]);\n              layer.setFilterSize(layerData[\"filterSize\"]);\n              layer.setStride(layerData[\"stride\"]);\n            });\n          } else if (layerData[\"type\"] === \"fullyconnected\") {\n            // @ts-ignore\n            builder.createLayer(MaxPoolLayer);\n          }\n        });\n\n        const network = builder.getNetwork();\n\n        if (network) {\n          network.getLayers().forEach((layer, i) => {\n            layer.W = json[\"layers\"][\"W\"];\n            layer.b = json[\"layers\"][\"b\"];\n          });\n\n          resolve(network);\n        }\n      });\n    });\n  }\n}\n\nexport { NetworkBuilder3D };\n","import { Layers } from \"../../types\";\n\nexport abstract class AbstractOptimizer {\n  protected batchSize = 0;\n  protected t = 0;\n  protected learningRate = 0;\n\n  setBatchSize(batchSize: number): AbstractOptimizer {\n    this.batchSize = batchSize;\n    return this;\n  }\n\n  setT(t: number): AbstractOptimizer {\n    this.t = t;\n    return this;\n  }\n\n  setLearningRate(learningRate: number): AbstractOptimizer {\n    this.learningRate = learningRate;\n    return this;\n  }\n\n  abstract optimize(layer: Layers): void;\n}\n","import { AbstractOptimizer } from \"./AbstractOptimizer\";\nimport { Layers } from \"../../types\";\n\nexport class OptimizerAdam extends AbstractOptimizer {\n  protected beta1 = 0.9;\n  protected beta2 = 0.999;\n\n  setBeta1(beta1: number): OptimizerAdam {\n    this.beta1 = beta1;\n    return this;\n  }\n\n  setBeta2(beta2: number): OptimizerAdam {\n    this.beta2 = beta2;\n    return this;\n  }\n\n  optimize(layer: Layers): void {\n    this.adam(layer, this.learningRate, this.t);\n  }\n\n  adam(layer: Layers, learningRate: number, t: number): void {\n    layer.vW = layer.vW.multiply(this.beta1).add(layer.gW.multiply(1 - this.beta1));\n    layer.vb = layer.vb.multiply(this.beta1).add(layer.gb.multiply(1 - this.beta1));\n\n    layer.sW = layer.sW.multiply(this.beta2).add(layer.sW.pow(2).multiply(1 - this.beta2));\n    layer.sb = layer.sb.multiply(this.beta2).add(layer.sb.pow(2).multiply(1 - this.beta2));\n\n    const vWCorrected = layer.vW.divide(1 - Math.pow(this.beta1, 2));\n    const vbCorrected = layer.vb.divide(1 - Math.pow(this.beta1, 2));\n\n    const sWCorrected = layer.sW.add(1e-8).sqrt();\n    const sbCorrected = layer.sb.add(1e-8).sqrt();\n\n    layer.W = layer.W.subtract(vWCorrected.divide(sWCorrected).multiply(learningRate));\n    layer.b = layer.b.subtract(vbCorrected.divide(sbCorrected).multiply(learningRate));\n  }\n}\n","import { AbstractOptimizer } from \"./AbstractOptimizer\";\nimport { Layers } from \"../../types\";\n\nexport class OptimizerGradientDescent extends AbstractOptimizer {\n  optimize(layer: Layers): void {\n    this.gradientDescent(layer, this.learningRate);\n  }\n\n  gradientDescent(layer: Layers, learningRate: number): void {\n    layer.W = layer.W.subtract(layer.gW.multiply(learningRate));\n    layer.b = layer.b.subtract(layer.b.multiply(learningRate));\n  }\n}\n","import { AbstractOptimizer } from \"./AbstractOptimizer\";\nimport { Layers } from \"../../types\";\n\nexport class OptimizerAdagrad extends AbstractOptimizer {\n  optimize(layer: Layers): void {\n    this.adagrad(layer, this.learningRate);\n  }\n\n  adagrad(layer: Layers, learningRate: number): void {\n    layer.dW = layer.dW.add(layer.gW.pow(2));\n    layer.W = layer.W.subtract(layer.gW.multiply(learningRate).divide(layer.dW.sqrt().add(1e-8)).multiply(layer.gW));\n\n    layer.db = layer.db.add(layer.gb.pow(2));\n    layer.b = layer.b.subtract(layer.db.multiply(learningRate).divide(layer.db.sqrt().add(1e-8)).multiply(layer.gb));\n  }\n}\n","import { AbstractOptimizer } from \"./AbstractOptimizer\";\nimport { Layers } from \"../../types\";\n\nexport class OptimizerMomentum extends AbstractOptimizer {\n  protected beta = 0.9;\n\n  optimize(layer: Layers): void {\n    this.momentum(layer, this.learningRate);\n  }\n\n  setBeta(beta: number): OptimizerMomentum {\n    this.beta = beta;\n    return this;\n  }\n\n  momentum(layer: Layers, learningRate: number): void {\n    layer.vW = layer.gW.multiply(this.beta).add(layer.gW.multiply(1 - this.beta));\n    layer.vb = layer.gb.multiply(this.beta).add(layer.gb.multiply(1 - this.beta));\n\n    layer.W = layer.W.subtract(layer.vW.multiply(learningRate));\n    layer.b = layer.b.subtract(layer.vb.multiply(learningRate));\n  }\n}\n","import { AbstractOptimizer } from \"./AbstractOptimizer\";\nimport { Layers } from \"../../types\";\n\nexport class OptimizerRMSProp extends AbstractOptimizer {\n  protected alpha = 1e-3;\n  protected beta = 0.9;\n\n  setBeta(beta: number): OptimizerRMSProp {\n    this.beta = beta;\n    return this;\n  }\n\n  setAlpha(alpha: number): OptimizerRMSProp {\n    this.alpha = alpha;\n    return this;\n  }\n\n  optimize(layer: Layers): void {\n    this.rmsprop(layer, this.learningRate, this.alpha, this.beta);\n  }\n\n  rmsprop(layer: Layers, learningRate: number, alpha: number, beta: number): void {\n    layer.sW = layer.sW.multiply(beta).add(layer.gW.pow(2).multiply(1 - beta));\n    layer.sb = layer.sb.multiply(beta).add(layer.gb.pow(2).multiply(1 - beta));\n\n    layer.W = layer.W.subtract(layer.gW.multiply(alpha).divide(layer.sW.sqrt().add(1e-8)));\n    layer.b = layer.b.subtract(layer.gb.multiply(alpha).divide(layer.sb.sqrt().add(1e-8)));\n  }\n}\n","import { Network } from \"../Network\";\nimport { AbstractOptimizer } from \"./Optimizer/AbstractOptimizer\";\nimport { Dataset } from \"impulse-dataset-ts/src/typescript/Dataset/Dataset\";\n\nexport interface CostResult {\n  cost: number;\n  accuracy: number;\n}\n\nexport interface StepCallbackParameters {\n  iteration: number;\n}\n\nexport abstract class AbstractTrainer {\n  network: Network | null = null;\n  optimizer: AbstractOptimizer | null = null;\n  regularization = 1e-4;\n  iterations = 1000;\n  learningRate = 0.001;\n  verbose = true;\n  verboseStep = 1;\n  stepCallback = (data: StepCallbackParameters): void => undefined;\n\n  constructor(network: Network, optimizer: AbstractOptimizer) {\n    this.network = network;\n    this.optimizer = optimizer;\n  }\n\n  abstract train(inputDataset: Dataset, outputDataset: Dataset): AbstractTrainer;\n\n  setRegularization(regularization: number): AbstractTrainer {\n    this.regularization = regularization;\n    return this;\n  }\n\n  setIterations(iterations: number): AbstractTrainer {\n    this.iterations = iterations;\n    return this;\n  }\n\n  setLearningRate(learningRate: number): AbstractTrainer {\n    this.learningRate = learningRate;\n    return this;\n  }\n\n  setVerbose(verbose: boolean): AbstractTrainer {\n    this.verbose = verbose;\n    return this;\n  }\n\n  setVerboseStep(verboseStep: number): AbstractTrainer {\n    this.verboseStep = verboseStep;\n    return this;\n  }\n\n  setStepCallback(stepCallback: (data: StepCallbackParameters) => void): AbstractTrainer {\n    this.stepCallback = stepCallback;\n    return this;\n  }\n\n  cost(inputDataset: Dataset, outputDataset: Dataset): CostResult {\n    const numberOfExamples = inputDataset.getNumberOfExamples();\n\n    let accuracy = 0;\n    let penalty = 0;\n\n    this.network.getLayers().forEach((layer) => {\n      penalty += layer.penalty();\n    });\n\n    const predictions = this.network.forward(inputDataset.data);\n    const correctOutput = outputDataset.data;\n\n    /*const error = Y.multiply(predictions.log())\n      .add(Y.minusOne().multiply(predictions.minusOne().log()))\n      .multiply(-1)\n      .sum();*/\n    const error = correctOutput.multiply(predictions.log()).sum();\n    const cost = (-1 / numberOfExamples) * error + this.regularization / (penalty * (2 * inputDataset.data.cols));\n\n    for (let col = 0; col < predictions.cols; col += 1) {\n      const index1 = predictions.colMaxCoeffIndex(col);\n      const index2 = correctOutput.colMaxCoeffIndex(col);\n\n      if (index1 === index2) {\n        accuracy++;\n      }\n    }\n\n    return {\n      cost,\n      accuracy: (accuracy / numberOfExamples) * 100,\n    };\n  }\n}\n","import { AbstractTrainer, CostResult } from \"./AbstractTrainer\";\nimport { Dataset } from \"impulse-dataset-ts/src/typescript/Dataset/Dataset\";\nimport { round } from \"impulse-math-ts\";\n\nexport class MiniBatchTrainer extends AbstractTrainer {\n  batchSize = 100;\n\n  setBatchSize(batchSize: number): MiniBatchTrainer {\n    this.batchSize = batchSize;\n    return this;\n  }\n\n  cost(inputDataset: Dataset, outputDataset: Dataset): CostResult {\n    const batchSize = this.batchSize;\n    const numberOfExamples = inputDataset.getNumberOfExamples();\n    const numBatches = Math.ceil(numberOfExamples / batchSize);\n\n    let cost = 0.0;\n    let accuracy = 0.0;\n\n    // calculate penalty\n    let penalty = 0.0;\n\n    this.network.getLayers().forEach((layer) => {\n      penalty = layer.penalty();\n    });\n\n    const startTime = new Date().getTime();\n    const startIterationTime = new Date().getTime();\n\n    for (let batch = 0, offset = 0; batch < numberOfExamples; batch += this.batchSize, offset += this.batchSize) {\n      const startIterationTime2 = new Date().getTime();\n      const input = inputDataset.getBatch(offset, this.batchSize);\n      const correctOutput = outputDataset.getBatch(offset, this.batchSize);\n      const predictions = this.network.forward(input.data);\n\n      const error = correctOutput.data.multiply(predictions.log()).sum();\n      cost += (-1 / numberOfExamples) * error + this.regularization / (penalty * (2 * inputDataset.data.cols));\n\n      for (let col = 0; col < predictions.cols; col += 1) {\n        const index1 = predictions.colMaxCoeffIndex(col);\n        const index2 = correctOutput.data.colMaxCoeffIndex(col);\n\n        if (index1 === index2) {\n          accuracy++;\n        }\n      }\n    }\n\n    return {\n      cost,\n      accuracy: (accuracy / numberOfExamples) * 100,\n    };\n  }\n\n  train(inputDataset: Dataset, outputDataset: Dataset): MiniBatchTrainer {\n    const numberOfExamples = inputDataset.getNumberOfExamples();\n\n    let t = 0;\n\n    this.optimizer.setBatchSize(this.batchSize);\n    this.optimizer.setLearningRate(this.learningRate);\n\n    for (let i = 0; i < this.iterations; i += 1) {\n      const startTime = new Date().getTime();\n      const startIterationTime = new Date().getTime();\n\n      for (let batch = 0, offset = 0; batch < numberOfExamples; batch += this.batchSize, offset += this.batchSize) {\n        const startIterationTime2 = new Date().getTime();\n        const input = inputDataset.getBatch(offset, this.batchSize);\n        const output = outputDataset.getBatch(offset, this.batchSize);\n        const predictions = this.network.forward(input.data);\n\n        this.network.backward(input.data, output.data, this.regularization);\n\n        this.optimizer.setT(++t);\n\n        this.network.getLayers().forEach((layer) => {\n          this.optimizer.optimize(layer);\n        });\n\n        if (this.verbose) {\n          const cost = this.cost(input, output);\n          const endIterationTime = new Date().getTime();\n          console.log(\n            `Batch: ${offset} / ${numberOfExamples} | Batch time: ${\n              endIterationTime - startIterationTime2\n            }ms | Time from start: ${round((endIterationTime - startIterationTime) / 1000, 1)}s. | Cost: ${round(\n              cost.cost,\n              2\n            )} | Acc: ${cost.accuracy}`\n          );\n        }\n      }\n\n      if (this.verbose) {\n        if ((i + 1) % this.verboseStep === 0) {\n          const endTime = new Date().getTime();\n          const currentResult = this.cost(inputDataset, outputDataset);\n\n          console.log(\n            `Iteration: ${i + 1} | Cost: ${round(currentResult.cost, 5)} | Accuracy: ${\n              currentResult.accuracy\n            }% | Time: ${(endTime - startTime) / 1000} s.`\n          );\n        }\n      }\n\n      this.stepCallback({\n        iteration: i,\n      });\n    }\n\n    return this;\n  }\n}\n","import { AbstractTrainer } from \"./AbstractTrainer\";\nimport { Dataset } from \"impulse-dataset-ts/src/typescript/Dataset/Dataset\";\nimport { round } from \"impulse-math-ts\";\n\nexport class Trainer extends AbstractTrainer {\n  train(inputDataset: Dataset, outputDataset: Dataset): AbstractTrainer {\n    const numberOfExamples = inputDataset.getNumberOfExamples();\n\n    let t = 0;\n\n    this.optimizer.setBatchSize(numberOfExamples);\n    this.optimizer.setLearningRate(this.learningRate);\n\n    for (let i = 0; i < this.iterations; i += 1) {\n      const startTime = new Date().getTime();\n\n      this.network.backward(inputDataset.data, outputDataset.data, this.regularization);\n\n      this.optimizer.setT(++t);\n\n      this.network.getLayers().forEach((layer) => {\n        this.optimizer.optimize(layer);\n      });\n\n      if (this.verbose) {\n        if ((i + 1) % this.verboseStep === 0) {\n          const currentResult = this.cost(inputDataset, outputDataset);\n          const endTime = new Date().getTime();\n\n          console.log(\n            `Iteration: ${i + 1} | Cost: ${round(currentResult.cost, 5)} | Accuracy: ${round(\n              currentResult.accuracy,\n              2\n            )}% | Time: ${(endTime - startTime) / 1000} s.`\n          );\n        }\n      }\n\n      this.stepCallback({\n        iteration: i,\n      });\n    }\n\n    return this;\n  }\n}\n","import { NetworkRNN } from \"../Network\";\nimport { DatasetVocabulary } from \"impulse-dataset-ts/src/typescript/Dataset/DatasetVocabulary\";\nimport { Matrix } from \"impulse-math-ts\";\n\nexport class RNNTrainer {\n  protected network: NetworkRNN | null = null;\n  protected iterations: number = 1000;\n  protected learningRate: number = 0.01;\n\n  constructor(network: NetworkRNN) {\n    this.network = network;\n  }\n\n  train(dataset: DatasetVocabulary): [number] {\n    let loss = this.network.loss(dataset.getVocabularySize(), 7);\n\n    const [X, Y] = dataset.buildData(100);\n    const [x, y] = dataset.vectorization(X, Y);\n\n    let aPrev = new Matrix(this.network.getDimensions()[0], this.network.getDimensions()[0]).setZeros();\n\n    for (let iteration = 0; iteration < this.iterations; iteration += 1) {\n      const index = iteration % x.length;\n      const [_loss] = this.network.forward(x[index], y, aPrev);\n      loss = _loss;\n      const [currentLoss, _aPrev] = this.network.optimize(x[index], y, aPrev, this.learningRate);\n      aPrev = _aPrev;\n      loss = loss * 0.999 + currentLoss * 0.001;\n      console.log(`Iteration ${iteration + 1} | Loss: ${loss} | Sample: ${this.network.sample(dataset).trim()}`);\n    }\n    return [loss];\n  }\n\n  setIterations(num: number): RNNTrainer {\n    this.iterations = num;\n    return this;\n  }\n\n  setLearningRate(num: number): RNNTrainer {\n    this.learningRate = num;\n    return this;\n  }\n}\n","import { NetworkBuilder1D, NetworkBuilder3D } from \"./NetworkBuilder\";\nimport {\n  SoftmaxLayer,\n  LogisticLayer,\n  ReluLayer,\n  SoftplusLayer,\n  TanhLayer,\n  ConvLayer,\n  FullyConnectedLayer,\n  MaxPoolLayer,\n  RecurrentLayer,\n  LSTMLayer,\n} from \"./Layer\";\nimport { Matrix } from \"impulse-math-ts\";\nimport {\n  OptimizerAdam,\n  OptimizerGradientDescent,\n  OptimizerAdagrad,\n  OptimizerMomentum,\n  OptimizerRMSProp,\n} from \"./Trainer/Optimizer\";\nimport { MiniBatchTrainer, Trainer as TrainerTrainer, RNNTrainer } from \"./Trainer\";\nimport { NetworkRNN } from \"./Network\";\n\nconst NetworkBuilder = { NetworkBuilder1D, NetworkBuilder3D };\nconst Math = {\n  Matrix,\n};\nconst Layer = {\n  SoftmaxLayer,\n  LogisticLayer,\n  ReluLayer,\n  SoftplusLayer,\n  TanhLayer,\n  ConvLayer,\n  MaxPoolLayer,\n  FullyConnectedLayer,\n  RecurrentLayer,\n  LSTMLayer,\n};\nconst Optimizer = {\n  OptimizerAdam,\n  OptimizerGradientDescent,\n  OptimizerAdagrad,\n  OptimizerMomentum,\n  OptimizerRMSProp,\n};\nconst Trainer = {\n  MiniBatchTrainer,\n  Trainer: TrainerTrainer,\n  RNNTrainer,\n};\nconst Network = {\n  NetworkRNN,\n};\n\nexport { NetworkBuilder, Math, Layer, Optimizer, Trainer, Network };\n"],"names":["t","r","o","nmd","process","dlopen","__dirname","sep","p","Error","exports","e","n","i","id","loaded","d","Object","defineProperty","enumerable","get","prototype","hasOwnProperty","call","Symbol","toStringTag","value","paths","children","iterator","constructor","toPrimitive","TypeError","String","ComputationCPU","b","ComputationMultiCore","h","Matrix","E","getComputation","g","im2col","_","maxpool","C","round","R","setComputation","O","this","configurable","writable","key","kernels","concat","arguments","length","Array","apply","a","s","console","log","MatrixMultiply","u","f","setPrototypeOf","bind","__proto__","c","ReferenceError","l","getPrototypeOf","create","Reflect","construct","sham","Proxy","Boolean","valueOf","addKernel","v","cols","rows","data","y","w","m","k","x","S","j","M","P","resize","generateData","test","Number","transpose","push","from","execute","multiply","exp","add","fraction","Math","abs","max","min","random","sqrt","shape","subtract","divide","rowwiseSum","replicate","pow","setZeros","module","require","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","definition","obj","prop","Network","dimensions","layer","size","layers","input","output","forEach","forward","X","Y","regularization","sigma","getBackPropagation","propagate","derivative","path","resultJSON","type","getType","getSize","weights","W","result","JSON","stringify","Promise","resolve","reject","fs","err","error","LayerType","NetworkRNN","vocabularySize","sequenceLength","dataset","Waa","Wax","Wya","by","indices","charIndices","getCharIndices","newLineCharacter","chars","getChars","aPrev","setRandom","idx","counter","dot","setMin","tanh","softmax","colMaxCoeffIndex","maxIndex","floor","map","join","a0","yHat","loss","_a","_yHat","A","_dWax","_dWaa","_dWya","_db","db","_dby","dby","_daNext","daNext","dy","backward","dWax","dWya","dWaa","setMax","learningRate","getDimensions","AbstractBackPropagation","previousLayer","Backpropagation1Dto1D","numberOfExamples","previousActivations","delta","gW","gb","Backpropagation3Dto1D","BackpropagationToMaxPool","prevLayer","Z","filterSize","getFilterSize","stride","getStride","inputWidth","getWidth","inputHeight","getHeight","outputWidth","getDepth","getOutputWidth","outputHeight","getOutputHeight","outputDepth","getOutputDepth","horizStart","_max","inputOffset","outputOffset","maxX","maxY","vStart","hStart","BackpropagationToConv","padding","getPadding","inputDepth","tmpResult","vertStart","vertical","verticalPad","horizontal","horizontalPad","z","BackpropagationFactory","is1D","conv","fullyconnected","NetworkLSTM","tX","nY","Wy","nA","aNext","cNext","dataInput","row","da","tx","x1","AbstractNetworkBuilder","dimension","network","layerClass","callback","lastLayer","firstLayerTransition","transition","configure","setBackPropagation","addLayer","AbstractLayer","backPropagation","width","height","depth","AbstractLayer1D","vW","vb","sW","sb","dW","activation","setWidth","is3D","setHeight","sum","SoftmaxLayer","LogisticLayer","logistic","minusOne","TanhLayer","ReluLayer","relu","SoftplusLayer","softplus","AbstractLayer3D","setSize","setDepth","ConvLayer","numFilters","col","tmp","setCol","rollToColMatrix","FullyConnectedLayer","MaxPoolLayer","pool","RecurrentLayer","dTanh","colwiseSum","tranpose","rnnlayer","LSTMLayer","cPrev","nx","na","ft","Wf","bf","sigmoid","it","Wi","bi","cct","Wc","bc","Wo","bo","dcNext","NetworkBuilder1D","jsonPath","json","parse","toString","builder","layerData","createLayer","getNetwork","getLayers","NetworkBuilder3D","setFilterSize","setStride","setNumFilters","setPadding","AbstractOptimizer","batchSize","OptimizerAdam","beta1","beta2","adam","vWCorrected","vbCorrected","sWCorrected","sbCorrected","OptimizerGradientDescent","gradientDescent","OptimizerAdagrad","adagrad","OptimizerMomentum","momentum","beta","OptimizerRMSProp","alpha","rmsprop","AbstractTrainer","optimizer","iterations","verbose","verboseStep","stepCallback","inputDataset","outputDataset","getNumberOfExamples","accuracy","penalty","predictions","correctOutput","cost","MiniBatchTrainer","ceil","Date","getTime","batch","offset","getBatch","setBatchSize","setLearningRate","startTime","startIterationTime","startIterationTime2","setT","optimize","endIterationTime","endTime","currentResult","iteration","Trainer","RNNTrainer","getVocabularySize","buildData","vectorization","index","currentLoss","sample","trim","num","NetworkBuilder","Layer","Optimizer","TrainerTrainer"],"sourceRoot":""}