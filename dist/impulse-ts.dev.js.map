{"version":3,"file":"impulse-ts.dev.js","mappings":"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","sources":["webpack://impulse-ts/./src/typescript/builder/abstract.tsx","webpack://impulse-ts/./src/typescript/builder/builder1d.tsx","webpack://impulse-ts/./src/typescript/dataset/Dataset.tsx","webpack://impulse-ts/./src/typescript/dataset/DatasetBuilder.tsx","webpack://impulse-ts/./src/typescript/layer/abstract.tsx","webpack://impulse-ts/./src/typescript/layer/abstract1d.tsx","webpack://impulse-ts/./src/typescript/layer/index.tsx","webpack://impulse-ts/./src/typescript/layer/logistic.tsx","webpack://impulse-ts/./src/typescript/layer/softmax.tsx","webpack://impulse-ts/./src/typescript/math/matrix.tsx","webpack://impulse-ts/./src/typescript/network.tsx","webpack://impulse-ts/./src/typescript/types.tsx","webpack://impulse-ts/external \"csvtojson\"","webpack://impulse-ts/external \"fs\"","webpack://impulse-ts/external \"gpu.js\"","webpack://impulse-ts/webpack/bootstrap","webpack://impulse-ts/webpack/runtime/compat get default export","webpack://impulse-ts/webpack/runtime/define property getters","webpack://impulse-ts/webpack/runtime/hasOwnProperty shorthand","webpack://impulse-ts/webpack/runtime/make namespace object","webpack://impulse-ts/./src/typescript/main.tsx"],"sourcesContent":["import { Dimension, Layers } from \"../types\";\nimport Network from \"../network\";\n\nabstract class AbstractBuilder {\n  protected dimensions: Dimension = null;\n  protected previousLayer: Layers = null;\n  protected network: Network = null;\n\n  constructor(dimension: Dimension) {\n    this.dimensions = dimension;\n    this.network = new Network(dimension);\n  }\n\n  createLayer(type: Layers, callback: Function) {\n    const layer = new type();\n\n    if (typeof callback === \"function\") {\n      callback(layer);\n    }\n\n    if (this.previousLayer === null) {\n      this.firstLayerTransition(layer);\n    } else {\n      layer.transition(this.previousLayer);\n    }\n\n    layer.configure();\n\n    this.network.addLayer(layer);\n    this.previousLayer = layer;\n  }\n\n  getNetwork(): Network {\n    return this.network;\n  }\n\n  abstract firstLayerTransition(layer: Layers);\n}\n\nexport { AbstractBuilder };\nexport default AbstractBuilder;\n","import { AbstractBuilder } from \"./abstract\";\nimport { Layers } from \"../types\";\n\nclass Builder1D extends AbstractBuilder {\n  firstLayerTransition(layer: Layers) {\n    layer.setWidth(this.dimensions[0]);\n  }\n}\n\nexport { Builder1D };\nexport default Builder1D;\n","import {Matrix} from \"../math/matrix\";\n\nexport class Dataset {\n    public exampleSize: number = 0;\n    public numberOfExamples: number = 0;\n    public data: Matrix = null;\n\n    constructor(exampleSize: number, numberOfExamples: number, arr: number[][]) {\n        this.exampleSize = exampleSize;\n        this.numberOfExamples = numberOfExamples\n        const data = [];\n\n        for (let example = 0; example < numberOfExamples; example += 1) {\n            data[example] = [];\n            for (let dataIndex = 0; dataIndex < exampleSize; dataIndex += 1) {\n                data[example][dataIndex] = arr[example][dataIndex] || 0;\n            }\n        }\n\n        this.data = new Matrix(this.exampleSize, this.numberOfExamples, data);\n    }\n\n    exampleAt(index: number): Matrix {\n        const data = [];\n        for (let dataIndex = 0; dataIndex < this.exampleSize; dataIndex += 1) {\n            data[dataIndex] = [];\n            data[dataIndex][0] = this.data.data[index][dataIndex];\n        }\n\n        return new Matrix(this.exampleSize, 1, data);\n    }\n}\n","import * as csvtojson from 'csvtojson'\nimport { Dataset } from './Dataset'\n\nexport class DatasetBuilder {\n    static fromCSV(csvPath: string): Promise<Dataset> {\n        return new Promise((resolve) => {\n            csvtojson({\n                noheader: true,\n                output: \"csv\"\n            })\n                .fromFile(csvPath)\n                .then((arr)=>{\n                    const numberOfExamples = arr.length;\n                    const exampleSize = arr[0].length;\n\n                    const dataset = new Dataset(exampleSize, numberOfExamples, arr);\n                    resolve(dataset);\n                })\n        });\n    }\n}\n","import { elementWiseAdd, Matrix, multiply } from \"../math/matrix\";\nimport { Dimension, Layers } from \"../types\";\n\nabstract class AbstractLayer {\n  public W: Matrix;\n  public b: Matrix;\n  public A: Matrix;\n  public Z: Matrix;\n  public gW: Matrix;\n  public gb: Matrix;\n\n  protected width: number = 0;\n  protected height: number = 0;\n  protected depth: number = 0;\n  protected previousLayer: Layers = null;\n\n  constructor() {\n    this.W = new Matrix();\n    this.b = new Matrix();\n    this.A = new Matrix();\n    this.Z = new Matrix();\n    this.gW = new Matrix();\n    this.gb = new Matrix();\n  }\n\n  forward(input: Matrix): Matrix {\n    this.Z = elementWiseAdd(multiply(this.W, input), this.b.replicate(1, input.cols));\n    this.A = this.activation(this.Z);\n    return this.A;\n  }\n\n  setWidth(value: number) {\n    this.width = value;\n  }\n\n  getWidth(): number {\n    return this.width;\n  }\n\n  setHeight(value: number) {\n    this.height = value;\n  }\n\n  getHeight(): number {\n    return this.height;\n  }\n\n  setDepth(value: number) {\n    this.depth = value;\n  }\n\n  getDepth(): number {\n    return this.depth;\n  }\n\n  abstract getOutputWidth();\n\n  abstract getOutputHeight();\n\n  abstract getOutputDepth();\n\n  abstract configure();\n\n  abstract is1D(): boolean;\n\n  abstract is3D(): boolean;\n\n  abstract transition(previousLayer: Layers);\n\n  abstract setSize(dimension: Dimension);\n\n  abstract getSize();\n\n  abstract activation(value: Matrix): Matrix;\n\n  abstract derivative(value: Matrix): Matrix;\n\n  abstract getType();\n\n  abstract loss(output: Matrix, predictions: Matrix): number;\n\n  abstract error(m: number): number;\n}\n\nexport { AbstractLayer };\n","import { AbstractLayer } from \"./abstract\";\nimport { fillRandom, setZeros } from \"../math/matrix\";\nimport { Dimension, Layers } from \"../types\";\n\nabstract class AbstractLayer1D extends AbstractLayer {\n  protected depth: number = 1;\n\n  configure() {\n    this.W.resize(this.height, this.width);\n    this.W = fillRandom(this.W, this.width);\n\n    this.b.resize(this.height, 1);\n    this.b = fillRandom(this.b, this.width);\n\n    this.gW.resize(this.height, this.width);\n    this.gW = setZeros(this.gW);\n\n    this.gb.resize(this.height, 1);\n    this.gb = setZeros(this.gb);\n  }\n\n  is1D(): boolean {\n    return true;\n  }\n\n  is3D(): boolean {\n    return false;\n  }\n\n  transition(previousLayer: Layers) {\n    if (previousLayer.is1D()) {\n      this.setWidth(previousLayer.getSize());\n    } else if (previousLayer.is3D()) {\n      this.setWidth(\n        previousLayer.getOutputWidth() *\n          previousLayer.getOutputHeight() *\n          previousLayer.getOutputDepth()\n      );\n    }\n  }\n\n  setSize(value: Dimension) {\n    this.setHeight(value[0]);\n  }\n\n  getSize(): number {\n    return this.height;\n  }\n\n  getOutputWidth() {\n    return this.width;\n  }\n\n  getOutputHeight() {\n    return this.height;\n  }\n\n  getOutputDepth() {\n    return 1;\n  }\n}\n\nexport { AbstractLayer1D };\n","import { AbstractLayer } from \"./abstract\";\nimport { SoftmaxLayer } from \"./softmax\";\nimport { LogisticLayer } from \"./logistic\";\n\nexport { AbstractLayer, SoftmaxLayer, LogisticLayer };\n","import {\n  logisticActivation,\n  logisticDerivative,\n  Matrix,\n  logisticLoss,\n} from \"../math/matrix\";\nimport { LayerType } from \"../types\";\nimport { AbstractLayer1D } from \"./abstract1d\";\n\nclass LogisticLayer extends AbstractLayer1D {\n  activation(m: Matrix): Matrix {\n    return logisticActivation(m);\n  }\n\n  derivative(): Matrix {\n    return logisticDerivative(this.A);\n  }\n\n  getType(): LayerType {\n    return LayerType.logistic;\n  }\n\n  loss(output: Matrix, predictions: Matrix): number {\n    return logisticLoss(output, predictions);\n  }\n\n  error(m: number): number {\n    return -1.0 / m;\n  }\n}\n\nexport { LogisticLayer };\n","import { Matrix, softmaxActivation, softmaxLoss } from \"../math/matrix\";\nimport { LayerType } from \"../types\";\nimport { AbstractLayer1D } from \"./abstract1d\";\n\nclass SoftmaxLayer extends AbstractLayer1D {\n  activation(m: Matrix): Matrix {\n    return softmaxActivation(m);\n  }\n\n  derivative(): Matrix {\n    throw new Error(\"Unsupported usage.\");\n  }\n\n  getType(): LayerType {\n    return LayerType.softmax;\n  }\n\n  loss(output: Matrix, predictions: Matrix): number {\n    return softmaxLoss(output, predictions);\n  }\n\n  error(m: number): number {\n    return -1.0 / m;\n  }\n}\n\nexport { SoftmaxLayer };\n","import {GPU} from \"gpu.js\";\n\nexport const gpu = new GPU({mode: \"gpu\"});\n\nexport class Matrix {\n    public rows = 0;\n    public cols = 0;\n    public data = null;\n\n    constructor(rows = 0, cols = 0, data = null) {\n        this.resize(rows, cols);\n        if (data) {\n            this.generateData(data);\n        }\n    }\n\n    resize(rows, cols): Matrix {\n        this.rows = rows;\n        this.cols = cols;\n        this.data = new Array();\n        for (let row = 0; row < this.rows; row += 1) {\n            this.data[row] = [];\n        }\n\n        return this;\n    }\n\n    generateData(arr: number[][]): Matrix {\n        this.data = new Array();\n        for (let row = 0; row < arr.length; row += 1) {\n            this.data[row] = arr[row];\n        }\n        return this;\n    }\n\n    toBuffer(): ArrayBuffer {\n        const result = new ArrayBuffer(this.rows * this.cols * 64);\n        const view = new DataView(result, 0, this.rows * this.cols * 64);\n        this.data.forEach((num, i) => {\n            view.setFloat64(i, num);\n        })\n        return result;\n    }\n\n    sum(): number {\n        let sum = 0.0;\n        for (let row = 0; row < this.rows; row += 1) {\n            for (let col = 0; col < this.cols; col += 1) {\n                sum += this.data[row][col];\n            }\n        }\n        return sum;\n    }\n\n    colwiseSum(): Matrix {\n        const data = [];\n        for (let row = 0; row < this.rows; row += 1) {\n            let sum = 0.0;\n            for (let col = 0; col < this.cols; col += 1) {\n                sum += this.data[row][col];\n            }\n            data[row] = [sum];\n        }\n        return new Matrix(this.rows, 1, data)\n    }\n\n    replicate(rows: number, cols: number): Matrix {\n        const oldData = this.data;\n        if (rows === 1 && this.cols === 1 && cols > 1) {\n            this.resize(this.rows, cols);\n            for (let row = 0; row < this.rows; row += 1) {\n                for (let col = 0; col < cols; col += 1) {\n                    this.data[row][col] = oldData[row][0];\n                }\n            }\n        } else if (cols === 1 && this.rows === 1 && rows > 1) {\n            this.resize(rows, this.cols);\n            for (let row = 0; row < rows; row += 1) {\n                for (let col = 0; col < this.cols; col += 1) {\n                    this.data[row][col] = oldData[0][col];\n                }\n            }\n        }\n        return this;\n    }\n\n    transpose(): Matrix {\n        const oldData = this.data;\n        const kernel = gpu.createKernel(function (a) {\n            return a[this.thread.y][this.thread.x];\n        }).setOutput([this.cols, this.rows]);\n\n        this.resize(this.cols, this.rows);\n        this.generateData(kernel(oldData) as number[][]);\n\n        return this;\n    }\n}\n\nexport const multiply = (m1: Matrix, m2: Matrix): Matrix => {\n    if (m1.cols !== m2.rows) {\n        throw new Error(\"DIMENSIONS error.\");\n    }\n\n    const kernel = gpu.createKernel(function (a, b) {\n        let sum = 0;\n        for (let i = 0; i < this.constants.cols; i++) {\n            sum += a[this.thread.x][i] * b[i][this.thread.y];\n        }\n        return sum;\n    }).setOutput([m1.rows, m2.cols]).setConstants({\n        cols: m1.rows,\n    });\n\n    return new Matrix(m1.rows, m2.cols, kernel(m1.data, m2.data));\n};\n\nexport const elementWiseAdd = (m1: Matrix, m2: Matrix): Matrix => {\n    if (m1.rows !== m2.rows) {\n        throw new Error(\"ROWS number not equal.\");\n    }\n    if (m1.cols !== m2.cols) {\n        throw new Error(\"COLS number not equal.\");\n    }\n\n    const kernel = gpu.createKernel(function (a, b) {\n        return a[this.thread.x][this.thread.y] + b[this.thread.x][this.thread.y];\n    }).setOutput([m1.rows, m2.cols])\n\n    return new Matrix(m1.rows, m2.cols, kernel(m1.data, m2.data));\n};\n\nexport const elementWiseSubtract = (m1: Matrix, m2: Matrix): Matrix => {\n    if (m1.rows !== m2.rows) {\n        throw new Error(\"ROWS number not equal.\");\n    }\n    if (m1.cols !== m2.cols) {\n        throw new Error(\"COLS number not equal.\");\n    }\n\n    const kernel = gpu.createKernel(function (a, b) {\n        return a[this.thread.x][this.thread.y] - b[this.thread.x][this.thread.y];\n    }).setOutput([m1.rows, m2.cols])\n\n    return new Matrix(m1.rows, m2.cols, kernel(m1.data, m2.data));\n};\n\nexport const fillRandom = (m1: Matrix, parameter: number): Matrix => {\n    const kernel = gpu.createKernel(function () {\n        return Math.random() * Math.sqrt(2.0 / this.constants.parameter);\n    }).setOutput([m1.rows, m1.cols]).setConstants({\n        parameter\n    })\n\n    return new Matrix(m1.rows, m1.cols, kernel());\n};\n\nexport const setZeros = (m1: Matrix): Matrix => {\n    const kernel = gpu.createKernel(function () {\n        return 0.0;\n    }).setOutput([m1.rows, m1.cols])\n    return new Matrix(m1.rows, m1.cols, kernel());\n};\n\nexport const elementWiseMultiply = (m1: Matrix, m2: Matrix): Matrix => {\n    if (m1.rows !== m2.rows) {\n        throw new Error(\"ROWS number not equal.\");\n    }\n    if (m1.cols !== m2.cols) {\n        throw new Error(\"COLS number not equal.\");\n    }\n\n    const kernel = gpu.createKernel(function (a, b) {\n        return a[this.thread.x][this.thread.y] * b[this.thread.x][this.thread.y];\n    }).setOutput([m1.rows, m2.cols])\n\n    return new Matrix(m1.rows, m2.cols, kernel(m1.data, m2.data));\n};\n\nexport const sum = (m: Matrix): number => {\n    return m.sum();\n};\n\nexport const cols = (m: Matrix): number => {\n    return m.cols;\n};\n\nexport const elementWiseDivide = (m1: Matrix, m2: Matrix): Matrix => {\n    if (m1.rows !== m2.rows) {\n        throw new Error(\"ROWS number not equal.\");\n    }\n    if (m1.cols !== m2.cols) {\n        throw new Error(\"COLS number not equal.\");\n    }\n\n    const kernel = gpu.createKernel(function (a, b) {\n        return a[this.thread.x][this.thread.y] / b[this.thread.x][this.thread.y];\n    }).setOutput([m1.rows, m2.cols])\n\n    return new Matrix(m1.rows, m2.cols, kernel(m1.data, m2.data));\n};\n\nexport const softmaxActivation = (m: Matrix): Matrix => {\n    const kernel = gpu.createKernel(function (a) {\n        return Math.exp(a[this.thread.x][this.thread.y]);\n    }).setOutput([m.rows, m.cols]);\n    const data = new Matrix(m.rows, m.cols, kernel(m.data));\n    const divider = new Matrix(m.rows, 1, data.colwiseSum().data).transpose().replicate(m.rows, 1);\n    const result = new Matrix(m.rows, m.cols, elementWiseDivide(data, divider).data);\n    return result;\n};\n\nexport const softmaxLoss = (output: Matrix, predictions: Matrix): number => {\n    const kernel = gpu.createKernel(function (a) {\n        return Math.log(a[this.thread.x][this.thread.y]);\n    }).setOutput([predictions.rows, predictions.cols]);\n    const data = kernel(predictions.data);\n    return new Matrix(output.rows, output.cols, elementWiseMultiply(output, data).data).sum();\n};\n\nexport const logisticActivation = (m: Matrix): Matrix => {\n    const kernel = gpu.createKernel(function (a) {\n        return 1.0 / (1.0 + Math.exp(-a[this.thread.x][this.thread.y]));\n    }).setOutput([m.rows, m.cols]);\n    return new Matrix(m.rows, m.cols, kernel(m.data));\n};\n\nexport const logisticDerivative = (m: Matrix): Matrix => {\n    const kernel = gpu.createKernel(function (a) {\n        return a[this.thread.x][this.thread.y] * (1.0 - a[this.thread.x][this.thread.y]);\n    }).setOutput([m.rows, m.cols]);\n    return new Matrix(m.rows, m.cols, kernel(m.data));\n};\n\nexport const logisticLoss = (output: Matrix, predictions: Matrix): number => {\n    const kernel = gpu.createKernel(function (a) {\n        return Math.log(a[this.thread.x][this.thread.y]);\n    }).setOutput([output.rows, output.cols]);\n    const kernel2 = gpu.createKernel(function (a) {\n        return 1.0 - a[this.thread.x][this.thread.y];\n    }).setOutput([output.rows, output.cols]);\n    const kernel4 = gpu.createKernel(function (a) {\n        return Math.log(1.0 - a[this.thread.x][this.thread.y]);\n    }).setOutput([predictions.rows, predictions.cols]);\n\n    return elementWiseAdd(\n        elementWiseMultiply(output, new Matrix(output.rows, output.cols, kernel(output.data) as number[])),\n        elementWiseMultiply(\n            new Matrix(output.rows, output.cols, kernel2(output.data) as number[]),\n            new Matrix(predictions.rows, predictions.cols, kernel4(predictions.data) as number[])))\n        .sum()\n};\n","import { Dimension, Layers } from \"./types\";\nimport { cols, Matrix, elementWiseSubtract } from \"./math/matrix\";\nimport * as fs from \"fs\";\nimport {Dataset} from \"./dataset/Dataset\";\n\nclass Network {\n  private dimensions: Dimension = null;\n  private size: number = 0;\n  private layers: Layers[] = [];\n\n  constructor(dimensions: Dimension) {\n    this.dimensions = dimensions;\n  }\n\n  addLayer(layer: Layers) {\n    this.size++;\n    this.layers.push(layer);\n  }\n\n  forward(input: Matrix): Matrix {\n    let output = input;\n\n    this.layers.forEach((layer: Layers) => {\n      output = layer.forward(output);\n    });\n\n    return output;\n  }\n\n  backward(X: Matrix, Y: Matrix, predictions: Matrix, regularization: number) {\n    const m = cols(X);\n\n    let delta = elementWiseSubtract(predictions, Y);\n\n    this.layers.reverse().forEach((layer) => {\n      // delta = layer.backpropagation.propagate(X, m, regularization, delta)\n    });\n  }\n\n  loss(output: Matrix, predictions: Matrix) {\n    return this.layers[this.layers.length - 1].loss(output, predictions);\n  }\n\n  save(path: string): Promise<string> {\n    const resultJSON = {\n      dimensions: this.dimensions,\n      layers: [],\n    };\n\n    this.layers.forEach((layer: Layers) => {\n      resultJSON.layers.push({\n        type: layer.getType(),\n        dimensions: [\n          layer.getOutputHeight(),\n          layer.getOutputWidth(),\n          layer.getOutputDepth(),\n        ],\n        weights: {\n          W: layer.W.data,\n          b: layer.b.data,\n        },\n      });\n    });\n\n    const result = JSON.stringify(resultJSON);\n\n    return new Promise((resolve, reject) => {\n      fs.writeFile(path, result, (err) => {\n        if (err) {\n          console.error(err);\n          reject();\n        }\n        resolve(result);\n      });\n    });\n  }\n}\n\nexport { Network };\nexport default Network;\n","import { SoftmaxLayer, LogisticLayer } from \"./layer\";\n\nexport type Dimension = [number] | [number, number, number];\n\nexport enum LayerType {\n  logistic = \"logistic\",\n  softmax = \"softmax\",\n}\n\nexport type Layers = LogisticLayer | SoftmaxLayer;\nexport type Layers1D = LogisticLayer | SoftmaxLayer;\nexport type Layers2D = null;\n","module.exports = require(\"csvtojson\");","module.exports = require(\"fs\");","module.exports = require(\"gpu.js\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import { Builder1D } from \"./builder/builder1d\";\nimport { SoftmaxLayer, LogisticLayer } from \"./layer\";\nimport { Matrix } from \"./math/matrix\";\nimport {\n  multiply as matrixMultiply,\n  sum as matrixSum,\n  fillRandom as matrixFillRandom,\n  elementWiseMultiply as matrixElementWiseMultiply,\n  elementWiseDivide as matrixElementWiseDivide,\n  elementWiseAdd as matrixElementWiseAdd,\n  elementWiseSubtract as matrixElementWiseSubtract,\n} from \"./math/matrix\";\nimport { DatasetBuilder } from \"./dataset/DatasetBuilder\";\n\nexport {\n  Builder1D,\n  Matrix,\n  SoftmaxLayer,\n  LogisticLayer,\n  matrixMultiply,\n  matrixSum,\n  matrixFillRandom,\n  matrixElementWiseMultiply,\n  matrixElementWiseDivide,\n  matrixElementWiseAdd,\n  matrixElementWiseSubtract,\n  DatasetBuilder\n};\n"],"names":["Network","AbstractBuilder","dimension","dimensions","network","type","callback","layer","previousLayer","firstLayerTransition","transition","configure","addLayer","Builder1D","setWidth","Matrix","Dataset","exampleSize","numberOfExamples","arr","data","example","dataIndex","index","csvtojson","DatasetBuilder","csvPath","Promise","resolve","noheader","output","fromFile","then","length","dataset","elementWiseAdd","multiply","AbstractLayer","W","b","A","Z","gW","gb","input","replicate","cols","activation","value","width","height","depth","fillRandom","setZeros","AbstractLayer1D","resize","is1D","getSize","is3D","getOutputWidth","getOutputHeight","getOutputDepth","setHeight","SoftmaxLayer","LogisticLayer","logisticActivation","logisticDerivative","logisticLoss","LayerType","m","logistic","predictions","softmaxActivation","softmaxLoss","Error","softmax","GPU","gpu","mode","rows","generateData","Array","row","result","ArrayBuffer","view","DataView","forEach","num","i","setFloat64","sum","col","oldData","kernel","createKernel","a","thread","y","x","setOutput","m1","m2","constants","setConstants","elementWiseSubtract","parameter","Math","random","sqrt","elementWiseMultiply","elementWiseDivide","exp","divider","colwiseSum","transpose","log","kernel2","kernel4","fs","size","layers","push","forward","X","Y","regularization","delta","reverse","loss","path","resultJSON","getType","weights","JSON","stringify","reject","writeFile","err","console","error","matrixMultiply","matrixSum","matrixFillRandom","matrixElementWiseMultiply","matrixElementWiseDivide","matrixElementWiseAdd","matrixElementWiseSubtract"],"sourceRoot":""}