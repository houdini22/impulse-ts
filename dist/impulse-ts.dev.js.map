{"version":3,"file":"impulse-ts.dev.js","mappings":"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","sources":["webpack://impulse-ts/./src/typescript/Layer/AbstractLayer.ts","webpack://impulse-ts/./src/typescript/Layer/AbstractLayer1D.ts","webpack://impulse-ts/./src/typescript/Layer/AbstractLayer3D.ts","webpack://impulse-ts/./src/typescript/Layer/Backpropagation/AbstractBackpropagation.ts","webpack://impulse-ts/./src/typescript/Layer/Backpropagation/Backpropagation1Dto1D.ts","webpack://impulse-ts/./src/typescript/Layer/Backpropagation/Backpropagation3Dto1D.ts","webpack://impulse-ts/./src/typescript/Layer/Backpropagation/BackpropagationFactory.ts","webpack://impulse-ts/./src/typescript/Layer/Backpropagation/BackpropagationToConv.ts","webpack://impulse-ts/./src/typescript/Layer/Backpropagation/BackpropagationToMaxPool.ts","webpack://impulse-ts/./src/typescript/Layer/Conv.ts","webpack://impulse-ts/./src/typescript/Layer/FullyConnected.ts","webpack://impulse-ts/./src/typescript/Layer/LSTM.ts","webpack://impulse-ts/./src/typescript/Layer/Logistic.ts","webpack://impulse-ts/./src/typescript/Layer/MaxPool.ts","webpack://impulse-ts/./src/typescript/Layer/Purelin.ts","webpack://impulse-ts/./src/typescript/Layer/Recurrent.ts","webpack://impulse-ts/./src/typescript/Layer/Relu.ts","webpack://impulse-ts/./src/typescript/Layer/Softmax.ts","webpack://impulse-ts/./src/typescript/Layer/Softplus.ts","webpack://impulse-ts/./src/typescript/Layer/Tanh.ts","webpack://impulse-ts/./src/typescript/Layer/index.ts","webpack://impulse-ts/./src/typescript/Network/Network.ts","webpack://impulse-ts/./src/typescript/Network/NetworkLSTM.ts","webpack://impulse-ts/./src/typescript/Network/NetworkRNN.ts","webpack://impulse-ts/./src/typescript/Network/index.ts","webpack://impulse-ts/./src/typescript/NetworkBuilder/AbstractNetworkBuilder.ts","webpack://impulse-ts/./src/typescript/NetworkBuilder/NetworkBuilder1D.ts","webpack://impulse-ts/./src/typescript/NetworkBuilder/NetworkBuilder3D.ts","webpack://impulse-ts/./src/typescript/NetworkBuilder/index.ts","webpack://impulse-ts/./src/typescript/Trainer/AbstractTrainer.ts","webpack://impulse-ts/./src/typescript/Trainer/MiniBatchTrainer.ts","webpack://impulse-ts/./src/typescript/Trainer/Optimizer/AbstractOptimizer.ts","webpack://impulse-ts/./src/typescript/Trainer/Optimizer/OptimizerAdagrad.ts","webpack://impulse-ts/./src/typescript/Trainer/Optimizer/OptimizerAdam.ts","webpack://impulse-ts/./src/typescript/Trainer/Optimizer/OptimizerGradientDescent.ts","webpack://impulse-ts/./src/typescript/Trainer/Optimizer/OptimizerMomentum.ts","webpack://impulse-ts/./src/typescript/Trainer/Optimizer/OptimizerRMSProp.ts","webpack://impulse-ts/./src/typescript/Trainer/Optimizer/index.ts","webpack://impulse-ts/./src/typescript/Trainer/RNNTrainer.ts","webpack://impulse-ts/./src/typescript/Trainer/Trainer.ts","webpack://impulse-ts/./src/typescript/Trainer/index.ts","webpack://impulse-ts/./src/typescript/types.ts","webpack://impulse-ts/./node_modules/impulse-math-ts/dist/impulse-math-ts.js","webpack://impulse-ts/external node-commonjs \"fs\"","webpack://impulse-ts/external node-commonjs \"path\"","webpack://impulse-ts/webpack/bootstrap","webpack://impulse-ts/webpack/runtime/compat get default export","webpack://impulse-ts/webpack/runtime/define property getters","webpack://impulse-ts/webpack/runtime/hasOwnProperty shorthand","webpack://impulse-ts/webpack/runtime/make namespace object","webpack://impulse-ts/./src/typescript/main.ts"],"sourcesContent":["import { Matrix } from \"impulse-math-ts\";\nimport { Dimension, Layers } from \"../types\";\nimport { AbstractBackPropagation } from \"./Backpropagation/AbstractBackpropagation\";\n\nabstract class AbstractLayer {\n  protected width = 0;\n  protected height = 0;\n  protected depth = 0;\n  protected previousLayer: Layers | null = null;\n  protected backPropagation: AbstractBackPropagation | null = null;\n\n  constructor() {}\n\n  setBackPropagation(backPropagation: AbstractBackPropagation): Layers {\n    this.backPropagation = backPropagation;\n    return this;\n  }\n\n  getBackPropagation(): AbstractBackPropagation | null {\n    return this.backPropagation;\n  }\n\n  setWidth(value: number): Layers {\n    this.width = value;\n    return this;\n  }\n\n  getWidth(): number {\n    return this.width;\n  }\n\n  setHeight(value: number): Layers {\n    this.height = value;\n    return this;\n  }\n\n  getHeight(): number {\n    return this.height;\n  }\n\n  setDepth(value: number): Layers {\n    this.depth = value;\n    return this;\n  }\n\n  getDepth(): number {\n    return this.depth;\n  }\n\n  abstract getOutputWidth(): number;\n\n  abstract getOutputHeight(): number;\n\n  abstract getOutputDepth(): number;\n\n  abstract configure(): void;\n\n  abstract is1D(): boolean;\n\n  abstract is3D(): boolean;\n\n  transition(previousLayer: Layers): Layers {\n    this.previousLayer = previousLayer;\n    return this;\n  }\n\n  abstract getSize(): Dimension | number;\n\n  abstract activation(value: Matrix): Matrix;\n\n  abstract getType(): string;\n\n  abstract derivative(delta: Matrix): Matrix;\n\n  abstract penalty(): number;\n}\n\nexport { AbstractLayer };\n","import { AbstractLayer } from \"./AbstractLayer\";\nimport { Layers } from \"../types\";\nimport { Matrix } from \"impulse-math-ts\";\n\nabstract class AbstractLayer1D extends AbstractLayer {\n  protected depth = 1;\n  public W: Matrix;\n  public b: Matrix;\n  public A: Matrix;\n  public Z: Matrix;\n  public gW: Matrix;\n  public gb: Matrix;\n  public vW: Matrix;\n  public sW: Matrix;\n  public vb: Matrix;\n  public sb: Matrix;\n  public dW: Matrix;\n  public db: Matrix;\n  public dZ: Matrix;\n\n  constructor() {\n    super();\n    this.W = new Matrix();\n    this.b = new Matrix();\n    this.A = new Matrix();\n    this.Z = new Matrix();\n    this.gW = new Matrix();\n    this.gb = new Matrix();\n    this.vW = new Matrix();\n    this.vb = new Matrix();\n    this.sW = new Matrix();\n    this.sb = new Matrix();\n    this.dW = new Matrix();\n    this.db = new Matrix();\n  }\n\n  configure(): void {\n    this.W.resize(this.getHeight(), this.getWidth());\n    this.W = this.W.setRandom(this.previousLayer ? (this.previousLayer.getHeight() as number) : this.getHeight());\n\n    this.b.resize(this.getHeight(), 1);\n    this.b = this.b.setRandom(this.previousLayer ? (this.previousLayer.getHeight() as number) : this.getHeight());\n\n    this.gW.resize(this.getHeight(), this.getWidth());\n    this.gW = this.gW.setZeros();\n\n    this.gb.resize(this.getHeight(), 1);\n    this.gb = this.gb.setZeros();\n\n    this.sW.resize(this.getHeight(), this.getWidth());\n    this.sW = this.sW.setZeros();\n\n    this.sb.resize(this.getHeight(), 1);\n    this.sb = this.sb.setZeros();\n\n    this.vW.resize(this.getHeight(), this.getWidth());\n    this.vW = this.vW.setZeros();\n\n    this.vb.resize(this.getHeight(), 1);\n    this.vb = this.vb.setZeros();\n\n    this.dW.resize(this.getHeight(), this.getWidth());\n    this.dW = this.dW.setZeros();\n\n    this.db.resize(this.getHeight(), 1);\n    this.db = this.db.setZeros();\n  }\n\n  forward(input: Matrix): Matrix {\n    this.Z = this.W.dot(input).add(this.b.replicate(1, input.cols));\n    this.A = this.activation(this.Z);\n    return this.A;\n  }\n\n  is1D(): boolean {\n    return true;\n  }\n\n  is3D(): boolean {\n    return false;\n  }\n\n  transition(previousLayer: Layers): AbstractLayer1D {\n    if (previousLayer.is1D()) {\n      this.setWidth(previousLayer.getSize() as number);\n    } else if (previousLayer.is3D()) {\n      this.setWidth(previousLayer.getOutputWidth() * previousLayer.getOutputHeight() * previousLayer.getOutputDepth());\n    }\n\n    super.transition(previousLayer);\n\n    return this;\n  }\n\n  setSize(value: number): AbstractLayer1D {\n    this.setHeight(value as number);\n\n    return this;\n  }\n\n  getSize(): number {\n    return this.height;\n  }\n\n  getOutputWidth(): number {\n    return this.width;\n  }\n\n  getOutputHeight(): number {\n    return this.height;\n  }\n\n  getOutputDepth(): number {\n    return 1;\n  }\n\n  penalty(): number {\n    return this.W.pow(2).sum();\n  }\n}\n\nexport { AbstractLayer1D };\n","import { AbstractLayer } from \"./AbstractLayer\";\nimport { Dimension, Layers } from \"../types\";\nimport { Matrix } from \"impulse-math-ts\";\n\nabstract class AbstractLayer3D extends AbstractLayer {\n  public W: Matrix;\n  public b: Matrix;\n  public A: Matrix;\n  public Z: Matrix;\n  public gW: Matrix;\n  public gb: Matrix;\n  public vW: Matrix;\n  public sW: Matrix;\n  public vb: Matrix;\n  public sb: Matrix;\n  public dW: Matrix;\n  public db: Matrix;\n  public dZ: Matrix;\n\n  constructor() {\n    super();\n    this.W = new Matrix();\n    this.b = new Matrix();\n    this.A = new Matrix();\n    this.Z = new Matrix();\n    this.gW = new Matrix();\n    this.gb = new Matrix();\n    this.vW = new Matrix();\n    this.vb = new Matrix();\n    this.sW = new Matrix();\n    this.sb = new Matrix();\n    this.dW = new Matrix();\n    this.db = new Matrix();\n  }\n\n  configure(): void {\n    // do nothing\n  }\n\n  is1D(): boolean {\n    return false;\n  }\n\n  is3D(): boolean {\n    return true;\n  }\n\n  transition(previousLayer: Layers): Layers {\n    if (previousLayer.is3D()) {\n      this.setSize([previousLayer.getOutputWidth(), previousLayer.getOutputHeight(), previousLayer.getOutputDepth()]);\n    }\n\n    super.transition(previousLayer);\n\n    return this;\n  }\n\n  setSize(dimension: Dimension | number): Layers {\n    this.setWidth(dimension[0]);\n    this.setHeight(dimension[1]);\n    this.setDepth(dimension[2]);\n\n    return this;\n  }\n\n  getSize(): Dimension {\n    return [this.getWidth(), this.getHeight(), this.getDepth()];\n  }\n\n  abstract getPadding(): number;\n\n  abstract getStride(): number;\n\n  abstract getFilterSize(): number;\n\n  abstract forward(input: Matrix): Matrix;\n\n  abstract derivative(delta: Matrix): Matrix;\n\n  penalty(): number {\n    return this.W.pow(2).sum();\n  }\n}\n\nexport { AbstractLayer3D };\n","import { Layers } from \"../../types\";\nimport { Matrix } from \"../../Math/Matrix\";\n\nexport abstract class AbstractBackPropagation {\n  protected layer: Layers | null = null;\n  protected previousLayer: Layers | null = null;\n\n  constructor(layer: Layers | null, previousLayer: Layers) {\n    this.layer = layer;\n    this.previousLayer = previousLayer;\n  }\n\n  abstract propagate(\n    input: Matrix,\n    numberOfExamples: number,\n    regularization: number,\n    layer: Layers,\n    sigma: Matrix\n  ): Matrix;\n}\n","import { AbstractBackPropagation } from \"./AbstractBackpropagation\";\nimport { Matrix } from \"impulse-math-ts\";\nimport { Layers } from \"../../types\";\n\nexport class Backpropagation1Dto1D extends AbstractBackPropagation {\n  propagate(input: Matrix, numberOfExamples: number, regularization: number, layer: Layers, sigma: Matrix): Matrix {\n    const previousActivations = this.previousLayer !== null ? this.previousLayer.A : input;\n\n    const delta = sigma.dot(previousActivations.transpose());\n    this.layer.gW = delta.divide(numberOfExamples).add(layer.W.multiply(regularization / numberOfExamples));\n    this.layer.gb = sigma.rowwiseSum().transpose().divide(numberOfExamples);\n\n    if (this.previousLayer !== null) {\n      // @ts-ignore\n      const result = this.layer.W.transpose().dot(sigma);\n      if (result.rows !== previousActivations.rows || result.cols !== previousActivations.cols) {\n        throw new Error(\n          `Dimension error 1. (${result.rows}, ${result.cols}) | (${previousActivations.rows}, ${previousActivations.cols})`\n        );\n      }\n      if (this.layer.gW.rows !== this.layer.W.rows || this.layer.gW.cols !== this.layer.W.cols) {\n        throw new Error(\n          `Dimension error 2. (${this.layer.gW.rows}, ${this.layer.gW.cols}) | (${this.layer.W.rows}, ${this.layer.W.cols})`\n        );\n      }\n      if (this.layer.gb.rows !== this.layer.b.rows || this.layer.gb.cols !== this.layer.b.cols) {\n        throw new Error(\n          `Dimension error 3. (${this.layer.gb.rows}, ${this.layer.gb.cols}) | (${this.layer.b.rows}, ${this.layer.b.cols})`\n        );\n      }\n      return result;\n    }\n    return new Matrix();\n  }\n}\n","import { AbstractBackPropagation } from \"./AbstractBackpropagation\";\nimport { Matrix } from \"../../Math/Matrix\";\nimport { Layers } from \"../../types\";\n\nexport class Backpropagation3Dto1D extends AbstractBackPropagation {\n  propagate(input: Matrix, numberOfExamples: number, regularization: number, layer: Layers, sigma: Matrix): Matrix {\n    return sigma;\n  }\n}\n","import { Layers, LayerType } from \"../../types\";\nimport { Backpropagation1Dto1D } from \"./Backpropagation1Dto1D\";\nimport { Backpropagation3Dto1D } from \"./Backpropagation3Dto1D\";\nimport { BackpropagationToMaxPool } from \"./BackpropagationToMaxPool\";\nimport { BackpropagationToConv } from \"./BackpropagationToConv\";\nimport { AbstractBackPropagation } from \"./AbstractBackpropagation\";\n\nexport class BackpropagationFactory {\n  static create(previousLayer: Layers, layer: Layers): AbstractBackPropagation | null {\n    if (previousLayer == null) {\n      if (layer.is1D()) {\n        return new Backpropagation1Dto1D(layer, previousLayer);\n      } else if (layer.getType() == LayerType.conv) {\n        return new Backpropagation3Dto1D(layer, previousLayer);\n      }\n    } else {\n      if (previousLayer.getType() == LayerType.maxpool) {\n        return new BackpropagationToMaxPool(layer, previousLayer);\n      } else if (previousLayer.getType() == LayerType.conv) {\n        return new BackpropagationToConv(layer, previousLayer);\n      } else if (previousLayer.is1D() || previousLayer.getType() == LayerType.fullyconnected) {\n        return new Backpropagation1Dto1D(layer, previousLayer);\n      }\n    }\n    return null;\n  }\n}\n","import { AbstractBackPropagation } from \"./AbstractBackpropagation\";\nimport { Matrix } from \"impulse-math-ts\";\nimport { Layers, Layers3D } from \"../../types\";\nimport { getComputation } from \"impulse-math-ts\";\n\nexport class BackpropagationToConv extends AbstractBackPropagation {\n  protected previousLayer: Layers3D | null = null;\n\n  propagate(input: Matrix, numberOfExamples: number, regularization: number, layer: Layers, sigma: Matrix): Matrix {\n    const previousLayer = this.previousLayer;\n\n    if (previousLayer) {\n      const padding = previousLayer.getPadding();\n      const stride = previousLayer.getStride();\n      const filterSize = previousLayer.getFilterSize();\n      const outputWidth = previousLayer.getOutputWidth();\n      const outputHeight = previousLayer.getOutputHeight();\n      const outputDepth = previousLayer.getOutputDepth();\n      const inputWidth = previousLayer.getWidth();\n      const inputHeight = previousLayer.getHeight();\n      const inputDepth = previousLayer.getDepth();\n\n      const tmpResult = getComputation().execute(\n        \"fillZeros\",\n        new Matrix((inputWidth + 2 * padding) * (inputHeight + 2 * padding) * inputDepth, numberOfExamples)\n      ) as Matrix;\n\n      const result = new Matrix(inputWidth * inputHeight * inputDepth, numberOfExamples);\n\n      previousLayer.gW = getComputation().execute(\"fillZeros\", previousLayer.gW) as Matrix;\n      previousLayer.gb = getComputation().execute(\"fillZeros\", previousLayer.gb) as Matrix;\n\n      for (let m = 0; m < numberOfExamples; m++) {\n        for (let c = 0; c < outputDepth; c++) {\n          for (let h = 0; h < outputHeight; h++) {\n            for (let w = 0; w < outputWidth; w++) {\n              const vertStart = stride * h;\n              const vertEnd = vertStart + filterSize;\n              const horizStart = stride * w;\n              const horizEnd = horizStart + filterSize;\n\n              // filter loop\n              for (let d = 0; d < inputDepth; d++) {\n                for (\n                  let y = 0, vertical = vertStart, verticalPad = -padding;\n                  y < filterSize;\n                  y++, vertical++, verticalPad++\n                ) {\n                  for (\n                    let x = 0, horizontal = horizStart, horizontalPad = -padding;\n                    x < filterSize;\n                    x++, horizontal++, horizontalPad++\n                  ) {\n                    if (previousLayer.W.data && tmpResult.data && sigma.data) {\n                      tmpResult.data[\n                        d * (inputWidth + 2 * padding) * (inputHeight + 2 * padding) +\n                          vertical * (inputWidth + 2 * padding) +\n                          horizontal\n                      ][m] +=\n                        previousLayer.W.data[c][d * filterSize * filterSize + y * filterSize + x] *\n                        sigma.data[c * outputWidth * outputHeight + h * outputWidth + w][m];\n                    }\n\n                    let z = 0;\n                    if (padding == 0) {\n                      if (previousLayer.Z.data) {\n                        z = previousLayer.Z.data[d * inputWidth * inputHeight + vertical * inputWidth + horizontal][m];\n                      }\n                    } else {\n                      if (\n                        verticalPad >= 0 &&\n                        horizontalPad >= 0 &&\n                        verticalPad < inputHeight &&\n                        horizontalPad < inputWidth\n                      ) {\n                        if (previousLayer.Z.data) {\n                          z =\n                            previousLayer.Z.data[\n                              d * inputWidth * inputHeight + verticalPad * inputWidth + horizontalPad\n                            ][m];\n                        }\n                      }\n                    }\n\n                    if (previousLayer.gW.data && sigma.data) {\n                      previousLayer.gW.data[c][d * filterSize * filterSize + y * filterSize + x] +=\n                        (z * sigma.data[c * (outputWidth * outputHeight) + h * outputWidth + w][m]) / numberOfExamples;\n                    }\n                  }\n                }\n              }\n\n              if (previousLayer.gb.data && sigma.data) {\n                previousLayer.gb.data[c][0] +=\n                  sigma.data[c * (outputWidth * outputHeight) + h * outputWidth + w][m] / numberOfExamples;\n              }\n            }\n          }\n        }\n\n        if (padding > 0) {\n          // unpad\n          for (let c = 0; c < inputDepth; c++) {\n            for (let h = -padding, y = 0; h < inputHeight + padding; h++, y++) {\n              for (let w = -padding, x = 0; w < inputWidth + padding; w++, x++) {\n                if (w >= 0 && h >= 0 && w < inputWidth && h < inputHeight && result.data && tmpResult.data) {\n                  result.data[c * inputWidth * inputHeight + h * inputWidth + w][m] =\n                    tmpResult.data[\n                      c * (inputWidth + 2 * padding) * (inputHeight + 2 * padding) + y * (inputWidth + 2 * padding) + x\n                    ][m];\n                }\n              }\n            }\n          }\n        }\n      }\n\n      if (padding > 0) {\n        return result;\n      }\n\n      return tmpResult;\n    }\n  }\n}\n","import { AbstractBackPropagation } from \"./AbstractBackpropagation\";\nimport { Matrix } from \"impulse-math-ts\";\nimport { Layers, Layers3D } from \"../../types\";\nimport { getComputation } from \"impulse-math-ts\";\n\nexport class BackpropagationToMaxPool extends AbstractBackPropagation {\n  protected previousLayer: Layers3D | null = null;\n\n  propagate(input: Matrix, numberOfExamples: number, regularization: number, layer: Layers, sigma: Matrix): Matrix {\n    const prevLayer = this.previousLayer;\n    if (prevLayer) {\n      const result = getComputation().execute(\"fillZeros\", new Matrix(prevLayer.Z.rows, prevLayer.Z.cols)) as Matrix;\n\n      const filterSize = prevLayer.getFilterSize();\n      const stride = prevLayer.getStride();\n      const inputWidth = prevLayer.getWidth();\n      const inputHeight = prevLayer.getHeight();\n      const inputDepth = prevLayer.getDepth();\n      const outputWidth = prevLayer.getOutputWidth();\n      const outputHeight = prevLayer.getOutputHeight();\n      const outputDepth = prevLayer.getOutputDepth();\n\n      for (let m = 0; m < numberOfExamples; m++) {\n        for (let c = 0; c < outputDepth; c++) {\n          for (let h = 0; h < outputHeight; h++) {\n            for (let w = 0; w < outputWidth; w++) {\n              const vertStart = stride * h;\n              const vertEnd = vertStart + filterSize;\n              const horizStart = stride * w;\n              const horizEnd = horizStart + filterSize;\n\n              let _max = -Infinity;\n              const inputOffset = inputHeight * inputWidth * c;\n              const outputOffset = outputHeight * outputWidth * c;\n              let maxX = 0;\n              let maxY = 0;\n\n              for (let y = 0, vStart = vertStart; y < filterSize; y++, vStart++) {\n                for (let x = 0, hStart = horizStart; x < filterSize; x++, hStart++) {\n                  if (prevLayer.Z.data && _max < prevLayer.Z.data[inputOffset + vStart * inputWidth + hStart][m]) {\n                    _max = prevLayer.Z.data[inputOffset + vStart * inputWidth + hStart][m];\n                    maxX = hStart;\n                    maxY = vStart;\n                  }\n                }\n              }\n\n              if (result.data && sigma.data) {\n                result.data[inputOffset + maxY * inputWidth + maxX][m] =\n                  sigma.data[outputOffset + h * outputWidth + w][m];\n              }\n            }\n          }\n        }\n      }\n\n      return result;\n    }\n\n    return new Matrix();\n  }\n}\n","import { Matrix, im2col, getComputation } from \"impulse-math-ts\";\nimport { LayerType } from \"../types\";\nimport { AbstractLayer3D } from \"./AbstractLayer3D\";\n\nexport class ConvLayer extends AbstractLayer3D {\n  protected numFilters = 32;\n  protected filterSize = 4;\n  protected padding = 1;\n  protected stride = 1;\n\n  configure(): void {\n    this.W.resize(this.numFilters, this.filterSize * this.filterSize * this.depth);\n    this.W = this.W.setRandom(this.getOutputWidth() * this.getOutputHeight() * this.getOutputDepth());\n\n    this.b.resize(this.numFilters, 1);\n    this.b = this.b.setRandom(this.getOutputWidth() * this.getOutputHeight() * this.getOutputDepth());\n\n    this.gW.resize(this.numFilters, this.filterSize * this.filterSize * this.depth);\n    this.gW = this.gW.setZeros();\n\n    this.gb.resize(this.numFilters, 1);\n    this.gb = this.gb.setZeros();\n\n    this.sW.resize(this.numFilters, this.filterSize * this.filterSize * this.depth);\n    this.sW = this.sW.setZeros();\n\n    this.sb.resize(this.numFilters, 1);\n    this.sb = this.sb.setZeros();\n\n    this.vW.resize(this.numFilters, this.filterSize * this.filterSize * this.depth);\n    this.vW = this.vW.setZeros();\n\n    this.vb.resize(this.numFilters, 1);\n    this.vb = this.vb.setZeros();\n  }\n\n  getOutputHeight(): number {\n    return (this.width - this.filterSize + 2 * this.padding) / this.stride + 1;\n  }\n\n  getOutputWidth(): number {\n    return (this.height - this.filterSize + 2 * this.padding) / this.stride + 1;\n  }\n\n  getOutputDepth(): number {\n    return this.numFilters;\n  }\n\n  setFilterSize(size: number): ConvLayer {\n    this.filterSize = size;\n    return this;\n  }\n\n  getFilterSize(): number {\n    return this.filterSize;\n  }\n\n  setNumFilters(numFilters: number): ConvLayer {\n    this.numFilters = numFilters;\n    return this;\n  }\n\n  getNumFilters(): number {\n    return this.numFilters;\n  }\n\n  setPadding(padding: number): ConvLayer {\n    this.padding = padding;\n    return this;\n  }\n\n  getPadding(): number {\n    return this.padding;\n  }\n\n  setStride(stride: number): ConvLayer {\n    this.stride = stride;\n    return this;\n  }\n\n  getStride(): number {\n    return this.stride;\n  }\n\n  forward(input: Matrix): Matrix {\n    const result = new Matrix(\n      this.getOutputWidth() * this.getOutputHeight() * this.getOutputDepth(),\n      input.cols\n    ).setZeros();\n\n    for (let i = 0; i < input.cols; i += 1) {\n      const conv = im2col(\n        input.col(i),\n        this.depth,\n        this.height,\n        this.width,\n        this.filterSize,\n        this.filterSize,\n        this.padding,\n        this.padding,\n        this.stride,\n        this.stride\n      );\n\n      const tmp = this.W.dot(conv.transpose()).add(this.b.replicate(1, conv.rows));\n      result.setCol(i, tmp.rollToColMatrix());\n    }\n\n    this.Z = result;\n    this.A = this.activation(this.Z);\n\n    return this.A;\n  }\n\n  activation(m: Matrix): Matrix {\n    return m.setMin(0);\n  }\n\n  getType(): LayerType {\n    return LayerType.conv;\n  }\n\n  derivative(delta: Matrix) {\n    return getComputation().execute(\"reluBackpropagation\", delta, this.A) as Matrix;\n  }\n}\n","import { Dimension, LayerType } from \"../types\";\nimport { ConvLayer } from \"./Conv\";\n\nclass FullyConnectedLayer extends ConvLayer {\n  transition(previousLayer: FullyConnectedLayer): FullyConnectedLayer {\n    if (previousLayer.is3D()) {\n      if (previousLayer.getType() == LayerType.maxpool) {\n        this.filterSize = previousLayer.getOutputWidth();\n        this.padding = 0;\n        this.stride = 1;\n        this.width = previousLayer.getOutputWidth();\n        this.height = previousLayer.getOutputHeight();\n        this.depth = previousLayer.getOutputDepth();\n        this.numFilters =\n          previousLayer.getOutputWidth() * previousLayer.getOutputHeight() * previousLayer.getOutputDepth();\n      } else {\n        throw new Error(\"Invalid usage. Cannot fully connect with previous non maxpool Layer.\");\n      }\n    } else {\n      throw new Error(\"Invalid usage. Cannot fully connect with previous 1D Layer.\");\n    }\n\n    return this;\n  }\n\n  setSize(dimension: Dimension): FullyConnectedLayer {\n    return this;\n  }\n\n  setFilterSize(filterSize: number): FullyConnectedLayer {\n    return this;\n  }\n\n  setStride(stride: number): FullyConnectedLayer {\n    return this;\n  }\n\n  setPadding(padding: number): FullyConnectedLayer {\n    return this;\n  }\n\n  setWidth(value: number): FullyConnectedLayer {\n    return this;\n  }\n\n  setHeight(value: number): FullyConnectedLayer {\n    return this;\n  }\n\n  setDepth(value: number): FullyConnectedLayer {\n    return this;\n  }\n\n  setNumFilters(value: number): FullyConnectedLayer {\n    return this;\n  }\n}\n\nexport { FullyConnectedLayer };\n","import { Matrix } from \"impulse-math-ts\";\nimport { Dimension, LayerType } from \"../types\";\nimport { AbstractLayer } from \"./AbstractLayer\";\n\nexport class LSTMLayer extends AbstractLayer {\n  public Wf: Matrix | null = null;\n  public bf: Matrix | null = null;\n  public Wi: Matrix | null = null;\n  public bi: Matrix | null = null;\n  public Wc: Matrix | null = null;\n  public bc: Matrix | null = null;\n  public Wo: Matrix | null = null;\n  public bo: Matrix | null = null;\n  public Wy: Matrix | null = null;\n  public by: Matrix | null = null;\n  public dxt: Matrix | null = null;\n  public dWf: Matrix | null = null;\n  public dWi: Matrix | null = null;\n  public dWc: Matrix | null = null;\n  public dWo: Matrix | null = null;\n  public dbf: Matrix | null = null;\n  public dbi: Matrix | null = null;\n  public dbc: Matrix | null = null;\n  public dbo: Matrix | null = null;\n\n  configure(): void {}\n\n  forward(input: Matrix, aPrev: Matrix, cPrev): Matrix[] {\n    const nx = input.rows;\n    const m = input.cols;\n    const ny = this.Wy.rows;\n    const na = this.Wy.cols;\n\n    const concat = new Matrix(nx + na, m).concat(input).concat(this.Wy);\n\n    const ft = this.Wf.dot(concat).add(this.bf).sigmoid();\n    const it = this.Wi.dot(concat).add(this.bi).sigmoid();\n    const cct = this.Wc.dot(concat).add(this.bc).tanh();\n    const cNext = ft.multiply(cPrev).add(it.multiply(cct));\n    const ot = this.Wo.dot(concat).add(this.bo).sigmoid();\n    const aNext = ot.multiply(cNext.tanh());\n\n    const ytPred = this.Wy.dot(aNext).add(this.by).softmax();\n    return [aNext, cPrev];\n  }\n\n  backward(daNext: Matrix, dcNext: Matrix): void {}\n\n  activation(m: Matrix): Matrix {\n    return m;\n  }\n\n  getType(): LayerType {\n    return LayerType.rnnlayer;\n  }\n\n  derivative(delta: Matrix): Matrix {\n    return delta;\n  }\n\n  is1D(): boolean {\n    return true;\n  }\n\n  is3D(): boolean {\n    return false;\n  }\n\n  setSize(value: Dimension): LSTMLayer {\n    this.setWidth(value[0]);\n    this.setHeight(value[1]);\n    this.setDepth(value[2]);\n\n    return this;\n  }\n\n  getSize(): number {\n    return this.height;\n  }\n\n  getOutputWidth(): number {\n    return this.width;\n  }\n\n  getOutputHeight(): number {\n    return this.height;\n  }\n\n  getOutputDepth(): number {\n    return this.depth;\n  }\n\n  penalty(): number {\n    return 0;\n  }\n}\n","import { Matrix } from \"impulse-math-ts\";\nimport { LayerType } from \"../types\";\nimport { AbstractLayer1D } from \"./AbstractLayer1D\";\n\nclass LogisticLayer extends AbstractLayer1D {\n  activation(m: Matrix): Matrix {\n    return m.multiply(-1).exp().add(1).fraction(1);\n  }\n\n  getType(): LayerType {\n    return LayerType.logistic;\n  }\n\n  derivative(delta: Matrix): Matrix {\n    return delta.multiply(this.activation(delta).multiply(this.activation(delta.minusOne())));\n  }\n}\n\nexport { LogisticLayer };\n","import { Matrix } from \"impulse-math-ts\";\nimport { maxpool } from \"impulse-math-ts\";\nimport { LayerType } from \"../types\";\nimport { AbstractLayer3D } from \"./AbstractLayer3D\";\n\nclass MaxPoolLayer extends AbstractLayer3D {\n  filterSize = 0;\n  stride = 0;\n\n  configure(): void {\n    // do nothing\n  }\n\n  getOutputHeight(): number {\n    return (this.height - this.filterSize) / this.stride + 1;\n  }\n\n  getOutputWidth(): number {\n    return (this.width - this.filterSize) / this.stride + 1;\n  }\n\n  getOutputDepth(): number {\n    return this.depth;\n  }\n\n  setFilterSize(size: number): MaxPoolLayer {\n    this.filterSize = size;\n    return this;\n  }\n\n  getFilterSize(): number {\n    return this.filterSize;\n  }\n\n  setStride(stride: number): MaxPoolLayer {\n    this.stride = stride;\n    return this;\n  }\n\n  getStride(): number {\n    return this.stride;\n  }\n\n  getPadding(): number {\n    return 0;\n  }\n\n  forward(input: Matrix): Matrix {\n    const result = new Matrix(this.getOutputWidth() * this.getOutputHeight() * this.getOutputDepth(), input.cols);\n\n    for (let i = 0; i < input.cols; i += 1) {\n      const pool = maxpool(\n        input.col(i),\n        this.depth,\n        this.height,\n        this.width,\n        this.filterSize,\n        this.filterSize,\n        this.stride,\n        this.stride\n      );\n\n      result.setCol(i, pool.rollToColMatrix());\n    }\n\n    this.Z = result;\n    this.A = this.activation(this.Z);\n\n    return this.A;\n  }\n\n  activation(m: Matrix): Matrix {\n    return m;\n  }\n\n  getType(): LayerType {\n    return LayerType.maxpool;\n  }\n\n  derivative(delta: Matrix): Matrix {\n    return delta;\n  }\n}\n\nexport { MaxPoolLayer };\n","import { Matrix } from \"impulse-math-ts\";\nimport { LayerType } from \"../types\";\nimport { AbstractLayer1D } from \"./AbstractLayer1D\";\n\nclass PurelinLayer extends AbstractLayer1D {\n  activation(m: Matrix): Matrix {\n    return m;\n  }\n\n  getType(): LayerType {\n    return LayerType.purelin;\n  }\n\n  derivative(delta: Matrix): Matrix {\n    return delta.setOnes();\n  }\n}\n\nexport { PurelinLayer };\n","import { Matrix } from \"impulse-math-ts\";\nimport { Dimension, LayerType } from \"../types\";\nimport { AbstractLayer } from \"./AbstractLayer\";\n\nexport interface GradientResult {\n  dWax: Matrix;\n  dWya: Matrix;\n  dWaa: Matrix;\n  db: Matrix;\n  dby: Matrix;\n  daNext: Matrix;\n}\n\nexport class RecurrentLayer extends AbstractLayer {\n  public wX: Matrix | null = null;\n  public wA: Matrix | null = null;\n  public wY: Matrix | null = null;\n  public wB: Matrix | null = null;\n  public wBY: Matrix | null = null;\n  public dwX: Matrix | null = null;\n  public dwA: Matrix | null = null;\n  public dwY: Matrix | null = null;\n  public dwB: Matrix | null = null;\n  public dwBY: Matrix | null = null;\n  public Y: Matrix[] = [];\n  public A: Matrix[] = [];\n  public X: Matrix[] = [];\n  public aNext: Matrix | null = null;\n  public aPrev: Matrix | null = null;\n  public daNext: Matrix | null = null;\n\n  configure(): void {\n    this.wX = new Matrix(this.getWidth(), this.getHeight());\n    this.wX = this.wX.setRandom(this.getWidth());\n\n    this.wA = new Matrix(this.getWidth(), this.getWidth());\n    this.wA = this.wA.setRandom(this.getWidth());\n\n    this.wY = new Matrix(this.getDepth(), this.getWidth());\n    this.wY = this.wY.setRandom(this.getDepth());\n\n    this.wB = new Matrix(this.getWidth(), 1);\n    this.wB = this.wB.setRandom(this.getWidth());\n\n    this.wBY = new Matrix(this.getDepth(), 1);\n    this.wBY = this.wBY.setRandom(this.getDepth());\n\n    this.dwX = new Matrix(this.getWidth(), this.getHeight());\n    this.dwX = this.dwX.setZeros();\n\n    this.dwA = new Matrix(this.getWidth(), this.getWidth());\n    this.dwA = this.dwA.setZeros();\n\n    this.dwY = new Matrix(this.getDepth(), this.getWidth());\n    this.dwY = this.dwY.setZeros();\n\n    this.dwB = new Matrix(this.getWidth(), 1);\n    this.dwB = this.dwB.setZeros();\n\n    this.dwBY = new Matrix(this.getDepth(), 1);\n    this.dwBY = this.dwBY.setZeros();\n\n    this.daNext = new Matrix(this.getWidth(), this.getWidth());\n    this.daNext = this.daNext.setZeros();\n  }\n\n  forward(x: Matrix, Y: Matrix, aPrev: Matrix): Object {\n    const aNext = this.wX.dot(x).add(this.wA.dot(aPrev)).add(this.wB.replicate(1, x.cols)).tanh();\n    const y = this.wY.dot(aNext).add(this.wBY.replicate(1, x.cols));\n    let p = Matrix.from(y.data).setMin(1e-8);\n    let loss = 0;\n\n    for (let row = 0; row < y.rows; row += 1) {\n      for (let col = 0; col < y.cols; col += 1) {\n        p.data[row][col] = Math.exp(p.data[row][col]);\n        loss += -Math.log(p.data[row][col]);\n      }\n    }\n\n    //p = p.divide(y.sum());\n\n    return { aNext, y, p, loss };\n  }\n\n  backward(X: Matrix, Y: Matrix, A: Matrix, aNext: Matrix): GradientResult {\n    this.dwY = this.dwY.add(Y.dot(aNext.transpose()));\n    this.dwBY = this.dwBY.add(Y.rowwiseSum().transpose());\n    const dhraw = aNext.pow(2).minusOne().multiply(this.wY.transpose().dot(Y).add(this.daNext)).setMin(-5).setMax(5);\n    this.dwB = this.dwB.add(dhraw.colwiseSum());\n    this.dwX = this.dwX.add(dhraw.dot(X));\n    this.dwA = this.dwA.add(dhraw.dot(A.transpose()));\n    this.daNext = this.wA.transpose().dot(dhraw);\n\n    /*this.dwX = this.dwX.setMin(-5).setMax(5);\n    this.dwY = this.dwY.setMin(-5).setMax(5);\n    this.dwA = this.dwA.setMin(-5).setMax(5);\n    this.dwB = this.dwB.setMin(-5).setMax(5);\n    this.dwBY = this.dwBY.setMin(-5).setMax(5);*/\n  }\n\n  activation(m: Matrix): Matrix {\n    return m;\n  }\n\n  getType(): LayerType {\n    return LayerType.rnnlayer;\n  }\n\n  derivative(delta: Matrix): Matrix {\n    return delta;\n  }\n\n  is1D(): boolean {\n    return true;\n  }\n\n  is3D(): boolean {\n    return false;\n  }\n\n  setSize(value: Dimension): RecurrentLayer {\n    this.setWidth(value[0]);\n    this.setHeight(value[1]);\n    this.setDepth(value[2]);\n\n    return this;\n  }\n\n  getSize(): number {\n    return this.height;\n  }\n\n  getOutputWidth(): number {\n    return this.width;\n  }\n\n  getOutputHeight(): number {\n    return this.height;\n  }\n\n  getOutputDepth(): number {\n    return this.depth;\n  }\n\n  penalty(): number {\n    return 0;\n  }\n\n  getWidth(): number {\n    return this.width;\n  }\n\n  reset(a0: Matrix): void {\n    this.X = [null];\n    this.A = [a0];\n    this.Y = [null];\n  }\n}\n","import { Matrix } from \"impulse-math-ts\";\nimport { LayerType } from \"../types\";\nimport { AbstractLayer1D } from \"./AbstractLayer1D\";\nimport { getComputation } from \"impulse-math-ts\";\n\nclass ReluLayer extends AbstractLayer1D {\n  activation(m: Matrix): Matrix {\n    return m.setMin(0.0);\n  }\n\n  getType(): LayerType {\n    return LayerType.relu;\n  }\n\n  derivative(delta: Matrix) {\n    return getComputation().execute(\"reluBackpropagation\", delta, this.A) as Matrix;\n  }\n}\n\nexport { ReluLayer };\n","import { Matrix } from \"impulse-math-ts\";\nimport { LayerType } from \"../types\";\nimport { AbstractLayer1D } from \"./AbstractLayer1D\";\n\nclass SoftmaxLayer extends AbstractLayer1D {\n  activation(m: Matrix): Matrix {\n    return m.softmax();\n  }\n\n  getType(): LayerType {\n    return LayerType.softmax;\n  }\n\n  derivative(delta: Matrix): Matrix {\n    return delta.multiply(-1).add(1).fraction(1);\n  }\n}\n\nexport { SoftmaxLayer };\n","import { Matrix } from \"impulse-math-ts\";\nimport { LayerType } from \"../types\";\nimport { AbstractLayer1D } from \"./AbstractLayer1D\";\n\nclass SoftplusLayer extends AbstractLayer1D {\n  activation(m: Matrix): Matrix {\n    return m.exp().add(1).log();\n  }\n\n  getType(): LayerType {\n    return LayerType.softplus;\n  }\n\n  derivative(delta: Matrix): Matrix {\n    return delta.multiply(-1).exp().add(1).fraction(1);\n  }\n}\n\nexport { SoftplusLayer };\n","import { Matrix } from \"impulse-math-ts\";\nimport { LayerType } from \"../types\";\nimport { AbstractLayer1D } from \"./AbstractLayer1D\";\n\nclass TanhLayer extends AbstractLayer1D {\n  activation(m: Matrix): Matrix {\n    return m.tanh();\n  }\n\n  getType(): LayerType {\n    return LayerType.tanh;\n  }\n\n  derivative(sigma: Matrix): Matrix {\n    return this.activation(sigma).pow(2).minusOne();\n  }\n}\n\nexport { TanhLayer };\n","import { AbstractLayer } from \"./AbstractLayer\";\nimport { SoftmaxLayer } from \"./Softmax\";\nimport { LogisticLayer } from \"./Logistic\";\nimport { TanhLayer } from \"./Tanh\";\nimport { ReluLayer } from \"./Relu\";\nimport { SoftplusLayer } from \"./Softplus\";\nimport { ConvLayer } from \"./Conv\";\nimport { FullyConnectedLayer } from \"./FullyConnected\";\nimport { MaxPoolLayer } from \"./MaxPool\";\nimport { RecurrentLayer } from \"./Recurrent\";\nimport { PurelinLayer } from \"./Purelin\";\nimport { LSTMLayer } from \"./LSTM\";\n\nexport {\n  AbstractLayer,\n  SoftmaxLayer,\n  LogisticLayer,\n  TanhLayer,\n  ReluLayer,\n  SoftplusLayer,\n  ConvLayer,\n  FullyConnectedLayer,\n  MaxPoolLayer,\n  RecurrentLayer,\n  PurelinLayer,\n  LSTMLayer,\n};\n","import { Dimension, Layers } from \"../types\";\nimport { Matrix } from \"impulse-math-ts\";\nimport * as fs from \"fs\";\n\nclass Network {\n  private readonly dimensions: Dimension | null = null;\n  private size = 0;\n  private layers: Layers[] = [];\n\n  constructor(dimensions: Dimension) {\n    this.dimensions = dimensions;\n  }\n\n  addLayer(layer: Layers): Network {\n    this.size++;\n    this.layers.push(layer);\n\n    return this;\n  }\n\n  getLayers(): Layers[] {\n    return this.layers;\n  }\n\n  forward(input: Matrix): Matrix {\n    let output = input;\n\n    this.layers.forEach((layer: Layers) => {\n      output = layer.forward(output);\n    });\n\n    return output;\n  }\n\n  backward(X: Matrix, Y: Matrix, regularization: number): void {\n    const m = X.cols;\n    const predictions = this.forward(X);\n    //let sigma = Y.divide(predictions).multiply(-1).subtract(Y.minusOne().divide(predictions.minusOne()));\n    let sigma = predictions.subtract(Y);\n\n    for (let layer = this.layers.length - 1; layer >= 0; layer -= 1) {\n      sigma = this.layers[layer]\n        .getBackPropagation()\n        .propagate(X, m, regularization, this.layers[layer], this.layers[layer].derivative(sigma));\n    }\n  }\n\n  save(path: string): Promise<string> {\n    const resultJSON = {\n      dimensions: this.dimensions,\n      layers: [],\n    };\n\n    this.layers.forEach((layer: Layers) => {\n      resultJSON.layers.push({\n        type: layer.getType(),\n        size: layer.getSize(),\n        weights: {\n          W: layer.W.data,\n          b: layer.b.data,\n        },\n      });\n    });\n\n    const result = JSON.stringify(resultJSON);\n\n    return new Promise((resolve, reject) => {\n      fs.writeFile(path, result, (err) => {\n        if (err) {\n          console.error(err);\n          reject();\n        }\n        resolve(result);\n      });\n    });\n  }\n}\n\nexport { Network };\nexport default Network;\n","import { Dimension, Layers, LayersLSTM } from \"../types\";\nimport { Matrix } from \"impulse-math-ts\";\n\nexport class NetworkLSTM {\n  private readonly dimensions: Dimension | null = null;\n  private size = 0;\n  private layers: LayersLSTM[] = [];\n\n  constructor(dimensions: Dimension) {\n    this.dimensions = dimensions;\n  }\n\n  addLayer(layer: LayersLSTM): NetworkLSTM {\n    this.size++;\n    this.layers.push(layer);\n\n    return this;\n  }\n\n  getLayers(): LayersLSTM[] {\n    return this.layers;\n  }\n\n  loss(vocabularySize: number, sequenceLength: number): number {\n    return -Math.log(1 / vocabularySize) * sequenceLength;\n  }\n\n  sample(charIndices: Object) {}\n\n  forward(X: Matrix[], a0: Matrix): Matrix[] {\n    const nX = X.length;\n    const m = X[0].rows;\n    const tX = X[0].cols;\n    const nY = this.layers[0].Wy.rows;\n    const nA = this.layers[0].Wy.cols;\n\n    const a = new Array(nA).map(() => {\n      return new Matrix(m, tX).setZeros();\n    });\n    const c = new Array(nA).map(() => {\n      return new Matrix(m, tX).setZeros();\n    });\n    const y = new Array(nY).map(() => {\n      return new Matrix(m, tX).setZeros();\n    });\n\n    let aNext = a0;\n    let cNext = new Matrix(nA, m).setZeros();\n\n    for (let t = 0; t < tX; t += 1) {\n      const dataInput = [];\n      X.forEach((m: Matrix, i) => {\n        dataInput[i] = [];\n        for (let row = 0; row < m.rows; row += 1) {\n          dataInput[i].push(m.data[row][t]);\n        }\n      });\n      const input = Matrix.from(dataInput);\n      const [_aNext, _cNext, _yt] = this.layers[0].forward(input, aNext, cNext);\n    }\n  }\n\n  backward(da: Matrix[]): void {\n    const na = da.length;\n    const m = da[0].rows;\n    const tx = da[0].cols;\n    const nx = this.layers[0].x1.rows;\n\n    for (let t = tx - 1; t >= 0; t -= 1) {\n      //this.layers[0].backward(_da, dcPrevT);\n    }\n  }\n\n  /*save(path: string): Promise<string> {\n    const resultJSON = {\n      dimensions: this.dimensions,\n      layers: [],\n    };\n\n    this.layers.forEach((layer: Layers) => {\n      resultJSON.layers.push({\n        type: layer.getType(),\n        size: layer.getSize(),\n        weights: {\n          W: layer.W.data,\n          b: layer.b.data,\n        },\n      });\n    });\n\n    const result = JSON.stringify(resultJSON);\n\n    return new Promise((resolve, reject) => {\n      fs.writeFile(path, result, (err) => {\n        if (err) {\n          console.error(err);\n          reject();\n        }\n        resolve(result);\n      });\n    });\n  }*/\n}\n","import { Dimension, LayersRNN } from \"../types\";\nimport { Matrix } from \"impulse-math-ts\";\nimport { DatasetVocabulary } from \"impulse-dataset-ts/src/typescript/Dataset/DatasetVocabulary\";\n\nexport class NetworkRNN {\n  private readonly dimensions: Dimension | null = null;\n  private size = 0;\n  private layers: LayersRNN[] = [];\n\n  constructor(dimensions: Dimension) {\n    this.dimensions = dimensions;\n  }\n\n  addLayer(layer: LayersRNN): NetworkRNN {\n    this.size++;\n    this.layers.push(layer);\n\n    return this;\n  }\n\n  getLayers(): LayersRNN[] {\n    return this.layers;\n  }\n\n  loss(X: Matrix, Y: Matrix): number {\n    let loss = 0;\n    for (let i = 0; i < Y.rows; i += 1) {\n      const rowMaxCoeffIndex = X.rowMaxCoeffIndex(i);\n      loss += -Math.log(Math.max(0.0000000001, Y.data[i][rowMaxCoeffIndex]));\n    }\n    return loss;\n  }\n\n  sample(dataset: DatasetVocabulary) {\n    const Waa = this.layers[0].wA;\n    const Wax = this.layers[0].wX;\n    const Wya = this.layers[0].wY;\n    const by = this.layers[0].wBY;\n    const b = this.layers[0].wB;\n    const indices = [];\n    const charIndices = dataset.getCharIndices();\n    const newLineCharacter = charIndices[\"\\n\"];\n    const chars = dataset.getChars();\n\n    let x = new Matrix(this.dimensions[1], 1).setZeros();\n    let aPrev = new Matrix(this.dimensions[0], 1).setRandom(this.dimensions[1]);\n\n    let idx = -1;\n    let counter = 0;\n\n    while (idx != newLineCharacter && counter != 50) {\n      const a = Wax.dot(x).add(Waa.dot(aPrev)).add(b).tanh();\n      const z = Wya.dot(a).add(by);\n      const y = z.softmax();\n\n      idx = charIndices[chars[y.colMaxCoeffIndex(0)]];\n      x = new Matrix(this.dimensions[1], 1).setZeros();\n      let maxIndex = y.colMaxCoeffIndex(0);\n      if (maxIndex === -1) {\n        maxIndex = Math.floor(Math.random() * this.dimensions[1]);\n        idx = charIndices[chars[maxIndex]];\n      }\n      x.data[maxIndex][0] = 1;\n\n      indices.push(idx);\n      aPrev = a;\n\n      counter += 1;\n    }\n\n    if (counter === 50) {\n      indices.push(newLineCharacter);\n    }\n\n    return indices\n      .map((i) => {\n        return chars[i];\n      })\n      .join(\"\");\n  }\n\n  forward(X: Matrix, Y: Matrix, aPrev: Matrix): Object {\n    const { aNext, y, p, loss } = this.layers[0].forward(X.transpose(), Y, aPrev);\n    return { aNext, y, p, loss };\n  }\n\n  backward(X: Matrix, Y: Matrix, A: Matrix, aNext: Matrix): void {\n    this.layers[0].backward(X, Y, A, aNext);\n  }\n\n  optimize(X: Matrix, Y: Matrix, aPrev: Matrix, learningRate: number): [number, Matrix] {\n    const [y] = this.forward(X, Y, aPrev);\n    this.backward(X, y);\n\n    this.layers[0].wX = this.layers[0].wX.add(this.layers[0].dwX.multiply(-learningRate));\n    this.layers[0].wA = this.layers[0].wA.add(this.layers[0].dwA.multiply(-learningRate));\n    this.layers[0].wB = this.layers[0].wB.add(this.layers[0].dwB.multiply(-learningRate));\n\n    return [0, this.layers[0].A[X.rows - 1]];\n  }\n\n  getDimensions(): Dimension {\n    return this.dimensions;\n  }\n\n  /*save(path: string): Promise<string> {\n    const resultJSON = {\n      dimensions: this.dimensions,\n      layers: [],\n    };\n\n    this.layers.forEach((layer: Layers) => {\n      resultJSON.layers.push({\n        type: layer.getType(),\n        size: layer.getSize(),\n        weights: {\n          W: layer.W.data,\n          b: layer.b.data,\n        },\n      });\n    });\n\n    const result = JSON.stringify(resultJSON);\n\n    return new Promise((resolve, reject) => {\n      fs.writeFile(path, result, (err) => {\n        if (err) {\n          console.error(err);\n          reject();\n        }\n        resolve(result);\n      });\n    });\n  }*/\n}\n","import { Network } from \"./Network\";\nimport { NetworkRNN } from \"./NetworkRNN\";\nimport { NetworkLSTM } from \"./NetworkLSTM\";\n\ntype Networks = Network | NetworkRNN | NetworkLSTM;\n\nexport { Network, NetworkRNN, Networks };\n","import { Dimension, Layers } from \"../types\";\nimport { Network, NetworkRNN, Networks } from \"../Network\";\nimport { BackpropagationFactory } from \"../Layer/Backpropagation/BackpropagationFactory\";\nimport { NetworkLSTM } from \"../Network/NetworkLSTM\";\nimport { DatasetVocabulary } from \"../Dataset/DatasetVocabulary\";\n\nabstract class AbstractNetworkBuilder {\n  protected dimensions: Dimension | null = null;\n  protected lastLayer: Layers | null = null;\n  protected network: Networks | null = null;\n\n  constructor(dimension: Dimension, type = \"DNN\") {\n    this.dimensions = dimension;\n\n    if (type === \"DNN\") {\n      this.network = new Network(this.dimensions);\n    } else if (type === \"RNN\") {\n      this.network = new NetworkRNN(this.dimensions);\n    } else if (type === \"LSTM\") {\n      this.network = new NetworkLSTM(this.dimensions);\n    }\n  }\n\n  createLayer(layerClass: Layers, callback: (layer: Layers) => void | null = null): AbstractNetworkBuilder {\n    // @ts-ignore\n    const layer: Layers = new layerClass();\n\n    if (typeof callback === \"function\") {\n      callback(layer);\n    }\n\n    if (this.lastLayer === null) {\n      this.firstLayerTransition(layer);\n    } else {\n      // @ts-ignore\n      layer.transition(this.lastLayer);\n    }\n\n    layer.configure();\n    layer.setBackPropagation(BackpropagationFactory.create(this.lastLayer, layer));\n\n    this.network.addLayer(layer);\n    this.lastLayer = layer;\n\n    return this;\n  }\n\n  getNetwork(): Networks | null {\n    return this.network;\n  }\n\n  abstract firstLayerTransition(layer: Layers): void;\n}\n\nexport { AbstractNetworkBuilder };\n","import { AbstractNetworkBuilder } from \"./AbstractNetworkBuilder\";\nimport { Layers } from \"../types\";\nimport { Network } from \"../Network\";\nimport * as fs from \"fs\";\nimport { LogisticLayer, ReluLayer, SoftmaxLayer, SoftplusLayer, TanhLayer } from \"../Layer/\";\nimport { Matrix } from \"impulse-math-ts\";\nimport { JSONLayerData } from \"./types\";\n\nclass NetworkBuilder1D extends AbstractNetworkBuilder {\n  firstLayerTransition(layer: Layers): void {\n    layer.setWidth(this.dimensions[0]);\n  }\n\n  static fromJSON(jsonPath: string): Promise<Network> {\n    return new Promise((resolve, reject) => {\n      fs.readFile(jsonPath, (err, data) => {\n        if (err) {\n          reject(err);\n          return;\n        }\n        const json = JSON.parse(data.toString());\n\n        const builder = new NetworkBuilder1D(json[\"dimensions\"]);\n\n        json[\"layers\"].forEach((layerData: JSONLayerData) => {\n          let layerClass = null;\n\n          if (layerData[\"type\"] === \"logistic\") {\n            layerClass = LogisticLayer;\n          } else if (layerData[\"type\"] === \"softmax\") {\n            layerClass = SoftmaxLayer;\n          } else if (layerData[\"type\"] === \"relu\") {\n            layerClass = ReluLayer;\n          } else if (layerData[\"type\"] === \"softplus\") {\n            layerClass = SoftplusLayer;\n          } else if (layerData[\"type\"] === \"tanh\") {\n            layerClass = TanhLayer;\n          }\n\n          builder.createLayer(layerClass, (layer) => {\n            // @ts-ignore\n            layer.setSize(layerData[\"size\"] as number);\n          });\n        });\n\n        const network = builder.getNetwork();\n\n        network.getLayers().forEach((layer, i) => {\n          layer.W = new Matrix(\n            json[\"layers\"][i][\"weights\"][\"W\"].length,\n            json[\"layers\"][i][\"weights\"][\"W\"][0].length,\n            json[\"layers\"][i][\"weights\"][\"W\"]\n          );\n          layer.b = new Matrix(\n            json[\"layers\"][i][\"weights\"][\"b\"].length,\n            json[\"layers\"][i][\"weights\"][\"b\"][0].length,\n            json[\"layers\"][i][\"weights\"][\"b\"]\n          );\n        });\n\n        resolve(network);\n      });\n    });\n  }\n}\n\nexport { NetworkBuilder1D };\n","import { AbstractNetworkBuilder } from \"./AbstractNetworkBuilder\";\nimport { Layers } from \"../types\";\nimport { Network } from \"../Network\";\nimport * as fs from \"fs\";\nimport { LogisticLayer, ReluLayer, SoftmaxLayer, SoftplusLayer, TanhLayer } from \"../Layer/\";\nimport { ConvLayer } from \"../Layer/\";\nimport { MaxPoolLayer } from \"../Layer/\";\nimport { JSONLayerData } from \"./types\";\n\nclass NetworkBuilder3D extends AbstractNetworkBuilder {\n  firstLayerTransition(layer: Layers): void {\n    if (this.dimensions) {\n      // @ts-ignore\n      layer.setSize(this.dimensions);\n    }\n  }\n\n  static fromJSON(jsonPath: string): Promise<Network> {\n    return new Promise((resolve, reject) => {\n      fs.readFile(jsonPath, (err, data) => {\n        if (err) {\n          reject(err);\n          return;\n        }\n        const json = JSON.parse(data.toString());\n\n        const builder = new NetworkBuilder3D(json[\"size\"]);\n\n        json[\"layers\"].forEach((layerData: JSONLayerData) => {\n          if (layerData[\"type\"] === \"logistic\") {\n            // @ts-ignore\n            builder.createLayer(LogisticLayer, (layer) => {\n              // @ts-ignore\n              layer.setSize(layerData[\"size\"]);\n            });\n          } else if (layerData[\"type\"] === \"softmax\") {\n            // @ts-ignore\n            builder.createLayer(SoftmaxLayer, (layer) => {\n              // @ts-ignore\n              layer.setSize(layerData[\"size\"]);\n            });\n          } else if (layerData[\"type\"] === \"relu\") {\n            // @ts-ignore\n            builder.createLayer(ReluLayer, (layer) => {\n              // @ts-ignore\n              layer.setSize(layerData[\"size\"]);\n            });\n          } else if (layerData[\"type\"] === \"softplus\") {\n            // @ts-ignore\n            builder.createLayer(SoftplusLayer, (layer) => {\n              // @ts-ignore\n              layer.setSize(layerData[\"size\"]);\n            });\n          } else if (layerData[\"type\"] === \"tanh\") {\n            // @ts-ignore\n            builder.createLayer(TanhLayer, (layer) => {\n              // @ts-ignore\n              layer.setSize(layerData[\"size\"]);\n            });\n          } else if (layerData[\"type\"] === \"conv\") {\n            // @ts-ignore\n            builder.createLayer(ConvLayer, (layer: ConvLayer) => {\n              layer.setSize(layerData[\"size\"]);\n              layer.setFilterSize(layerData[\"filterSize\"]);\n              layer.setStride(layerData[\"stride\"]);\n              layer.setNumFilters(layerData[\"numFilters\"]);\n              layer.setPadding(layerData[\"padding\"]);\n            });\n          } else if (layerData[\"type\"] === \"maxpool\") {\n            // @ts-ignore\n            builder.createLayer(MaxPoolLayer, (layer: MaxPoolLayer) => {\n              layer.setSize(layerData[\"size\"]);\n              layer.setFilterSize(layerData[\"filterSize\"]);\n              layer.setStride(layerData[\"stride\"]);\n            });\n          } else if (layerData[\"type\"] === \"fullyconnected\") {\n            // @ts-ignore\n            builder.createLayer(MaxPoolLayer);\n          }\n        });\n\n        const network = builder.getNetwork();\n\n        if (network) {\n          network.getLayers().forEach((layer, i) => {\n            layer.W = json[\"layers\"][\"W\"];\n            layer.b = json[\"layers\"][\"b\"];\n          });\n\n          resolve(network);\n        }\n      });\n    });\n  }\n}\n\nexport { NetworkBuilder3D };\n","import { AbstractNetworkBuilder } from \"./AbstractNetworkBuilder\";\nimport { NetworkBuilder1D } from \"./NetworkBuilder1D\";\nimport { NetworkBuilder3D } from \"./NetworkBuilder3D\";\n\nexport { AbstractNetworkBuilder, NetworkBuilder1D, NetworkBuilder3D };\n","import { Network } from \"../Network\";\nimport { AbstractOptimizer } from \"./Optimizer/AbstractOptimizer\";\nimport { Dataset } from \"impulse-dataset-ts/src/typescript/Dataset/Dataset\";\n\nexport interface CostResult {\n  cost: number;\n  accuracy: number;\n}\n\nexport interface StepCallbackParameters {\n  iteration: number;\n}\n\nexport abstract class AbstractTrainer {\n  network: Network | null = null;\n  optimizer: AbstractOptimizer | null = null;\n  regularization = 1e-4;\n  iterations = 1000;\n  learningRate = 0.001;\n  verbose = true;\n  verboseStep = 1;\n  stepCallback = (data: StepCallbackParameters): void => undefined;\n\n  constructor(network: Network, optimizer: AbstractOptimizer) {\n    this.network = network;\n    this.optimizer = optimizer;\n  }\n\n  abstract train(inputDataset: Dataset, outputDataset: Dataset): AbstractTrainer;\n\n  setRegularization(regularization: number): AbstractTrainer {\n    this.regularization = regularization;\n    return this;\n  }\n\n  setIterations(iterations: number): AbstractTrainer {\n    this.iterations = iterations;\n    return this;\n  }\n\n  setLearningRate(learningRate: number): AbstractTrainer {\n    this.learningRate = learningRate;\n    return this;\n  }\n\n  setVerbose(verbose: boolean): AbstractTrainer {\n    this.verbose = verbose;\n    return this;\n  }\n\n  setVerboseStep(verboseStep: number): AbstractTrainer {\n    this.verboseStep = verboseStep;\n    return this;\n  }\n\n  setStepCallback(stepCallback: (data: StepCallbackParameters) => void): AbstractTrainer {\n    this.stepCallback = stepCallback;\n    return this;\n  }\n\n  cost(inputDataset: Dataset, outputDataset: Dataset): CostResult {\n    const numberOfExamples = inputDataset.getNumberOfExamples();\n\n    let accuracy = 0;\n    let penalty = 0;\n\n    this.network.getLayers().forEach((layer) => {\n      penalty += layer.penalty();\n    });\n\n    const predictions = this.network.forward(inputDataset.data);\n    const correctOutput = outputDataset.data;\n\n    /*const error = Y.multiply(predictions.log())\n      .add(Y.minusOne().multiply(predictions.minusOne().log()))\n      .multiply(-1)\n      .sum();*/\n    const error = correctOutput.multiply(predictions.log()).sum();\n    const cost = (-1 / numberOfExamples) * error + this.regularization / (penalty * (2 * inputDataset.data.cols));\n\n    for (let col = 0; col < predictions.cols; col += 1) {\n      const index1 = predictions.colMaxCoeffIndex(col);\n      const index2 = correctOutput.colMaxCoeffIndex(col);\n\n      if (index1 === index2) {\n        accuracy++;\n      }\n    }\n\n    return {\n      cost,\n      accuracy: (accuracy / numberOfExamples) * 100,\n    };\n  }\n}\n","import { AbstractTrainer, CostResult } from \"./AbstractTrainer\";\nimport { Dataset } from \"impulse-dataset-ts/src/typescript/Dataset/Dataset\";\nimport { round } from \"impulse-math-ts\";\n\nexport class MiniBatchTrainer extends AbstractTrainer {\n  batchSize = 100;\n\n  setBatchSize(batchSize: number): MiniBatchTrainer {\n    this.batchSize = batchSize;\n    return this;\n  }\n\n  cost(inputDataset: Dataset, outputDataset: Dataset): CostResult {\n    const batchSize = this.batchSize;\n    const numberOfExamples = inputDataset.getNumberOfExamples();\n    const numBatches = Math.ceil(numberOfExamples / batchSize);\n\n    let cost = 0.0;\n    let accuracy = 0.0;\n\n    // calculate penalty\n    let penalty = 0.0;\n\n    this.network.getLayers().forEach((layer) => {\n      penalty = layer.penalty();\n    });\n\n    const startTime = new Date().getTime();\n    const startIterationTime = new Date().getTime();\n\n    for (let batch = 0, offset = 0; batch < numberOfExamples; batch += this.batchSize, offset += this.batchSize) {\n      const startIterationTime2 = new Date().getTime();\n      const input = inputDataset.getBatch(offset, this.batchSize);\n      const correctOutput = outputDataset.getBatch(offset, this.batchSize);\n      const predictions = this.network.forward(input.data);\n\n      const error = correctOutput.data.multiply(predictions.log()).sum();\n      cost += (-1 / numberOfExamples) * error + this.regularization / (penalty * (2 * inputDataset.data.cols));\n\n      for (let col = 0; col < predictions.cols; col += 1) {\n        const index1 = predictions.colMaxCoeffIndex(col);\n        const index2 = correctOutput.data.colMaxCoeffIndex(col);\n\n        if (index1 === index2) {\n          accuracy++;\n        }\n      }\n    }\n\n    return {\n      cost,\n      accuracy: (accuracy / numberOfExamples) * 100,\n    };\n  }\n\n  train(inputDataset: Dataset, outputDataset: Dataset): MiniBatchTrainer {\n    const numberOfExamples = inputDataset.getNumberOfExamples();\n\n    let t = 0;\n\n    this.optimizer.setBatchSize(this.batchSize);\n    this.optimizer.setLearningRate(this.learningRate);\n\n    for (let i = 0; i < this.iterations; i += 1) {\n      const startTime = new Date().getTime();\n      const startIterationTime = new Date().getTime();\n\n      for (let batch = 0, offset = 0; batch < numberOfExamples; batch += this.batchSize, offset += this.batchSize) {\n        const startIterationTime2 = new Date().getTime();\n        const input = inputDataset.getBatch(offset, this.batchSize);\n        const output = outputDataset.getBatch(offset, this.batchSize);\n        const predictions = this.network.forward(input.data);\n\n        this.network.backward(input.data, output.data, this.regularization);\n\n        this.optimizer.setT(++t);\n\n        this.network.getLayers().forEach((layer) => {\n          this.optimizer.optimize(layer);\n        });\n\n        if (this.verbose) {\n          const cost = this.cost(input, output);\n          const endIterationTime = new Date().getTime();\n          console.log(\n            `Batch: ${offset} / ${numberOfExamples} | Batch time: ${\n              endIterationTime - startIterationTime2\n            }ms | Time from start: ${round((endIterationTime - startIterationTime) / 1000, 1)}s. | Cost: ${round(\n              cost.cost,\n              2\n            )} | Acc: ${cost.accuracy}`\n          );\n        }\n      }\n\n      if (this.verbose) {\n        if ((i + 1) % this.verboseStep === 0) {\n          const endTime = new Date().getTime();\n          const currentResult = this.cost(inputDataset, outputDataset);\n\n          console.log(\n            `Iteration: ${i + 1} | Cost: ${round(currentResult.cost, 5)} | Accuracy: ${\n              currentResult.accuracy\n            }% | Time: ${(endTime - startTime) / 1000} s.`\n          );\n        }\n      }\n\n      this.stepCallback({\n        iteration: i,\n      });\n    }\n\n    return this;\n  }\n}\n","import { Layers } from \"../../types\";\n\nexport abstract class AbstractOptimizer {\n  protected batchSize = 0;\n  protected t = 0;\n  protected learningRate = 0;\n\n  setBatchSize(batchSize: number): AbstractOptimizer {\n    this.batchSize = batchSize;\n    return this;\n  }\n\n  setT(t: number): AbstractOptimizer {\n    this.t = t;\n    return this;\n  }\n\n  setLearningRate(learningRate: number): AbstractOptimizer {\n    this.learningRate = learningRate;\n    return this;\n  }\n\n  abstract optimize(layer: Layers): void;\n}\n","import { AbstractOptimizer } from \"./AbstractOptimizer\";\nimport { Layers } from \"../../types\";\n\nexport class OptimizerAdagrad extends AbstractOptimizer {\n  optimize(layer: Layers): void {\n    this.adagrad(layer, this.learningRate);\n  }\n\n  adagrad(layer: Layers, learningRate: number): void {\n    layer.dW = layer.dW.add(layer.gW.pow(2));\n    layer.W = layer.W.subtract(layer.gW.multiply(learningRate).divide(layer.dW.sqrt().add(1e-8)).multiply(layer.gW));\n\n    layer.db = layer.db.add(layer.gb.pow(2));\n    layer.b = layer.b.subtract(layer.db.multiply(learningRate).divide(layer.db.sqrt().add(1e-8)).multiply(layer.gb));\n  }\n}\n","import { AbstractOptimizer } from \"./AbstractOptimizer\";\nimport { Layers } from \"../../types\";\n\nexport class OptimizerAdam extends AbstractOptimizer {\n  protected beta1 = 0.9;\n  protected beta2 = 0.999;\n\n  setBeta1(beta1: number): OptimizerAdam {\n    this.beta1 = beta1;\n    return this;\n  }\n\n  setBeta2(beta2: number): OptimizerAdam {\n    this.beta2 = beta2;\n    return this;\n  }\n\n  optimize(layer: Layers): void {\n    this.adam(layer, this.learningRate, this.t);\n  }\n\n  adam(layer: Layers, learningRate: number, t: number): void {\n    layer.vW = layer.vW.multiply(this.beta1).add(layer.gW.multiply(1 - this.beta1));\n    layer.vb = layer.vb.multiply(this.beta1).add(layer.gb.multiply(1 - this.beta1));\n\n    layer.sW = layer.sW.multiply(this.beta2).add(layer.sW.pow(2).multiply(1 - this.beta2));\n    layer.sb = layer.sb.multiply(this.beta2).add(layer.sb.pow(2).multiply(1 - this.beta2));\n\n    const vWCorrected = layer.vW.divide(1 - Math.pow(this.beta1, 2));\n    const vbCorrected = layer.vb.divide(1 - Math.pow(this.beta1, 2));\n\n    const sWCorrected = layer.sW.add(1e-8).sqrt();\n    const sbCorrected = layer.sb.add(1e-8).sqrt();\n\n    layer.W = layer.W.subtract(vWCorrected.divide(sWCorrected).multiply(learningRate));\n    layer.b = layer.b.subtract(vbCorrected.divide(sbCorrected).multiply(learningRate));\n  }\n}\n","import { AbstractOptimizer } from \"./AbstractOptimizer\";\nimport { Layers } from \"../../types\";\n\nexport class OptimizerGradientDescent extends AbstractOptimizer {\n  optimize(layer: Layers): void {\n    this.gradientDescent(layer, this.learningRate);\n  }\n\n  gradientDescent(layer: Layers, learningRate: number): void {\n    layer.W = layer.W.subtract(layer.gW.multiply(learningRate));\n    layer.b = layer.b.subtract(layer.b.multiply(learningRate));\n  }\n}\n","import { AbstractOptimizer } from \"./AbstractOptimizer\";\nimport { Layers } from \"../../types\";\n\nexport class OptimizerMomentum extends AbstractOptimizer {\n  protected beta = 0.9;\n\n  optimize(layer: Layers): void {\n    this.momentum(layer, this.learningRate);\n  }\n\n  setBeta(beta: number): OptimizerMomentum {\n    this.beta = beta;\n    return this;\n  }\n\n  momentum(layer: Layers, learningRate: number): void {\n    layer.vW = layer.gW.multiply(this.beta).add(layer.gW.multiply(1 - this.beta));\n    layer.vb = layer.gb.multiply(this.beta).add(layer.gb.multiply(1 - this.beta));\n\n    layer.W = layer.W.subtract(layer.vW.multiply(learningRate));\n    layer.b = layer.b.subtract(layer.vb.multiply(learningRate));\n  }\n}\n","import { AbstractOptimizer } from \"./AbstractOptimizer\";\nimport { Layers } from \"../../types\";\n\nexport class OptimizerRMSProp extends AbstractOptimizer {\n  protected alpha = 1e-3;\n  protected beta = 0.9;\n\n  setBeta(beta: number): OptimizerRMSProp {\n    this.beta = beta;\n    return this;\n  }\n\n  setAlpha(alpha: number): OptimizerRMSProp {\n    this.alpha = alpha;\n    return this;\n  }\n\n  optimize(layer: Layers): void {\n    this.rmsprop(layer, this.learningRate, this.alpha, this.beta);\n  }\n\n  rmsprop(layer: Layers, learningRate: number, alpha: number, beta: number): void {\n    layer.sW = layer.sW.multiply(beta).add(layer.gW.pow(2).multiply(1 - beta));\n    layer.sb = layer.sb.multiply(beta).add(layer.gb.pow(2).multiply(1 - beta));\n\n    layer.W = layer.W.subtract(layer.gW.multiply(alpha).divide(layer.sW.sqrt().add(1e-8)));\n    layer.b = layer.b.subtract(layer.gb.multiply(alpha).divide(layer.sb.sqrt().add(1e-8)));\n  }\n}\n","import { OptimizerAdam } from \"./OptimizerAdam\";\nimport { OptimizerGradientDescent } from \"./OptimizerGradientDescent\";\nimport { OptimizerAdagrad } from \"./OptimizerAdagrad\";\nimport { OptimizerMomentum } from \"./OptimizerMomentum\";\nimport { OptimizerRMSProp } from \"./OptimizerRMSProp\";\n\nexport { OptimizerAdam, OptimizerGradientDescent, OptimizerAdagrad, OptimizerMomentum, OptimizerRMSProp };\n","import { NetworkRNN } from \"../Network\";\nimport { DatasetVocabulary } from \"impulse-dataset-ts/src/typescript/Dataset/DatasetVocabulary\";\nimport { Matrix } from \"impulse-math-ts\";\n\nexport class RNNTrainer {\n  protected network: NetworkRNN | null = null;\n  protected iterations: number = 1000;\n  protected learningRate: number = 0.01;\n\n  constructor(network: NetworkRNN) {\n    this.network = network;\n  }\n\n  train(dataset: DatasetVocabulary): [number] {\n    let smoothLoss = -Math.log(1 / dataset.getVocabularySize()) * 100;\n\n    const [X, Y] = dataset.buildData(this.network.getDimensions()[0]);\n    const [x, y] = dataset.vectorization(X, Y);\n\n    const aPrev = new Matrix(this.network.getDimensions()[0], this.network.getDimensions()[0]).setZeros();\n\n    const hs = {};\n    const ys = {};\n    hs[-1] = new Matrix(this.network.getDimensions()[0], this.network.getDimensions()[0]).setZeros();\n\n    let mWxh = new Matrix(this.network.getDimensions()[0], this.network.getDimensions()[1]).setZeros();\n    let mWhh = new Matrix(this.network.getDimensions()[0], this.network.getDimensions()[0]).setZeros();\n    let mWhy = new Matrix(this.network.getDimensions()[1], this.network.getDimensions()[0]).setZeros();\n    let mbh = new Matrix(this.network.layers[0].dwB.rows, this.network.layers[0].dwB.cols).setZeros();\n    let mby = new Matrix(this.network.layers[0].dwBY.rows, this.network.layers[0].dwBY.cols).setZeros();\n\n    for (let iteration = 0; iteration < this.iterations; iteration += 1) {\n      let _loss = 0;\n      for (let i = 0; i < X.length; i += 1) {\n        const { aNext, y: _y, loss } = this.network.forward(x[i], y[i], aPrev);\n        hs[i] = aNext;\n        ys[i] = _y;\n\n        if ((i + 1) % 1000 === 0) {\n          console.log(`FORWARD Example ${i + 1} | Iteration ${iteration + 1}`);\n        }\n\n        _loss += loss;\n      }\n\n      //smoothLoss = smoothLoss * 0.999 + _loss * 0.001;\n      console.log(`Loss ${_loss}`);\n\n      for (let i = X.length - 1; i >= 0; i -= 1) {\n        const dy = Matrix.from(ys[i].data);\n        for (let row = 0; row < dy.rows; row += 1) {\n          dy.data[row][x[i].transpose().rowMaxCoeffIndex(row)] -= 1;\n        }\n\n        this.network.backward(x[i], dy, hs[i - 1], hs[i]);\n\n        if ((i + 1) % 1000 === 0) {\n          console.log(`BACKWARD Example ${i + 1} | Iteration ${iteration + 1}`);\n        }\n      }\n\n      this.network.layers[0].dwX = this.network.layers[0].dwX.setMin(-5).setMax(5);\n      this.network.layers[0].dwY = this.network.layers[0].dwY.setMin(-5).setMax(5);\n      this.network.layers[0].dwA = this.network.layers[0].dwA.setMin(-5).setMax(5);\n      this.network.layers[0].dwB = this.network.layers[0].dwB.setMin(-5).setMax(5);\n      this.network.layers[0].dwBY = this.network.layers[0].dwBY.setMin(-5).setMax(5);\n\n\n      mWxh = mWxh.add(this.network.layers[0].dwX.pow(2));\n      this.network.layers[0].wX = this.network.layers[0].wX.add(\n        this.network.layers[0].dwX.divide(mWxh.add(1e-8).sqrt()).multiply(-this.learningRate)\n      );\n\n      mWhh = mWhh.add(this.network.layers[0].dwA.pow(2));\n      this.network.layers[0].wA = this.network.layers[0].wA.add(\n        this.network.layers[0].dwA.divide(mWhh.add(1e-8).sqrt()).multiply(-this.learningRate)\n      );\n\n      mWhy = mWhy.add(this.network.layers[0].dwY.pow(2));\n      this.network.layers[0].wY = this.network.layers[0].wY.add(\n        this.network.layers[0].dwY.divide(mWhy.add(1e-8).sqrt()).multiply(-this.learningRate)\n      );\n\n      mbh = mbh.add(this.network.layers[0].dwB.pow(2));\n      this.network.layers[0].wB = this.network.layers[0].wB.add(\n        this.network.layers[0].dwB.divide(mbh.add(1e-8).sqrt()).multiply(-this.learningRate)\n      );\n\n      mby = mby.add(this.network.layers[0].dwBY.pow(2));\n      this.network.layers[0].wBY = this.network.layers[0].wBY.add(\n        this.network.layers[0].dwBY.divide(mby.add(1e-8).sqrt()).multiply(-this.learningRate)\n      );\n\n      console.log(this.network.sample(dataset).trim())\n    }\n    return [smoothLoss];\n  }\n\n  setIterations(num: number): RNNTrainer {\n    this.iterations = num;\n    return this;\n  }\n\n  setLearningRate(num: number): RNNTrainer {\n    this.learningRate = num;\n    return this;\n  }\n}\n","import { AbstractTrainer } from \"./AbstractTrainer\";\nimport { Dataset } from \"impulse-dataset-ts/src/typescript/Dataset/Dataset\";\nimport { round } from \"impulse-math-ts\";\n\nexport class Trainer extends AbstractTrainer {\n  train(inputDataset: Dataset, outputDataset: Dataset): AbstractTrainer {\n    const numberOfExamples = inputDataset.getNumberOfExamples();\n\n    let t = 0;\n\n    this.optimizer.setBatchSize(numberOfExamples);\n    this.optimizer.setLearningRate(this.learningRate);\n\n    for (let i = 0; i < this.iterations; i += 1) {\n      const startTime = new Date().getTime();\n\n      this.network.backward(inputDataset.data, outputDataset.data, this.regularization);\n\n      this.optimizer.setT(++t);\n\n      this.network.getLayers().forEach((layer) => {\n        this.optimizer.optimize(layer);\n      });\n\n      if (this.verbose) {\n        if ((i + 1) % this.verboseStep === 0) {\n          const currentResult = this.cost(inputDataset, outputDataset);\n          const endTime = new Date().getTime();\n\n          console.log(\n            `Iteration: ${i + 1} | Cost: ${round(currentResult.cost, 5)} | Accuracy: ${round(\n              currentResult.accuracy,\n              2\n            )}% | Time: ${(endTime - startTime) / 1000} s.`\n          );\n        }\n      }\n\n      this.stepCallback({\n        iteration: i,\n      });\n    }\n\n    return this;\n  }\n}\n","import { MiniBatchTrainer } from \"./MiniBatchTrainer\";\nimport { Trainer } from \"./Trainer\";\nimport { RNNTrainer } from \"./RNNTrainer\";\n\nexport { MiniBatchTrainer, Trainer, RNNTrainer };\n","import { SoftmaxLayer, LogisticLayer, TanhLayer, ReluLayer, SoftplusLayer, AbstractLayer } from \"./Layer\";\nimport { ConvLayer } from \"./Layer/\";\nimport { MaxPoolLayer } from \"./Layer/\";\nimport { FullyConnectedLayer } from \"./Layer/\";\nimport { PurelinLayer } from \"./Layer\";\nimport { AbstractLayer3D } from \"./Layer/AbstractLayer3D\";\nimport { AbstractLayer1D } from \"./Layer/AbstractLayer1D\";\nimport { RecurrentLayer } from \"./Layer\";\nimport { LSTMLayer } from \"./Layer\";\n\nexport type Dimension = [number] | [number, number, number];\n\nexport enum LayerType {\n  logistic = \"logistic\",\n  softmax = \"softmax\",\n  tanh = \"tanh\",\n  relu = \"relu\",\n  softplus = \"softplus\",\n  conv = \"conv\",\n  maxpool = \"maxpool\",\n  fullyconnected = \"fullyconnected\",\n  purelin = \"purelin\",\n  rnnlayer = \"rnnlayer\",\n}\n\nexport type Layers =\n  | LogisticLayer\n  | SoftmaxLayer\n  | TanhLayer\n  | ReluLayer\n  | SoftplusLayer\n  | ConvLayer\n  | MaxPoolLayer\n  | FullyConnectedLayer\n  | PurelinLayer\n  | AbstractLayer3D\n  | AbstractLayer1D;\nexport type Layers1D = LogisticLayer | SoftmaxLayer | TanhLayer | ReluLayer | SoftplusLayer | PurelinLayer;\nexport type Layers3D = ConvLayer | MaxPoolLayer | FullyConnectedLayer | AbstractLayer3D;\nexport type LayersRNN = RecurrentLayer;\nexport type LayersLSTM = LSTMLayer;\n","(()=>{var t={382:(t,r,o)=>{t=o.nmd(t);try{process.dlopen(t,__dirname+o(17).sep+o.p+\"9e034ce62a57cddc1a2b4486c9983546.node\")}catch(t){throw new Error(\"node-loader:\\n\"+t)}},17:t=>{\"use strict\";t.exports=require(\"path\")}},r={};function o(e){var n=r[e];if(void 0!==n)return n.exports;var i=r[e]={id:e,loaded:!1,exports:{}};return t[e](i,i.exports,o),i.loaded=!0,i.exports}o.d=(t,r)=>{for(var e in r)o.o(r,e)&&!o.o(t,e)&&Object.defineProperty(t,e,{enumerable:!0,get:r[e]})},o.o=(t,r)=>Object.prototype.hasOwnProperty.call(t,r),o.r=t=>{\"undefined\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(t,\"__esModule\",{value:!0})},o.nmd=t=>(t.paths=[],t.children||(t.children=[]),t),o.p=\"\";var e={};(()=>{\"use strict\";function t(r){return t=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&\"function\"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?\"symbol\":typeof t},t(r)}function r(t,r){for(var o=0;o<r.length;o++){var e=r[o];e.enumerable=e.enumerable||!1,e.configurable=!0,\"value\"in e&&(e.writable=!0),Object.defineProperty(t,n(e.key),e)}}function n(r){var o=function(r,o){if(\"object\"!==t(r)||null===r)return r;var e=r[Symbol.toPrimitive];if(void 0!==e){var n=e.call(r,\"string\");if(\"object\"!==t(n))return n;throw new TypeError(\"@@toPrimitive must return a primitive value.\")}return String(r)}(r);return\"symbol\"===t(o)?o:String(o)}o.r(e),o.d(e,{ComputationCPU:()=>b,ComputationMultiCore:()=>h,Matrix:()=>E,getComputation:()=>g,im2col:()=>_,maxpool:()=>C,round:()=>R,setComputation:()=>O});var i=function(){function t(){var r,o,e;!function(t,r){if(!(t instanceof r))throw new TypeError(\"Cannot call a class as a function\")}(this,t),r=this,e={},(o=n(o=\"kernels\"))in r?Object.defineProperty(r,o,{value:e,enumerable:!0,configurable:!0,writable:!0}):r[o]=e}var o,e;return o=t,e=[{key:\"addKernel\",value:function(t,r){return this.kernels[t]=r,this}},{key:\"execute\",value:function(t){if(!this.kernels[t])throw new Error(\"Kernel '\".concat(t,\"' not exists.\"));for(var r=arguments.length,o=new Array(r>1?r-1:0),e=1;e<r;e++)o[e-1]=arguments[e];return this.kernels[t].apply(null,o)}}],e&&r(o.prototype,e),Object.defineProperty(o,\"prototype\",{writable:!1}),t}(),a=o(382),s=function(t,r){console.log((0,a.MatrixMultiply)([1,2,3,4],[4,3,2,1]))};function u(t){return u=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&\"function\"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?\"symbol\":typeof t},u(t)}function f(t,r){return f=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(t,r){return t.__proto__=r,t},f(t,r)}function c(t,r){if(r&&(\"object\"===u(r)||\"function\"==typeof r))return r;if(void 0!==r)throw new TypeError(\"Derived constructors may only return object or undefined\");return function(t){if(void 0===t)throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");return t}(t)}function l(t){return l=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(t){return t.__proto__||Object.getPrototypeOf(t)},l(t)}var h=function(t){!function(t,r){if(\"function\"!=typeof r&&null!==r)throw new TypeError(\"Super expression must either be null or a function\");t.prototype=Object.create(r&&r.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),Object.defineProperty(t,\"prototype\",{writable:!1}),r&&f(t,r)}(i,t);var r,o,e,n=(o=i,e=function(){if(\"undefined\"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if(\"function\"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(t){return!1}}(),function(){var t,r=l(o);if(e){var n=l(this).constructor;t=Reflect.construct(r,arguments,n)}else t=r.apply(this,arguments);return c(this,t)});function i(){var t;return function(t,r){if(!(t instanceof r))throw new TypeError(\"Cannot call a class as a function\")}(this,i),(t=n.call(this)).addKernel(\"dot\",s),t}return r=i,Object.defineProperty(r,\"prototype\",{writable:!1}),r}(i),v=function(t,r){if(t.cols!==r.rows)throw new Error(\"DIMENSIONS error. m1.cols \".concat(t.rows,\" \").concat(t.cols,\" !== m2.rows \").concat(r.rows,\" \").concat(r.cols,\".\"));for(var o=[],e=0;e<t.rows;++e){o[e]=new Array(r.cols);for(var n=0;n<r.cols;++n){o[e][n]=0;for(var i=0;i<t.cols;++i)t.data&&r.data&&(o[e][n]+=t.data[e][i]*r.data[i][n])}}return new E(t.rows,r.cols,o)},y=function(t){for(var r=[],o=0;o<t.cols;++o){r[o]=new Array(t.rows);for(var e=0;e<t.rows;++e)r[o][e]=t.data[e][o]}return new E(t.cols,t.rows,r)};function p(t){return p=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&\"function\"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?\"symbol\":typeof t},p(t)}function d(t,r){return d=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(t,r){return t.__proto__=r,t},d(t,r)}function w(t,r){if(r&&(\"object\"===p(r)||\"function\"==typeof r))return r;if(void 0!==r)throw new TypeError(\"Derived constructors may only return object or undefined\");return function(t){if(void 0===t)throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");return t}(t)}function m(t){return m=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(t){return t.__proto__||Object.getPrototypeOf(t)},m(t)}var b=function(t){!function(t,r){if(\"function\"!=typeof r&&null!==r)throw new TypeError(\"Super expression must either be null or a function\");t.prototype=Object.create(r&&r.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),Object.defineProperty(t,\"prototype\",{writable:!1}),r&&d(t,r)}(i,t);var r,o,e,n=(o=i,e=function(){if(\"undefined\"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if(\"function\"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(t){return!1}}(),function(){var t,r=m(o);if(e){var n=m(this).constructor;t=Reflect.construct(r,arguments,n)}else t=r.apply(this,arguments);return w(this,t)});function i(){var t;return function(t,r){if(!(t instanceof r))throw new TypeError(\"Cannot call a class as a function\")}(this,i),(t=n.call(this)).addKernel(\"dot\",v),t.addKernel(\"transpose\",y),t}return r=i,Object.defineProperty(r,\"prototype\",{writable:!1}),r}(i),k=new b,O=function(t){k=t},g=function(){return k};function x(t){return x=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&\"function\"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?\"symbol\":typeof t},x(t)}function S(t,r){if(!(t instanceof r))throw new TypeError(\"Cannot call a class as a function\")}function j(t,r){for(var o=0;o<r.length;o++){var e=r[o];e.enumerable=e.enumerable||!1,e.configurable=!0,\"value\"in e&&(e.writable=!0),Object.defineProperty(t,M(e.key),e)}}function P(t,r,o){return(r=M(r))in t?Object.defineProperty(t,r,{value:o,enumerable:!0,configurable:!0,writable:!0}):t[r]=o,t}function M(t){var r=function(t,r){if(\"object\"!==x(t)||null===t)return t;var o=t[Symbol.toPrimitive];if(void 0!==o){var e=o.call(t,\"string\");if(\"object\"!==x(e))return e;throw new TypeError(\"@@toPrimitive must return a primitive value.\")}return String(t)}(t);return\"symbol\"===x(r)?r:String(r)}var E=function(){function t(){var r=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0,o=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,e=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null;S(this,t),P(this,\"rows\",0),P(this,\"cols\",0),P(this,\"data\",null),this.resize(r,o),e&&this.generateData(e)}var r,o,e;return r=t,o=[{key:\"resize\",value:function(t,r){this.rows=t,this.cols=r,this.data=new Array(this.rows);for(var o=0;o<this.rows;o+=1)this.data[o]=new Array(this.cols);return this}},{key:\"generateData\",value:function(t){for(var r=[],o=0;o<this.rows;o+=1)r[o]=new Array(this.cols);for(var e=0;e<this.cols;e+=1)for(var n=0;n<this.rows;n+=1)\"number\"==typeof t[n]?r[n][e]=t[n]:\"string\"==typeof t[n][e]&&/^[0-9.]+$/.test(String(t[n][e]))?r[n][e]=Number(t[n][e]):r[n][e]=t[n][e];return this.data=r,this}},{key:\"sum\",value:function(){for(var t=0,r=0;r<this.rows;r+=1)for(var o=0;o<this.cols;o+=1)t+=this.data[r][o];return t}},{key:\"colwiseSum\",value:function(){for(var r=[],o=this.transpose(),e=0;e<o.rows;e+=1){r[e]=[0];for(var n=0;n<o.cols;n+=1)r[e][0]+=o.data[e][n]}return new t(this.cols,1,r)}},{key:\"rowwiseSum\",value:function(){for(var r=[[]],o=0;o<this.rows;o+=1){for(var e=0,n=0;n<this.cols;n+=1)e+=this.data[o][n];r[0].push(e)}return new t(1,this.rows,r)}},{key:\"flatten\",value:function(){for(var t=[],r=0;r<this.rows;r+=1)for(var o=0;o<this.cols;o+=1)t.push(this.data[r][o]);return t}},{key:\"replicate\",value:function(r,o){if(1===r&&1===this.cols&&o>1){for(var e=[],n=0;n<this.rows;n+=1){e[n]=[];for(var i=0;i<o;i+=1)e[n][i]=this.data[n][0]}return t.from(e)}if(1===o&&1===this.rows&&r>1){for(var a=[],s=0;s<r;s+=1){a[s]=[];for(var u=0;u<this.cols;u+=1)a[s][u]=this.data[0][u]}return t.from(a)}return this}},{key:\"transpose\",value:function(){return g().execute(\"transpose\",this)}},{key:\"colMaxCoeffIndex\",value:function(t){for(var r=-1,o=-1/0,e=0;e<this.rows;e+=1)this.data&&this.data[e][t]>o&&(o=this.data[e][t],r=e);return r}},{key:\"rowMaxCoeffIndex\",value:function(t){for(var r=-1,o=-1/0,e=0;e<this.cols;e+=1)this.data[t][e]>o&&(o=this.data[t][e],r=e);return r}},{key:\"block\",value:function(r,o,e,n){for(var i=[],a=r,s=0;a<this.rows&&a<r+e;a+=1,s+=1){i[s]=new Array(n);for(var u=o,f=0;u<this.cols&&u<o+n;u+=1,f+=1)i[s][f]=this.data[a][u]}return new t(e,n,i)}},{key:\"col\",value:function(r){for(var o=[],e=0;e<this.rows;e+=1)o[e]=[this.data[e][r]];return new t(this.rows,1,o)}},{key:\"row\",value:function(r){for(var o=[],e=0;e<this.cols;e+=1)o[e]=[this.data[r][e]];return new t(this.cols,1,o)}},{key:\"setCol\",value:function(t,r){for(var o=0;o<this.rows;o+=1)this.data&&r.data&&(this.data[o][t]=r.data[o][0]);return this}},{key:\"sigmoid\",value:function(){return this.multiply(-1).exp().add(1).fraction(1)}},{key:\"rollToColMatrix\",value:function(){for(var r=[],o=0,e=0;e<this.rows;e+=1)for(var n=0;n<this.cols;n+=1)r[o]=[],r[o++][0]=this.data[e][n];return t.from(r)}},{key:\"abs\",value:function(){for(var r=[],o=0;o<this.rows;o+=1){r[o]=[];for(var e=0;e<this.cols;e+=1)r[o][e]=Math.abs(this.data[o][e])}return t.from(r)}},{key:\"mean\",value:function(){for(var t=0,r=this.rows*this.cols,o=0;o<this.rows;o+=1)for(var e=0;e<this.cols;e+=1)t+=this.data[o][e];return t/r}},{key:\"max\",value:function(){for(var t=-1/0,r=0;r<this.rows;r+=1)for(var o=0;o<this.cols;o+=1)t=Math.max(this.data[r][o],t);return t}},{key:\"setMax\",value:function(r){for(var o=[],e=0;e<this.rows;e+=1){o[e]=[];for(var n=0;n<this.cols;n+=1)o[e][n]=Math.min(this.data[e][n],r)}return t.from(o)}},{key:\"setMin\",value:function(r){for(var o=[],e=0;e<this.rows;e+=1){o[e]=[];for(var n=0;n<this.cols;n+=1)o[e][n]=Math.max(this.data[e][n],r)}return t.from(o)}},{key:\"setZeros\",value:function(){for(var r=[],o=0;o<this.rows;o+=1){r[o]=[];for(var e=0;e<this.cols;e+=1)r[o][e]=0}return t.from(r)}},{key:\"setOnes\",value:function(){for(var r=[],o=0;o<this.rows;o+=1){r[o]=[];for(var e=0;e<this.cols;e+=1)r[o][e]=1}return t.from(r)}},{key:\"setRandom\",value:function(){for(var r=arguments.length>0&&void 0!==arguments[0]?arguments[0]:1,o=[],e=0;e<this.rows;e+=1){o[e]=[];for(var n=0;n<this.cols;n+=1)o[e][n]=(4*Math.random()-2)*Math.sqrt(2/r)}return t.from(o)}},{key:\"fraction\",value:function(){for(var r=arguments.length>0&&void 0!==arguments[0]?arguments[0]:1,o=[],e=0;e<this.rows;e+=1){o[e]=[];for(var n=0;n<this.cols;n+=1)o[e][n]=r/this.data[e][n]}return t.from(o)}},{key:\"sqrt\",value:function(){for(var r=[],o=0;o<this.rows;o+=1){r[o]=[];for(var e=0;e<this.cols;e+=1)r[o][e]=Math.sqrt(this.data[o][e]+1e-8)}return t.from(r)}},{key:\"dot\",value:function(t){return g().execute(\"dot\",this,t)}},{key:\"multiply\",value:function(r){if(\"number\"==typeof r){for(var o=[],e=0;e<this.rows;e+=1){o[e]=[];for(var n=0;n<this.cols;n+=1)o[e][n]=this.data[e][n]*r}return t.from(o)}if(r.rows!==this.rows||this.cols!==r.cols)throw new Error(\"Dimension error: \".concat(this.shape(),\" !== \").concat(r.shape()));for(var i=[],a=0;a<this.rows;a+=1){i[a]=[];for(var s=0;s<this.cols;s+=1)i[a][s]=this.data[a][s]*r.data[a][s]}return t.from(i)}},{key:\"subtract\",value:function(r){if(\"number\"==typeof r){for(var o=[],e=0;e<this.rows;e+=1){o[e]=[];for(var n=0;n<this.cols;n+=1)o[e][n]=this.data[e][n]-r}return t.from(o)}if(this.rows!==r.rows||this.cols!==r.cols)throw new Error(\"Dimensions error: \".concat(this.rows,\", \").concat(this.cols,\" !== \").concat(r.rows,\", \").concat(r.cols));for(var i=[],a=0;a<this.rows;a+=1){i[a]=[];for(var s=0;s<this.cols;s+=1)i[a][s]=this.data[a][s]-r.data[a][s]}return t.from(i)}},{key:\"forEach\",value:function(r){for(var o=[],e=0;e<this.rows;e+=1){o[e]=[];for(var n=0;n<this.cols;n+=1)o[e][n]=r(this.data[e][n])}return t.from(o)}},{key:\"shape\",value:function(){return[this.rows,this.cols]}},{key:\"divide\",value:function(r){if(\"number\"==typeof r){for(var o=[],e=0;e<this.rows;e+=1){o[e]=[];for(var n=0;n<this.cols;n+=1)o[e][n]=this.data[e][n]/r}return t.from(o)}if(r.rows!==this.rows||r.cols!==this.cols)throw new Error(\"Dimensions error (\".concat(this.rows,\", \").concat(this.cols,\") !== (\").concat(r.rows,\", \").concat(r.cols,\")\"));for(var i=[],a=0;a<this.rows;a+=1){i[a]=[];for(var s=0;s<this.cols;s+=1)i[a][s]=this.data[a][s]/r.data[a][s]}return t.from(i)}},{key:\"minusOne\",value:function(){for(var r=[],o=0;o<this.rows;o+=1){r[o]=[];for(var e=0;e<this.cols;e+=1)r[o][e]=1-this.data[o][e]}return t.from(r)}},{key:\"subtractFromNumber\",value:function(r){for(var o=[],e=0;e<this.rows;e+=1){o[e]=[];for(var n=0;n<this.cols;n+=1)o[e][n]=r-this.data[e][n]}return t.from(o)}},{key:\"add\",value:function(r){if(\"number\"==typeof r){for(var o=[],e=0;e<this.rows;e+=1){o[e]=[];for(var n=0;n<this.cols;n+=1)o[e][n]=this.data[e][n]+r}return t.from(o)}if(r instanceof t){if(r.rows!==this.rows||r.cols!==this.cols)throw new Error(\"Dimention error: rows (x: \".concat(this.rows,\", y: \").concat(this.cols,\") !== (x: \").concat(r.rows,\", y: \").concat(r.cols,\")\"));for(var i=[],a=0;a<this.rows;a+=1){i[a]=[];for(var s=0;s<this.cols;s+=1)i[a][s]=this.data[a][s]+r.data[a][s]}return t.from(i)}return this}},{key:\"log\",value:function(){for(var r=[],o=0;o<this.rows;o+=1){r[o]=[];for(var e=0;e<this.cols;e+=1)r[o][e]=Math.log(this.data[o][e]+1e-8)}return t.from(r)}},{key:\"tanh\",value:function(){return this.exp().subtract(this.multiply(-1).exp()).divide(this.exp().add(this.multiply(-1).exp()))}},{key:\"softmax\",value:function(){var t=this.max()-1e-8;return this.subtract(t).exp().divide(this.rowwiseSum().replicate(this.cols,1).transpose())}},{key:\"exp\",value:function(){for(var r=[],o=0;o<this.rows;o+=1){r[o]=[];for(var e=0;e<this.cols;e+=1)r[o][e]=Math.exp(this.data[o][e]+1e-8)}return t.from(r)}},{key:\"pow\",value:function(r){for(var o=[],e=0;e<this.rows;e+=1){o[e]=[];for(var n=0;n<this.cols;n+=1)o[e][n]=Math.pow(this.data[e][n],r)}return t.from(o)}},{key:\"value\",value:function(t,r){var o=arguments.length>2&&void 0!==arguments[2]?arguments[2]:void 0;return void 0===o?this.data[t][r]:(this.data[t][r]=o,this)}},{key:\"copy\",value:function(){return t.from(this.data)}},{key:\"concat\",value:function(t){for(var r=0;r<t.rows;r+=1)this.data.push(t.data[r]);return this}}],e=[{key:\"from\",value:function(r){var o;return new t(r.length,(null===(o=r[0])||void 0===o?void 0:o.length)||0,r)}}],o&&j(r.prototype,o),e&&j(r,e),Object.defineProperty(r,\"prototype\",{writable:!1}),t}(),_=function(t,r,o,e,n,i,a,s,u,f){for(var c=0,l=new E(((e-i+2*s)/f+1)*((o-n+2*a)/u+1),i*n*r).setZeros(),h=-a;h+n<=o+a;h+=u)for(var v=-s;v+i<=e+s;v+=f){for(var y=0,p=0;p<r;p++)for(var d=o*e*p,w=0;w<n;w++)for(var m=0;m<i;m++)h+w>=0&&v+m>=0&&v+m<e&&h+w<o&&(l.data[c][y]=t.data[(w+h)*e+v+m+d][0]),y++;c++}return l},C=function(t,r,o,e,n,i,a,s){for(var u=(e-i)/s+1,f=(o-n)/a+1,c=0,l=new E(u*f*r,1).setZeros(),h=0;h+n<=o;h+=a)for(var v=0;v+i<=e;v+=s){for(var y=0;y<r;y++){for(var p=-1/0,d=o*e*y,w=u*f*y,m=0;m<n;m++)for(var b=0;b<i;b++)p=Math.max(p,t.data[d+(m+h)*e+v+b][0]);l.data[w+c][0]=p}c++}return l},R=function(t,r){return Math.round((t+223e-18)*Math.pow(10,r))/Math.pow(10,r)}})(),module.exports=e})();\n//# sourceMappingURL=impulse-math-ts.js.map","module.exports = require(\"fs\");","module.exports = require(\"path\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import { NetworkBuilder1D, NetworkBuilder3D } from \"./NetworkBuilder\";\nimport {\n  SoftmaxLayer,\n  LogisticLayer,\n  ReluLayer,\n  SoftplusLayer,\n  TanhLayer,\n  ConvLayer,\n  FullyConnectedLayer,\n  MaxPoolLayer,\n  RecurrentLayer,\n  LSTMLayer,\n} from \"./Layer\";\nimport { Matrix } from \"impulse-math-ts\";\nimport {\n  OptimizerAdam,\n  OptimizerGradientDescent,\n  OptimizerAdagrad,\n  OptimizerMomentum,\n  OptimizerRMSProp,\n} from \"./Trainer/Optimizer\";\nimport { MiniBatchTrainer, Trainer as TrainerTrainer, RNNTrainer } from \"./Trainer\";\nimport { NetworkRNN } from \"./Network\";\n\nconst NetworkBuilder = { NetworkBuilder1D, NetworkBuilder3D };\nconst Math = {\n  Matrix,\n};\nconst Layer = {\n  SoftmaxLayer,\n  LogisticLayer,\n  ReluLayer,\n  SoftplusLayer,\n  TanhLayer,\n  ConvLayer,\n  MaxPoolLayer,\n  FullyConnectedLayer,\n  RecurrentLayer,\n  LSTMLayer,\n};\nconst Optimizer = {\n  OptimizerAdam,\n  OptimizerGradientDescent,\n  OptimizerAdagrad,\n  OptimizerMomentum,\n  OptimizerRMSProp,\n};\nconst Trainer = {\n  MiniBatchTrainer,\n  Trainer: TrainerTrainer,\n  RNNTrainer,\n};\nconst Network = {\n  NetworkRNN,\n};\n\nexport { NetworkBuilder, Math, Layer, Optimizer, Trainer, Network };\n"],"names":["AbstractLayer","backPropagation","value","width","height","depth","previousLayer","Matrix","AbstractLayer1D","W","b","A","Z","gW","gb","vW","vb","sW","sb","dW","db","resize","getHeight","getWidth","setRandom","setZeros","input","dot","add","replicate","cols","activation","is1D","setWidth","getSize","is3D","getOutputWidth","getOutputHeight","getOutputDepth","setHeight","pow","sum","AbstractLayer3D","setSize","dimension","setDepth","getDepth","AbstractBackPropagation","layer","Backpropagation1Dto1D","numberOfExamples","regularization","sigma","previousActivations","delta","transpose","divide","multiply","rowwiseSum","result","rows","Error","Backpropagation3Dto1D","LayerType","BackpropagationToMaxPool","BackpropagationToConv","BackpropagationFactory","getType","conv","maxpool","fullyconnected","getComputation","padding","getPadding","stride","getStride","filterSize","getFilterSize","outputWidth","outputHeight","outputDepth","inputWidth","inputHeight","inputDepth","tmpResult","execute","m","c","h","w","vertStart","vertEnd","horizStart","horizEnd","d","y","vertical","verticalPad","x","horizontal","horizontalPad","data","z","prevLayer","_max","Infinity","inputOffset","outputOffset","maxX","maxY","vStart","hStart","im2col","ConvLayer","numFilters","size","i","col","tmp","setCol","rollToColMatrix","setMin","FullyConnectedLayer","LSTMLayer","aPrev","cPrev","nx","ny","Wy","na","concat","ft","Wf","bf","sigmoid","it","Wi","bi","cct","Wc","bc","tanh","cNext","ot","Wo","bo","aNext","ytPred","by","softmax","daNext","dcNext","rnnlayer","LogisticLayer","exp","fraction","logistic","minusOne","MaxPoolLayer","pool","PurelinLayer","purelin","setOnes","RecurrentLayer","wX","wA","wY","wB","wBY","dwX","dwA","dwY","dwB","dwBY","Y","p","from","loss","row","Math","log","X","dhraw","setMax","colwiseSum","a0","ReluLayer","relu","SoftmaxLayer","SoftplusLayer","softplus","TanhLayer","fs","Network","dimensions","layers","push","output","forEach","forward","predictions","subtract","length","getBackPropagation","propagate","derivative","path","resultJSON","type","weights","JSON","stringify","Promise","resolve","reject","writeFile","err","console","error","NetworkLSTM","vocabularySize","sequenceLength","charIndices","nX","tX","nY","nA","a","Array","map","dataInput","t","_aNext","_cNext","_yt","da","tx","x1","NetworkRNN","rowMaxCoeffIndex","max","dataset","Waa","Wax","Wya","indices","getCharIndices","newLineCharacter","chars","getChars","idx","counter","colMaxCoeffIndex","maxIndex","floor","random","join","backward","learningRate","AbstractNetworkBuilder","network","layerClass","callback","lastLayer","firstLayerTransition","transition","configure","setBackPropagation","create","addLayer","NetworkBuilder1D","jsonPath","readFile","json","parse","toString","builder","layerData","createLayer","getNetwork","getLayers","NetworkBuilder3D","setFilterSize","setStride","setNumFilters","setPadding","AbstractTrainer","optimizer","undefined","iterations","verbose","verboseStep","stepCallback","inputDataset","outputDataset","getNumberOfExamples","accuracy","penalty","correctOutput","cost","index1","index2","round","MiniBatchTrainer","batchSize","numBatches","ceil","startTime","Date","getTime","startIterationTime","batch","offset","startIterationTime2","getBatch","setBatchSize","setLearningRate","setT","optimize","endIterationTime","endTime","currentResult","iteration","AbstractOptimizer","OptimizerAdagrad","adagrad","sqrt","OptimizerAdam","beta1","beta2","adam","vWCorrected","vbCorrected","sWCorrected","sbCorrected","OptimizerGradientDescent","gradientDescent","OptimizerMomentum","momentum","beta","OptimizerRMSProp","alpha","rmsprop","RNNTrainer","smoothLoss","getVocabularySize","buildData","getDimensions","vectorization","hs","ys","mWxh","mWhh","mWhy","mbh","mby","_loss","_y","dy","sample","trim","num","Trainer","TrainerTrainer","NetworkBuilder","Layer","Optimizer"],"sourceRoot":""}