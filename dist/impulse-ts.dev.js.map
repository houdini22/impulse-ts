{"version":3,"file":"impulse-ts.dev.js","mappings":"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","sources":["webpack://impulse-ts/./src/typescript/builder/abstract.tsx","webpack://impulse-ts/./src/typescript/builder/builder1d.tsx","webpack://impulse-ts/./src/typescript/builder/builder3d.tsx","webpack://impulse-ts/./src/typescript/builder/index.tsx","webpack://impulse-ts/./src/typescript/computation/abstract.tsx","webpack://impulse-ts/./src/typescript/computation/computationcpu.tsx","webpack://impulse-ts/./src/typescript/computation/computationgpu.tsx","webpack://impulse-ts/./src/typescript/computation/index.tsx","webpack://impulse-ts/./src/typescript/computation/utils.tsx","webpack://impulse-ts/./src/typescript/dataset/dataset.tsx","webpack://impulse-ts/./src/typescript/dataset/datasetbuilder.tsx","webpack://impulse-ts/./src/typescript/dataset/datasetmodifier/abstract.tsx","webpack://impulse-ts/./src/typescript/dataset/datasetmodifier/callback.tsx","webpack://impulse-ts/./src/typescript/dataset/datasetmodifier/index.tsx","webpack://impulse-ts/./src/typescript/dataset/datasetmodifier/minmaxscaling.tsx","webpack://impulse-ts/./src/typescript/dataset/datasetmodifier/missingdata.tsx","webpack://impulse-ts/./src/typescript/dataset/index.tsx","webpack://impulse-ts/./src/typescript/layer/abstract.tsx","webpack://impulse-ts/./src/typescript/layer/abstract1d.tsx","webpack://impulse-ts/./src/typescript/layer/abstract3d.tsx","webpack://impulse-ts/./src/typescript/layer/backpropagation/abstract.tsx","webpack://impulse-ts/./src/typescript/layer/backpropagation/backpropagation1dto1d.tsx","webpack://impulse-ts/./src/typescript/layer/backpropagation/backpropagationto3dto1d.tsx","webpack://impulse-ts/./src/typescript/layer/backpropagation/backpropagationtoconv.tsx","webpack://impulse-ts/./src/typescript/layer/backpropagation/backpropagationtomaxpool.tsx","webpack://impulse-ts/./src/typescript/layer/backpropagation/factory.tsx","webpack://impulse-ts/./src/typescript/layer/conv.tsx","webpack://impulse-ts/./src/typescript/layer/fullyconnected.tsx","webpack://impulse-ts/./src/typescript/layer/index.tsx","webpack://impulse-ts/./src/typescript/layer/logistic.tsx","webpack://impulse-ts/./src/typescript/layer/maxpool.tsx","webpack://impulse-ts/./src/typescript/layer/relu.tsx","webpack://impulse-ts/./src/typescript/layer/softmax.tsx","webpack://impulse-ts/./src/typescript/layer/softplus.tsx","webpack://impulse-ts/./src/typescript/layer/tanh.tsx","webpack://impulse-ts/./src/typescript/math/math.tsx","webpack://impulse-ts/./src/typescript/math/matrix.tsx","webpack://impulse-ts/./src/typescript/network.tsx","webpack://impulse-ts/./src/typescript/trainer/abstract.tsx","webpack://impulse-ts/./src/typescript/trainer/index.tsx","webpack://impulse-ts/./src/typescript/trainer/minibatch.tsx","webpack://impulse-ts/./src/typescript/trainer/optimizer/abstract.tsx","webpack://impulse-ts/./src/typescript/trainer/optimizer/adam.tsx","webpack://impulse-ts/./src/typescript/trainer/optimizer/gradientdescent.tsx","webpack://impulse-ts/./src/typescript/trainer/optimizer/index.tsx","webpack://impulse-ts/./src/typescript/types.tsx","webpack://impulse-ts/external commonjs2 \"csvtojson\"","webpack://impulse-ts/external commonjs2 \"gpu.js\"","webpack://impulse-ts/external node-commonjs \"fs\"","webpack://impulse-ts/webpack/bootstrap","webpack://impulse-ts/webpack/runtime/compat get default export","webpack://impulse-ts/webpack/runtime/define property getters","webpack://impulse-ts/webpack/runtime/hasOwnProperty shorthand","webpack://impulse-ts/webpack/runtime/make namespace object","webpack://impulse-ts/./src/typescript/main.tsx"],"sourcesContent":["import { Dimension, Layers } from \"../types\";\nimport Network from \"../network\";\nimport { BackpropagationFactory } from \"../layer/backpropagation/factory\";\nimport { AbstractLayer } from \"../layer\";\n\nabstract class AbstractBuilder {\n  protected dimensions: Dimension = null;\n  protected lastLayer: Layers = null;\n  protected network: Network = null;\n\n  constructor(dimension: Dimension) {\n    this.dimensions = dimension;\n    this.network = new Network(dimension);\n  }\n\n  createLayer(\n    type: Layers,\n    callback: (layer: AbstractLayer) => void = null\n  ): AbstractBuilder {\n    const layer = new type();\n\n    if (typeof callback === \"function\") {\n      callback(layer);\n    }\n\n    if (this.lastLayer === null) {\n      this.firstLayerTransition(layer);\n    } else {\n      layer.transition(this.lastLayer);\n    }\n\n    layer.configure();\n    layer.setBackPropagation(\n      BackpropagationFactory.create(this.lastLayer, layer)\n    );\n\n    this.network.addLayer(layer);\n    this.lastLayer = layer;\n\n    return this;\n  }\n\n  getNetwork(): Network {\n    return this.network;\n  }\n\n  abstract firstLayerTransition(layer: Layers): void;\n}\n\nexport { AbstractBuilder };\n","import { AbstractBuilder } from \"./abstract\";\nimport { Layers } from \"../types\";\nimport Network from \"../network\";\nimport * as fs from \"fs\";\nimport {\n  LogisticLayer,\n  ReluLayer,\n  SoftmaxLayer,\n  SoftplusLayer,\n  TanhLayer,\n} from \"../layer/\";\n\nclass Builder1D extends AbstractBuilder {\n  firstLayerTransition(layer: Layers): void {\n    layer.setWidth(this.dimensions[0]);\n  }\n\n  static fromJSON(jsonPath: string): Promise<Network> {\n    return new Promise((resolve, reject) => {\n      fs.readFile(jsonPath, (err, data) => {\n        if (err) {\n          reject(err);\n          return;\n        }\n        const json = JSON.parse(data.toString());\n\n        const builder = new Builder1D(json[\"dimensions\"]);\n\n        json[\"layers\"].forEach((layerData) => {\n          let layerClass = null;\n\n          if (layerData[\"type\"] === \"logistic\") {\n            layerClass = LogisticLayer;\n          } else if (layerData[\"type\"] === \"softmax\") {\n            layerClass = SoftmaxLayer;\n          } else if (layerData[\"type\"] === \"relu\") {\n            layerClass = ReluLayer;\n          } else if (layerData[\"type\"] === \"softplus\") {\n            layerClass = SoftplusLayer;\n          } else if (layerData[\"type\"] === \"tanh\") {\n            layerClass = TanhLayer;\n          }\n\n          builder.createLayer(layerClass, (layer) => {\n            layer.setSize(layerData[\"dimensions\"]);\n          });\n        });\n\n        const network = builder.getNetwork();\n\n        network.getLayers().forEach((layer, i) => {\n          layer.W = json[\"layers\"][\"W\"];\n          layer.b = json[\"layers\"][\"b\"];\n        });\n\n        resolve(network);\n      });\n    });\n  }\n}\n\nexport { Builder1D };\n","import { AbstractBuilder } from \"./abstract\";\nimport { Layers } from \"../types\";\nimport Network from \"../network\";\nimport * as fs from \"fs\";\nimport {\n  LogisticLayer,\n  ReluLayer,\n  SoftmaxLayer,\n  SoftplusLayer,\n  TanhLayer,\n} from \"../layer/\";\nimport { ConvLayer } from \"../layer/\";\nimport { MaxPoolLayer } from \"../layer/\";\n\nclass Builder3D extends AbstractBuilder {\n  firstLayerTransition(layer: Layers): void {\n    layer.setSize(this.dimensions);\n  }\n\n  static fromJSON(jsonPath: string): Promise<Network> {\n    return new Promise((resolve, reject) => {\n      fs.readFile(jsonPath, (err, data) => {\n        if (err) {\n          reject(err);\n          return;\n        }\n        const json = JSON.parse(data.toString());\n\n        const builder = new Builder3D(json[\"dimensions\"]);\n\n        json[\"layers\"].forEach((layerData) => {\n          let layerClass = null;\n\n          if (layerData[\"type\"] === \"logistic\") {\n            layerClass = LogisticLayer;\n            builder.createLayer(layerClass, (layer) => {\n              layer.setSize(layerData[\"dimensions\"]);\n            });\n          } else if (layerData[\"type\"] === \"softmax\") {\n            layerClass = SoftmaxLayer;\n            builder.createLayer(layerClass, (layer) => {\n              layer.setSize(layerData[\"dimensions\"]);\n            });\n          } else if (layerData[\"type\"] === \"relu\") {\n            layerClass = ReluLayer;\n            builder.createLayer(layerClass, (layer) => {\n              layer.setSize(layerData[\"dimensions\"]);\n            });\n          } else if (layerData[\"type\"] === \"softplus\") {\n            layerClass = SoftplusLayer;\n            builder.createLayer(layerClass, (layer) => {\n              layer.setSize(layerData[\"dimensions\"]);\n            });\n          } else if (layerData[\"type\"] === \"tanh\") {\n            layerClass = TanhLayer;\n            builder.createLayer(layerClass, (layer) => {\n              layer.setSize(layerData[\"dimensions\"]);\n            });\n          } else if (layerData[\"type\"] === \"conv\") {\n            layerClass = ConvLayer;\n            builder.createLayer(layerClass, (layer) => {\n              layer.setSize(layerData[\"dimensions\"]);\n              layer.setFilterSize(layerData[\"filterSize\"]);\n              layer.setStride(layerData[\"stride\"]);\n              layer.setNumFilters(layerData[\"numFilters\"]);\n              layer.setPadding(layerData[\"padding\"]);\n            });\n          } else if (layerData[\"type\"] === \"maxpool\") {\n            layerClass = MaxPoolLayer;\n            builder.createLayer(layerClass, (layer) => {\n              layer.setSize(layerData[\"dimensions\"]);\n              layer.setFilterSize(layerData[\"filterSize\"]);\n              layer.setStride(layerData[\"stride\"]);\n            });\n          } else if (layerData[\"type\"] === \"fullyconnected\") {\n            layerClass = MaxPoolLayer;\n            builder.createLayer(layerClass);\n          }\n        });\n\n        const network = builder.getNetwork();\n\n        network.getLayers().forEach((layer, i) => {\n          layer.W = json[\"layers\"][\"W\"];\n          layer.b = json[\"layers\"][\"b\"];\n        });\n\n        resolve(network);\n      });\n    });\n  }\n}\n\nexport { Builder3D };\n","import { AbstractBuilder } from \"./abstract\";\nimport { Builder1D } from \"./builder1d\";\nimport { Builder3D } from \"./builder3d\";\n\nexport { AbstractBuilder, Builder1D, Builder3D };\n","import { Matrix } from \"../math/matrix\";\n\nexport class AbstractComputation {\n  protected kernels = {};\n\n  addKernel(name: string, func: Function): AbstractComputation {\n    this.kernels[name] = func;\n    return this;\n  }\n\n  execute(\n    name: string,\n    ...args: [Matrix, Matrix] | [Matrix, number] | [Matrix]\n  ): Matrix {\n    return this.kernels[name].apply(null, args);\n  }\n}\n","import { AbstractComputation } from \"./abstract\";\nimport { Matrix } from \"../math/matrix\";\n\nexport const elementWiseDivide = (m1: Matrix, m2: Matrix): Matrix => {\n  if (m1.rows !== m2.rows) {\n    throw new Error(\"ROWS number not equal.\");\n  }\n  if (m1.cols !== m2.cols) {\n    throw new Error(\"COLS number not equal.\");\n  }\n\n  const data = [];\n\n  for (let row = 0; row < m1.rows; row += 1) {\n    data[row] = [];\n    for (let col = 0; col < m1.cols; col += 1) {\n      data[row][col] = m1.data[row][col] / m2.data[row][col];\n    }\n  }\n\n  return new Matrix(m1.rows, m2.cols, data);\n};\n\nexport const elementWiseDivideNumber = (m1: Matrix, num: number): Matrix => {\n  const data = [];\n\n  for (let row = 0; row < m1.rows; row += 1) {\n    data[row] = [];\n    for (let col = 0; col < m1.cols; col += 1) {\n      data[row][col] = m1.data[row][col] / num;\n    }\n  }\n\n  return new Matrix(m1.rows, m1.cols, data);\n};\n\nexport const softmaxActivation = (m: Matrix): Matrix => {\n  const data = [];\n\n  for (let row = 0; row < m.rows; row += 1) {\n    data[row] = [];\n    for (let col = 0; col < m.cols; col += 1) {\n      data[row][col] = Math.exp(m.data[row][col]);\n    }\n  }\n\n  const calculated = new Matrix(m.rows, m.cols, data);\n  const divider = new Matrix(1, m.cols, calculated.colwiseSum().data).replicate(\n    m.rows,\n    1\n  );\n  return new Matrix(\n    m.rows,\n    m.cols,\n    elementWiseDivide(calculated, divider).data\n  );\n};\n\nexport const softmaxLoss = (output: Matrix, predictions: Matrix): number => {\n  const data = [];\n\n  for (let row = 0; row < predictions.rows; row += 1) {\n    data[row] = [];\n    for (let col = 0; col < predictions.cols; col += 1) {\n      data[row][col] = Math.log(predictions.data[row][col]);\n    }\n  }\n\n  return new Matrix(\n    output.rows,\n    output.cols,\n    elementWiseMultiply(output, new Matrix(output.rows, output.cols, data)).data\n  ).sum();\n};\n\nexport const logisticActivation = (m: Matrix): Matrix => {\n  const data = [];\n\n  for (let row = 0; row < m.rows; row += 1) {\n    data[row] = [];\n    for (let col = 0; col < m.cols; col += 1) {\n      data[row][col] = 1.0 / (1.0 + Math.exp(-m.data[row][col]));\n    }\n  }\n\n  return new Matrix(m.rows, m.cols, data);\n};\n\nexport const logisticDerivative = (m: Matrix): Matrix => {\n  const data = [];\n\n  for (let row = 0; row < m.rows; row += 1) {\n    data[row] = [];\n    for (let col = 0; col < m.cols; col += 1) {\n      data[row][col] = m.data[row][col] * (1.0 - m.data[row][col]);\n    }\n  }\n\n  return new Matrix(m.rows, m.cols, data);\n};\n\nexport const logisticLoss = (output: Matrix, predictions: Matrix): number => {\n  const log = [];\n  for (let row = 0; row < output.rows; row += 1) {\n    log[row] = [];\n    for (let col = 0; col < output.cols; col += 1) {\n      log[row][col] = Math.log(output.data[row][col]);\n    }\n  }\n  const logMatrix = new Matrix(output.rows, output.cols, log);\n\n  const sub = [];\n  for (let row = 0; row < output.rows; row += 1) {\n    sub[row] = [];\n    for (let col = 0; col < output.cols; col += 1) {\n      sub[row][col] = 1.0 - output.data[row][col];\n    }\n  }\n  const subMatrix = new Matrix(output.rows, output.cols, sub);\n\n  const data = [];\n  for (let row = 0; row < predictions.rows; row += 1) {\n    data[row] = [];\n    for (let col = 0; col < predictions.cols; col += 1) {\n      data[row][col] = Math.log(1.0 - predictions.data[row][col]);\n    }\n  }\n  const logSubMatrix = new Matrix(predictions.rows, predictions.cols, data);\n\n  return elementWiseAdd(\n    elementWiseMultiply(output, logMatrix),\n    elementWiseMultiply(subMatrix, logSubMatrix)\n  ).sum();\n};\n\nexport const tanhActivation = (m: Matrix): Matrix => {\n  const data = [];\n  for (let row = 0; row < m.rows; row += 1) {\n    data[row] = [];\n    for (let col = 0; col < m.cols; col += 1) {\n      data[row][col] = 2.0 / (1.0 + Math.exp(-2.0 * m.data[row][col])) - 1.0;\n    }\n  }\n  return new Matrix(m.rows, m.cols, data);\n};\n\nexport const tanhDerivative = (m: Matrix): Matrix => {\n  const data = [];\n  for (let row = 0; row < m.rows; row += 1) {\n    data[row] = [];\n    for (let col = 0; col < m.cols; col += 1) {\n      data[row][col] =\n        1.0 -\n        Math.pow(2.0 / (1.0 + Math.exp(-2.0 * m.data[row][col])) - 1.0, 2.0);\n    }\n  }\n  return new Matrix(m.rows, m.cols, data);\n};\n\nexport const reluActivation = (m: Matrix): Matrix => {\n  const data = [];\n  for (let row = 0; row < m.rows; row += 1) {\n    data[row] = [];\n    for (let col = 0; col < m.cols; col += 1) {\n      data[row][col] = Math.max(0.0, m.data[row][col]);\n    }\n  }\n  return new Matrix(m.rows, m.cols, data);\n};\n\nexport const reluDerivative = (m: Matrix): Matrix => {\n  const data = [];\n  for (let row = 0; row < m.rows; row += 1) {\n    data[row] = [];\n    for (let col = 0; col < m.cols; col += 1) {\n      data[row][col] = m.data[row][col] > 0 ? 1 : 0;\n    }\n  }\n  return new Matrix(m.rows, m.cols, data);\n};\n\nexport const softplusActivation = (m: Matrix): Matrix => {\n  const data = [];\n  for (let row = 0; row < m.rows; row += 1) {\n    data[row] = [];\n    for (let col = 0; col < m.cols; col += 1) {\n      data[row][col] = Math.log(1 + Math.exp(m.data[row][col]));\n    }\n  }\n  return new Matrix(m.rows, m.cols, data);\n};\n\nexport const softplusDerivative = (m: Matrix): Matrix => {\n  const data = [];\n  for (let row = 0; row < m.rows; row += 1) {\n    data[row] = [];\n    for (let col = 0; col < m.cols; col += 1) {\n      data[row][col] =\n        1 / (1 + Math.exp(-Math.log(1 + Math.exp(m.data[row][col]))));\n    }\n  }\n  return new Matrix(m.rows, m.cols, data);\n};\n\nexport const penalty = (m: Matrix): number => {\n  const data = [];\n  for (let row = 0; row < m.rows; row += 1) {\n    data[row] = [];\n    for (let col = 0; col < m.cols; col += 1) {\n      data[row][col] = Math.pow(m.data[row][col], 2);\n    }\n  }\n  return new Matrix(m.rows, m.cols, data).sum();\n};\n\nexport const sqrt = (m: Matrix): Matrix => {\n  const data = [];\n  for (let row = 0; row < m.rows; row += 1) {\n    data[row] = [];\n    for (let col = 0; col < m.cols; col += 1) {\n      data[row][col] = Math.sqrt(m.data[row][col] + 1e-8);\n    }\n  }\n  return new Matrix(m.rows, m.cols, data);\n};\n\nexport const purelinLoss = (output: Matrix, predictions: Matrix): number => {\n  const data = [];\n  for (let row = 0; row < output.rows; row += 1) {\n    data[row] = [];\n    for (let col = 0; col < output.cols; col += 1) {\n      data[row][col] =\n        output.data[row][col] - Math.pow(predictions[row][col], 2);\n    }\n  }\n  return new Matrix(output.rows, output.cols, data).sum();\n};\n\nexport const multiply = (m1: Matrix, m2: Matrix): Matrix => {\n  if (m1.cols !== m2.rows) {\n    throw new Error(\n      `DIMENSIONS error. m1.cols ${m1.cols} !== m2.rows ${m2.rows}.`\n    );\n  }\n  const data = [];\n  for (let row = 0; row < m1.rows; ++row) {\n    data[row] = new Array(m2.cols);\n    for (let col = 0; col < m2.cols; ++col) {\n      data[row][col] = 0;\n      for (let i = 0; i < m1.cols; ++i) {\n        data[row][col] += m1.data[row][i] * m2.data[i][col];\n      }\n    }\n  }\n  return new Matrix(m1.rows, m2.cols, data);\n};\n\nexport const elementWiseAdd = (m1: Matrix, m2: Matrix): Matrix => {\n  if (m1.rows !== m2.rows) {\n    throw new Error(\"ROWS number not equal.\");\n  }\n  if (m1.cols !== m2.cols) {\n    throw new Error(\"COLS number not equal.\");\n  }\n\n  const data = [];\n  for (let row = 0; row < m1.rows; row += 1) {\n    data[row] = [];\n    for (let col = 0; col < m1.cols; col += 1) {\n      data[row][col] = m1.data[row][col] + m2.data[row][col];\n    }\n  }\n  return new Matrix(m1.rows, m1.cols, data);\n};\n\nexport const elementWiseSubtract = (m1: Matrix, m2: Matrix): Matrix => {\n  if (m1.rows !== m2.rows) {\n    throw new Error(\"ROWS number not equal.\");\n  }\n  if (m1.cols !== m2.cols) {\n    throw new Error(\"COLS number not equal.\");\n  }\n\n  const data = [];\n  for (let row = 0; row < m1.rows; row += 1) {\n    data[row] = [];\n    for (let col = 0; col < m1.cols; col += 1) {\n      data[row][col] = m1.data[row][col] - m2.data[row][col];\n    }\n  }\n  return new Matrix(m1.rows, m1.cols, data);\n};\n\nexport const fillRandom = (m1: Matrix, parameter: number): Matrix => {\n  const data = [];\n  for (let row = 0; row < m1.rows; row += 1) {\n    data[row] = [];\n    for (let col = 0; col < m1.cols; col += 1) {\n      data[row][col] = (Math.random() - 0.5) * Math.sqrt(2.0 / parameter);\n    }\n  }\n  return new Matrix(m1.rows, m1.cols, data);\n};\n\nexport const setZeros = (m1: Matrix): Matrix => {\n  const data = [];\n  for (let row = 0; row < m1.rows; row += 1) {\n    data[row] = [];\n    for (let col = 0; col < m1.cols; col += 1) {\n      data[row][col] = 0;\n    }\n  }\n  return new Matrix(m1.rows, m1.cols, data);\n};\n\nexport const setOnes = (m1: Matrix): Matrix => {\n  const data = [];\n  for (let row = 0; row < m1.rows; row += 1) {\n    data[row] = [];\n    for (let col = 0; col < m1.cols; col += 1) {\n      data[row][col] = 1;\n    }\n  }\n  return new Matrix(m1.rows, m1.cols, data);\n};\n\nexport const elementWiseMultiply = (m1: Matrix, m2: Matrix): Matrix => {\n  if (m1.rows !== m2.rows) {\n    throw new Error(\"ROWS number not equal.\");\n  }\n  if (m1.cols !== m2.cols) {\n    throw new Error(\"COLS number not equal.\");\n  }\n\n  const data = [];\n  for (let row = 0; row < m1.rows; row += 1) {\n    data[row] = [];\n    for (let col = 0; col < m1.cols; col += 1) {\n      data[row][col] = m1.data[row][col] * m2.data[row][col];\n    }\n  }\n  return new Matrix(m1.rows, m1.cols, data);\n};\n\nexport const elementWiseMultiplyNumber = (m1: Matrix, num: number): Matrix => {\n  const data = [];\n  for (let row = 0; row < m1.rows; row += 1) {\n    data[row] = [];\n    for (let col = 0; col < m1.cols; col += 1) {\n      data[row][col] = m1.data[row][col] * num;\n    }\n  }\n  return new Matrix(m1.rows, m1.cols, data);\n};\n\nexport const transpose = (m: Matrix): Matrix => {\n  const data = [];\n  for (let col = 0; col < m.cols; col += 1) {\n    data[col] = [];\n    for (let row = 0; row < m.rows; row += 1) {\n      data[col][row] = m.data[row][col];\n    }\n  }\n  return new Matrix(m.cols, m.rows, data);\n};\n\nexport class ComputationCPU extends AbstractComputation {\n  constructor() {\n    super();\n\n    this.addKernel(\"multiply\", multiply);\n    this.addKernel(\"elementWiseAdd\", elementWiseAdd);\n    this.addKernel(\"elementWiseSubtract\", elementWiseSubtract);\n    this.addKernel(\"fillRandom\", fillRandom);\n    this.addKernel(\"setZeros\", setZeros);\n    this.addKernel(\"elementWiseMultiply\", elementWiseMultiply);\n    this.addKernel(\"elementWiseMultiplyNumber\", elementWiseMultiplyNumber);\n    this.addKernel(\"elementWiseDivide\", elementWiseDivide);\n    this.addKernel(\"elementWiseDivideNumber\", elementWiseDivideNumber);\n    this.addKernel(\"softmaxActivation\", softmaxActivation);\n    this.addKernel(\"softmaxLoss\", softmaxLoss);\n    this.addKernel(\"logisticActivation\", logisticActivation);\n    this.addKernel(\"logisticDerivative\", logisticDerivative);\n    this.addKernel(\"logisticLoss\", logisticLoss);\n    this.addKernel(\"tanhActivation\", tanhActivation);\n    this.addKernel(\"tanhDerivative\", tanhDerivative);\n    this.addKernel(\"reluActivation\", reluActivation);\n    this.addKernel(\"reluDerivative\", reluDerivative);\n    this.addKernel(\"softplusActivation\", softplusActivation);\n    this.addKernel(\"softplusDerivative\", softplusDerivative);\n    this.addKernel(\"penalty\", penalty);\n    this.addKernel(\"sqrt\", sqrt);\n    this.addKernel(\"purelinLoss\", purelinLoss);\n    this.addKernel(\"transpose\", transpose);\n  }\n}\n","import { AbstractComputation } from \"./abstract\";\nimport { Matrix } from \"../math/matrix\";\n\nimport { GPU } from \"gpu.js\";\n\nexport const gpu = new GPU({ mode: \"gpu\" });\n\nexport const elementWiseDivide = (m1: Matrix, m2: Matrix): Matrix => {\n  if (m1.rows !== m2.rows) {\n    throw new Error(\"ROWS number not equal.\");\n  }\n  if (m1.cols !== m2.cols) {\n    throw new Error(\"COLS number not equal.\");\n  }\n\n  const kernel = gpu\n    .createKernel(function (a, b) {\n      return a[this.thread.x][this.thread.y] / b[this.thread.x][this.thread.y];\n    })\n    .setOutput([m1.rows, m2.cols]);\n\n  return new Matrix(m1.rows, m1.cols, kernel(m1.data, m2.data) as number[][]);\n};\n\nexport const elementWiseDivideNumber = (m1: Matrix, num: number): Matrix => {\n  const kernel = gpu\n    .createKernel(function (a) {\n      return a[this.thread.x][this.thread.y] / this.constants.number;\n    })\n    .setOutput([m1.rows, m1.cols])\n    .setConstants({\n      number: num,\n    });\n\n  return new Matrix(m1.rows, m1.cols, kernel(m1.data) as number[][]);\n};\n\nexport const softmaxActivation = (m: Matrix): Matrix => {\n  const kernel = gpu\n    .createKernel(function (a) {\n      return Math.exp(a[this.thread.x][this.thread.y]);\n    })\n    .setOutput([m.rows, m.cols]);\n  const data = new Matrix(m.rows, m.cols, kernel(m.data) as number[][]);\n  const divider = new Matrix(1, m.cols, data.colwiseSum().data).replicate(\n    m.rows,\n    1\n  );\n  const result = new Matrix(\n    m.rows,\n    m.cols,\n    elementWiseDivide(data, divider).data\n  );\n  return result;\n};\n\nexport const softmaxLoss = (output: Matrix, predictions: Matrix): number => {\n  const kernel = gpu\n    .createKernel(function (a) {\n      return Math.log(a[this.thread.x][this.thread.y]);\n    })\n    .setOutput([predictions.rows, predictions.cols]);\n  return new Matrix(\n    output.rows,\n    output.cols,\n    elementWiseMultiply(\n      output,\n      new Matrix(\n        output.rows,\n        output.cols,\n        kernel(predictions.data) as number[][]\n      )\n    ).data\n  ).sum();\n};\n\nexport const logisticActivation = (m: Matrix): Matrix => {\n  const kernel = gpu\n    .createKernel(function (a) {\n      return 1.0 / (1.0 + Math.exp(-a[this.thread.x][this.thread.y]));\n    })\n    .setOutput([m.rows, m.cols]);\n  return new Matrix(m.rows, m.cols, kernel(m.data) as number[][]);\n};\n\nexport const logisticDerivative = (m: Matrix): Matrix => {\n  const kernel = gpu\n    .createKernel(function (a) {\n      return (\n        a[this.thread.x][this.thread.y] *\n        (1.0 - a[this.thread.x][this.thread.y])\n      );\n    })\n    .setOutput([m.rows, m.cols]);\n  return new Matrix(m.rows, m.cols, kernel(m.data) as number[][]);\n};\n\nexport const logisticLoss = (output: Matrix, predictions: Matrix): number => {\n  const kernel = gpu\n    .createKernel(function (a) {\n      return Math.log(a[this.thread.x][this.thread.y]);\n    })\n    .setOutput([output.rows, output.cols]);\n  const kernel2 = gpu\n    .createKernel(function (a) {\n      return 1.0 - a[this.thread.x][this.thread.y];\n    })\n    .setOutput([output.rows, output.cols]);\n  const kernel3 = gpu\n    .createKernel(function (a) {\n      return Math.log(1.0 - a[this.thread.x][this.thread.y]);\n    })\n    .setOutput([predictions.rows, predictions.cols]);\n\n  return elementWiseAdd(\n    elementWiseMultiply(\n      output,\n      new Matrix(output.rows, output.cols, kernel(output.data) as number[][])\n    ),\n    elementWiseMultiply(\n      new Matrix(output.rows, output.cols, kernel2(output.data) as number[][]),\n      new Matrix(\n        predictions.rows,\n        predictions.cols,\n        kernel3(predictions.data) as number[][]\n      )\n    )\n  ).sum();\n};\n\nexport const tanhActivation = (m: Matrix): Matrix => {\n  const kernel = gpu\n    .createKernel(function (a) {\n      return (\n        2.0 / (1.0 + Math.exp(-2.0 * a[this.thread.x][this.thread.y])) - 1.0\n      );\n    })\n    .setOutput([m.rows, m.cols]);\n  return new Matrix(m.rows, m.cols, kernel(m.data) as number[][]);\n};\n\nexport const tanhDerivative = (m: Matrix): Matrix => {\n  const kernel = gpu\n    .createKernel(function (a) {\n      return (\n        1.0 -\n        Math.pow(\n          2.0 / (1.0 + Math.exp(-2.0 * a[this.thread.x][this.thread.y])) - 1.0,\n          2.0\n        )\n      );\n    })\n    .setOutput([m.rows, m.cols]);\n  return new Matrix(m.rows, m.cols, kernel(m.data) as number[][]);\n};\n\nexport const reluActivation = (m: Matrix): Matrix => {\n  const kernel = gpu\n    .createKernel(function (a) {\n      return Math.max(0.0, a[this.thread.x][this.thread.y]);\n    })\n    .setOutput([m.rows, m.cols]);\n  return new Matrix(m.rows, m.cols, kernel(m.data) as number[][]);\n};\n\nexport const reluDerivative = (m: Matrix): Matrix => {\n  const kernel = gpu\n    .createKernel(function (a) {\n      if (a[this.thread.x][this.thread.y] > 0) {\n        return 1;\n      }\n      return 0;\n    })\n    .setOutput([m.rows, m.cols]);\n  return new Matrix(m.rows, m.cols, kernel(m.data) as number[][]);\n};\n\nexport const softplusActivation = (m: Matrix): Matrix => {\n  const kernel = gpu\n    .createKernel(function (a) {\n      return Math.log(1 + Math.exp(a[this.thread.x][this.thread.y]));\n    })\n    .setOutput([m.rows, m.cols]);\n  return new Matrix(m.rows, m.cols, kernel(m.data) as number[][]);\n};\n\nexport const softplusDerivative = (m: Matrix): Matrix => {\n  const kernel = gpu\n    .createKernel(function (a) {\n      return 1 / (1 + Math.exp(-a[this.thread.x][this.thread.y]));\n    })\n    .setOutput([m.rows, m.cols]);\n  return new Matrix(m.rows, m.cols, kernel(m.data) as number[][]);\n};\n\nexport const penalty = (m: Matrix): number => {\n  const kernel = gpu\n    .createKernel(function (a) {\n      return Math.pow(a[this.thread.x][this.thread.y], 2);\n    })\n    .setOutput([m.rows, m.cols]);\n  return new Matrix(m.rows, m.cols, kernel(m.data) as number[][]).sum();\n};\n\nexport const sqrt = (m: Matrix): Matrix => {\n  const kernel = gpu\n    .createKernel(function (a) {\n      return Math.sqrt(a[this.thread.x][this.thread.y] + 1e-8);\n    })\n    .setOutput([m.rows, m.cols]);\n  return new Matrix(m.rows, m.cols, kernel(m.data) as number[][]);\n};\n\nexport const purelinLoss = (output: Matrix, predictions: Matrix): number => {\n  const kernel = gpu\n    .createKernel(function (a, b) {\n      return (\n        b[this.thread.x][this.thread.y] -\n        Math.pow(a[this.thread.x][this.thread.y], 2)\n      );\n    })\n    .setOutput([output.rows, output.cols]);\n  return new Matrix(\n    output.rows,\n    output.cols,\n    kernel(output.data) as number[][]\n  ).sum();\n};\n\nexport const multiply = (m1: Matrix, m2: Matrix): Matrix => {\n  if (m1.cols !== m2.rows) {\n    throw new Error(\n      `DIMENSIONS error. m1.cols ${m1.cols} !== m2.rows ${m2.rows}.`\n    );\n  }\n\n  const kernel = gpu\n    .createKernel(function (a, b) {\n      let sum = 0;\n      for (let i = 0; i < this.constants.cols; i++) {\n        sum += a[this.thread.x][i] * b[i][this.thread.y];\n      }\n      return sum;\n    })\n    .setOutput([m1.rows, m2.cols])\n    .setConstants({\n      cols: m1.rows,\n    });\n\n  return new Matrix(m1.rows, m2.cols, kernel(m1.data, m2.data) as number[][]);\n};\n\nexport const elementWiseAdd = (m1: Matrix, m2: Matrix): Matrix => {\n  if (m1.rows !== m2.rows) {\n    throw new Error(\"ROWS number not equal.\");\n  }\n  if (m1.cols !== m2.cols) {\n    throw new Error(\"COLS number not equal.\");\n  }\n\n  const kernel = gpu\n    .createKernel(function (a, b) {\n      return a[this.thread.x][this.thread.y] + b[this.thread.x][this.thread.y];\n    })\n    .setOutput([m1.rows, m2.cols]);\n\n  return new Matrix(m1.rows, m2.cols, kernel(m1.data, m2.data) as number[][]);\n};\n\nexport const elementWiseSubtract = (m1: Matrix, m2: Matrix): Matrix => {\n  if (m1.rows !== m2.rows) {\n    throw new Error(\"ROWS number not equal.\");\n  }\n  if (m1.cols !== m2.cols) {\n    throw new Error(\"COLS number not equal.\");\n  }\n\n  const kernel = gpu\n    .createKernel(function (a, b) {\n      return a[this.thread.x][this.thread.y] - b[this.thread.x][this.thread.y];\n    })\n    .setOutput([m1.rows, m2.cols]);\n\n  return new Matrix(m1.rows, m2.cols, kernel(m1.data, m2.data) as number[][]);\n};\n\nexport const fillRandom = (m1: Matrix, parameter: number): Matrix => {\n  const kernel = gpu\n    .createKernel(function () {\n      return (Math.random() - 0.5) * Math.sqrt(2.0 / this.constants.parameter);\n    })\n    .setOutput([m1.rows, m1.cols])\n    .setConstants({\n      parameter,\n    });\n\n  return new Matrix(m1.rows, m1.cols, kernel() as number[][]);\n};\n\nexport const setZeros = (m1: Matrix): Matrix => {\n  const kernel = gpu\n    .createKernel(function () {\n      return 0.0;\n    })\n    .setOutput([m1.rows, m1.cols]);\n  return new Matrix(m1.rows, m1.cols, kernel() as number[][]);\n};\n\nexport const setOnes = (m1: Matrix): Matrix => {\n  const kernel = gpu\n    .createKernel(function () {\n      return 1.0;\n    })\n    .setOutput([m1.rows, m1.cols]);\n  return new Matrix(m1.rows, m1.cols, kernel() as number[][]);\n};\n\nexport const elementWiseMultiply = (m1: Matrix, m2: Matrix): Matrix => {\n  if (m1.rows !== m2.rows) {\n    throw new Error(\"ROWS number not equal.\");\n  }\n  if (m1.cols !== m2.cols) {\n    throw new Error(\"COLS number not equal.\");\n  }\n\n  const kernel = gpu\n    .createKernel(function (a, b) {\n      return a[this.thread.x][this.thread.y] * b[this.thread.x][this.thread.y];\n    })\n    .setOutput([m1.rows, m2.cols]);\n\n  return new Matrix(m1.rows, m2.cols, kernel(m1.data, m2.data) as number[][]);\n};\n\nexport const elementWiseMultiplyNumber = (m1: Matrix, num: number): Matrix => {\n  const kernel = gpu\n    .createKernel(function (a) {\n      return a[this.thread.x][this.thread.y] * this.constants.number;\n    })\n    .setOutput([m1.rows, m1.cols])\n    .setConstants({\n      number: num,\n    });\n\n  return new Matrix(m1.rows, m1.cols, kernel(m1.data) as number[][]);\n};\n\nexport const transpose = (m: Matrix): Matrix => {\n  const kernel = gpu\n    .createKernel(function (a) {\n      return a[this.thread.y][this.thread.x];\n    })\n    .setOutput([m.cols, m.rows]);\n\n  return new Matrix(m.cols, m.rows, kernel(m.data) as number[][]);\n};\n\nexport class ComputationGPU extends AbstractComputation {\n  constructor() {\n    super();\n\n    this.addKernel(\"multiply\", multiply);\n    this.addKernel(\"elementWiseAdd\", elementWiseAdd);\n    this.addKernel(\"elementWiseSubtract\", elementWiseSubtract);\n    this.addKernel(\"fillRandom\", fillRandom);\n    this.addKernel(\"setZeros\", setZeros);\n    this.addKernel(\"elementWiseMultiply\", elementWiseMultiply);\n    this.addKernel(\"elementWiseMultiplyNumber\", elementWiseMultiplyNumber);\n    this.addKernel(\"elementWiseDivide\", elementWiseDivide);\n    this.addKernel(\"elementWiseDivideNumber\", elementWiseDivideNumber);\n    this.addKernel(\"softmaxActivation\", softmaxActivation);\n    this.addKernel(\"softmaxLoss\", softmaxLoss);\n    this.addKernel(\"logisticActivation\", logisticActivation);\n    this.addKernel(\"logisticDerivative\", logisticDerivative);\n    this.addKernel(\"logisticLoss\", logisticLoss);\n    this.addKernel(\"tanhActivation\", tanhActivation);\n    this.addKernel(\"tanhDerivative\", tanhDerivative);\n    this.addKernel(\"reluActivation\", reluActivation);\n    this.addKernel(\"reluDerivative\", reluDerivative);\n    this.addKernel(\"softplusActivation\", softplusActivation);\n    this.addKernel(\"softplusDerivative\", softplusDerivative);\n    this.addKernel(\"penalty\", penalty);\n    this.addKernel(\"sqrt\", sqrt);\n    this.addKernel(\"purelinLoss\", purelinLoss);\n    this.addKernel(\"transpose\", transpose);\n  }\n}\n","import { AbstractComputation } from \"./abstract\";\nimport { ComputationGPU } from \"./computationgpu\";\nimport { ComputationCPU } from \"./computationcpu\";\nimport { setComputation } from \"./utils\";\n\nexport { AbstractComputation, ComputationGPU, ComputationCPU, setComputation };\n","import { AbstractComputation } from \"./abstract\";\nimport { ComputationGPU } from \"./computationgpu\";\n\nlet currentComputation: AbstractComputation = new ComputationGPU();\n\nexport const setComputation = (type: AbstractComputation): void => {\n  currentComputation = type;\n};\n\nexport const getComputation = (): AbstractComputation => {\n  return currentComputation;\n};\n","import { Matrix } from \"../math/matrix\";\n\nexport class Dataset {\n  public exampleSize = 0;\n  public numberOfExamples = 0;\n  public data: Matrix = null;\n\n  constructor(exampleSize: number, numberOfExamples: number, arr: string[][]) {\n    this.exampleSize = exampleSize;\n    this.numberOfExamples = numberOfExamples;\n    const data = [];\n\n    for (let example = 0; example < numberOfExamples; example += 1) {\n      data[example] = [];\n      for (let dataIndex = 0; dataIndex < exampleSize; dataIndex += 1) {\n        data[example][dataIndex] = arr[example][dataIndex].length\n          ? Number(arr[example][dataIndex])\n          : NaN;\n      }\n    }\n\n    this.data = new Matrix(this.exampleSize, this.numberOfExamples, data);\n  }\n\n  exampleAt(index: number): Matrix {\n    return this.data.col(index);\n  }\n\n  getNumberOfExamples(): number {\n    return this.numberOfExamples;\n  }\n\n  getBatch(offset: number, batchSize: number): Matrix {\n    return this.data.block(0, offset, this.data.rows, batchSize);\n  }\n}\n","import * as csvtojson from \"csvtojson\";\nimport { Dataset } from \"./dataset\";\n\nexport class DatasetBuilder {\n  static fromCSV(csvPath: string): Promise<Dataset> {\n    return new Promise((resolve) => {\n      csvtojson({\n        noheader: true,\n        output: \"csv\",\n      })\n        .fromFile(csvPath)\n        .then((arr) => {\n          const numberOfExamples = arr.length;\n          const exampleSize = arr[0].length;\n\n          const dataset = new Dataset(exampleSize, numberOfExamples, arr);\n          resolve(dataset);\n        });\n    });\n  }\n}\n","import { Dataset } from \"../dataset\";\n\nexport abstract class AbstractDatasetModifier {\n  protected dataset: Dataset = null;\n\n  constructor(dataset: Dataset) {\n    this.dataset = dataset;\n  }\n\n  apply(): Dataset {\n    for (\n      let example = 0;\n      example < this.dataset.getNumberOfExamples();\n      example += 1\n    ) {\n      this.applyToExample(example);\n    }\n\n    return this.dataset;\n  }\n\n  abstract applyToExample(example: number): void;\n}\n","import { AbstractDatasetModifier } from \"./abstract\";\n\nexport class CallbackDatabaseModifier extends AbstractDatasetModifier {\n  protected callback: Function = (example) => example;\n\n  applyToExample(example: number): void {\n    for (\n      let exampleIndex = 0;\n      exampleIndex < this.dataset.getNumberOfExamples();\n      exampleIndex += 1\n    ) {\n      const example = this.callback(this.dataset.exampleAt(exampleIndex));\n      for (let row = 0; row < this.dataset.data.data.rows; row += 1) {\n        this.dataset.data.data[row][exampleIndex] = example.data.data[row][0];\n      }\n    }\n  }\n\n  setCallback(callback: Function): CallbackDatabaseModifier {\n    this.callback = callback;\n    return this;\n  }\n}\n","import { CallbackDatabaseModifier } from \"./callback\";\nimport { MinMaxScalingDatabaseModifier } from \"./minmaxscaling\";\nimport { MissingDataScalingDatabaseModifier } from \"./missingdata\";\n\nexport {\n  CallbackDatabaseModifier,\n  MissingDataScalingDatabaseModifier,\n  MinMaxScalingDatabaseModifier,\n};\n","import { AbstractDatasetModifier } from \"./abstract\";\nimport { gpu } from \"../../computation/computationgpu\";\n\nexport class MinMaxScalingDatabaseModifier extends AbstractDatasetModifier {\n  applyToExample(example: number): void {\n    let min = Infinity;\n    let max = -Infinity;\n\n    for (\n      let exampleIndex = 0;\n      exampleIndex < this.dataset.getNumberOfExamples();\n      exampleIndex += 1\n    ) {\n      const example = this.dataset.exampleAt(exampleIndex);\n      for (let row = 0; row < example.rows; row += 1) {\n        min = Math.min(example.data[row][0]);\n        max = Math.max(example.data[row][0]);\n      }\n    }\n\n    const kernel = gpu\n      .createKernel(function (a) {\n        return (\n          (a[this.thread.x][this.thread.y] - this.constants.min) /\n          (this.constants.max - this.constants.min)\n        );\n      })\n      .setOutput([this.dataset.data.data.rows, this.dataset.data.data.cols])\n      .setConstants({\n        min,\n        max,\n      });\n    this.dataset.data.data = kernel(this.dataset.data.data);\n  }\n}\n","import { AbstractDatasetModifier } from \"./abstract\";\n\nexport class MissingDataScalingDatabaseModifier extends AbstractDatasetModifier {\n  protected modificationType = \"mean\";\n\n  applyToExample(example: number): void {\n    const rowsToFill = [];\n    let correctExamplesCount = 0;\n    let sum = 0;\n    let valueToFill = 0;\n\n    for (\n      let exampleIndex = 0;\n      exampleIndex < this.dataset.getNumberOfExamples();\n      exampleIndex += 1\n    ) {\n      const example = this.dataset.exampleAt(exampleIndex);\n      for (let row = 0; row < example.data.rows; row += 1) {\n        if (isNaN(example[row][0])) {\n          rowsToFill.push({\n            row,\n            col: example,\n          });\n        } else {\n          sum += example[row][0];\n          correctExamplesCount++;\n        }\n      }\n    }\n\n    if (this.modificationType === \"mean\") {\n      valueToFill = sum / correctExamplesCount;\n    }\n\n    rowsToFill.forEach(({ row, col }) => {\n      this.dataset.data.data[row][col] = valueToFill;\n    });\n  }\n\n  setModificationType(type: string): MissingDataScalingDatabaseModifier {\n    this.modificationType = type;\n    return this;\n  }\n}\n","import { Dataset } from \"./dataset\";\nimport { DatasetBuilder } from \"./datasetbuilder\";\n\nexport { Dataset, DatasetBuilder };\n","import { Matrix } from \"../math/matrix\";\nimport { Dimension, Layers } from \"../types\";\nimport { AbstractBackPropagation } from \"./backpropagation/abstract\";\nimport { getComputation } from \"../computation/utils\";\n\nabstract class AbstractLayer {\n  public W: Matrix;\n  public b: Matrix;\n  public A: Matrix;\n  public Z: Matrix;\n  public gW: Matrix;\n  public gb: Matrix;\n  public vW: Matrix;\n  public cW: Matrix;\n  public vb: Matrix;\n  public cb: Matrix;\n\n  protected width = 0;\n  protected height = 0;\n  protected depth = 0;\n  protected previousLayer: Layers = null;\n  protected backPropagation: AbstractBackPropagation = null;\n\n  constructor() {\n    this.W = new Matrix();\n    this.b = new Matrix();\n    this.A = new Matrix();\n    this.Z = new Matrix();\n    this.gW = new Matrix();\n    this.gb = new Matrix();\n    this.vW = new Matrix();\n    this.cW = new Matrix();\n    this.vb = new Matrix();\n    this.cb = new Matrix();\n  }\n\n  setBackPropagation(backPropagation: AbstractBackPropagation): AbstractLayer {\n    this.backPropagation = backPropagation;\n    return this;\n  }\n\n  getBackPropagation(): AbstractBackPropagation {\n    return this.backPropagation;\n  }\n\n  forward(input: Matrix): Matrix {\n    this.Z = getComputation().execute(\n      \"elementWiseAdd\",\n      getComputation().execute(\"multiply\", this.W, input),\n      this.b.replicate(1, input.cols)\n    );\n    this.A = this.activation(this.Z);\n    return this.A;\n  }\n\n  setWidth(value: number): AbstractLayer {\n    this.width = value;\n\n    return this;\n  }\n\n  getWidth(): number {\n    return this.width;\n  }\n\n  setHeight(value: number): AbstractLayer {\n    this.height = value;\n\n    return this;\n  }\n\n  getHeight(): number {\n    return this.height;\n  }\n\n  setDepth(value: number): AbstractLayer {\n    this.depth = value;\n\n    return this;\n  }\n\n  getDepth(): number {\n    return this.depth;\n  }\n\n  abstract getOutputWidth(): number;\n\n  abstract getOutputHeight(): number;\n\n  abstract getOutputDepth(): number;\n\n  abstract configure(): number;\n\n  abstract is1D(): boolean;\n\n  abstract is3D(): boolean;\n\n  transition(previousLayer: Layers): AbstractLayer {\n    this.previousLayer = previousLayer;\n    return this;\n  }\n\n  abstract setSize(dimension: Dimension): AbstractLayer;\n\n  abstract getSize(): number;\n\n  abstract activation(value: Matrix): Matrix;\n\n  abstract derivative(value: Matrix): Matrix;\n\n  abstract getType(): string;\n\n  abstract loss(output: Matrix, predictions: Matrix): number;\n\n  abstract error(m: number): number;\n\n  penalty(): number {\n    return getComputation().execute(\"penalty\", this.W);\n  }\n}\n\nexport { AbstractLayer };\n","import { AbstractLayer } from \"./abstract\";\nimport { Dimension, Layers } from \"../types\";\nimport { getComputation } from \"../computation/utils\";\n\nabstract class AbstractLayer1D extends AbstractLayer {\n  protected depth = 1;\n\n  configure(): void {\n    this.W.resize(this.height, this.width);\n    this.W = getComputation().execute(\"fillRandom\", this.W, this.width);\n\n    this.b.resize(this.height, 1);\n    this.b = getComputation().execute(\"fillRandom\", this.b, this.width);\n\n    this.gW.resize(this.height, this.width);\n    this.gW = getComputation().execute(\"setZeros\", this.gW);\n\n    this.gb.resize(this.height, 1);\n    this.gb = getComputation().execute(\"setZeros\", this.gb);\n\n    this.cW.resize(this.height, this.width);\n    this.cW = getComputation().execute(\"setZeros\", this.cW);\n\n    this.cb.resize(this.height, 1);\n    this.cb = getComputation().execute(\"setZeros\", this.cb);\n\n    this.vW.resize(this.height, this.width);\n    this.vW = getComputation().execute(\"setZeros\", this.vW);\n\n    this.vb.resize(this.height, 1);\n    this.vb = getComputation().execute(\"setZeros\", this.cb);\n  }\n\n  is1D(): boolean {\n    return true;\n  }\n\n  is3D(): boolean {\n    return false;\n  }\n\n  transition(previousLayer: Layers): AbstractLayer1D {\n    if (previousLayer.is1D()) {\n      this.setWidth(previousLayer.getSize());\n    } else if (previousLayer.is3D()) {\n      this.setWidth(\n        previousLayer.getOutputWidth() *\n          previousLayer.getOutputHeight() *\n          previousLayer.getOutputDepth()\n      );\n    }\n\n    super.transition(previousLayer);\n\n    return this;\n  }\n\n  setSize(value: Dimension): AbstractLayer1D {\n    this.setHeight(value[0]);\n\n    return this;\n  }\n\n  getSize(): number {\n    return this.height;\n  }\n\n  getOutputWidth(): number {\n    return this.width;\n  }\n\n  getOutputHeight(): number {\n    return this.height;\n  }\n\n  getOutputDepth(): number {\n    return 1;\n  }\n}\n\nexport { AbstractLayer1D };\n","import { AbstractLayer } from \"./abstract\";\nimport { Dimension } from \"../types\";\n\nabstract class AbstractLayer3D extends AbstractLayer {\n  configure(): void {\n    // do nothing\n  }\n\n  is1D(): boolean {\n    return false;\n  }\n\n  is3D(): boolean {\n    return true;\n  }\n\n  transition(previousLayer: AbstractLayer): AbstractLayer3D {\n    if (previousLayer.is3D()) {\n      this.setSize([\n        previousLayer.getOutputWidth(),\n        previousLayer.getOutputHeight(),\n        previousLayer.getOutputDepth(),\n      ]);\n    }\n\n    super.transition(previousLayer);\n\n    return this;\n  }\n\n  setSize(dimension: Dimension): AbstractLayer3D {\n    this.setWidth(dimension[0]);\n    this.setHeight(dimension[1]);\n    this.setDepth(dimension[2]);\n\n    return this;\n  }\n\n  getSize(): Dimension {\n    return [this.getWidth(), this.getHeight(), this.getDepth()];\n  }\n}\n\nexport { AbstractLayer3D };\n","import { Layers } from \"../../types\";\nimport { Matrix } from \"../../math/matrix\";\n\nexport abstract class AbstractBackPropagation {\n  protected layer: Layers = null;\n  protected previousLayer: Layers = null;\n\n  constructor(layer: Layers, previousLayer: Layers) {\n    this.layer = layer;\n    this.previousLayer = previousLayer;\n  }\n\n  abstract propagate(\n    input: Matrix,\n    numberOfExamples: number,\n    regularization: number,\n    sigma: Matrix\n  ): Matrix;\n}\n","import { AbstractBackPropagation } from \"./abstract\";\nimport { Matrix } from \"../../math/matrix\";\nimport { getComputation } from \"../../computation/utils\";\n\nexport class Backpropagation1Dto1D extends AbstractBackPropagation {\n  propagate(\n    input: Matrix,\n    numberOfExamples: number,\n    regularization: number,\n    sigma: Matrix\n  ): Matrix {\n    const previousActivations =\n      this.previousLayer !== null ? this.previousLayer.A : input;\n    const delta = getComputation().execute(\n      \"multiply\",\n      sigma,\n      previousActivations.transpose().conjugate()\n    );\n    this.layer.gW = getComputation().execute(\n      \"elementWiseAdd\",\n      getComputation().execute(\n        \"elementWiseDivideNumber\",\n        delta,\n        numberOfExamples\n      ),\n      getComputation().execute(\n        \"elementWiseMultiplyNumber\",\n        this.layer.W,\n        regularization / numberOfExamples\n      )\n    );\n    this.layer.gb = getComputation().execute(\n      \"elementWiseDivideNumber\",\n      sigma.rowwiseSum(),\n      numberOfExamples\n    );\n    if (this.previousLayer !== null) {\n      return getComputation().execute(\n        \"elementWiseMultiply\",\n        getComputation().execute(\"multiply\", this.layer.W.transpose(), sigma),\n        this.previousLayer.derivative(this.previousLayer.A)\n      );\n    }\n    return new Matrix();\n  }\n}\n","import { AbstractBackPropagation } from \"./abstract\";\nimport { Matrix } from \"../../math/matrix\";\n\nexport class Backpropagation3Dto1D extends AbstractBackPropagation {\n  propagate(\n    input: Matrix,\n    numberOfExamples: number,\n    regularization: number,\n    sigma: Matrix\n  ): Matrix {\n    return sigma;\n  }\n}\n","import { AbstractBackPropagation } from \"./abstract\";\nimport { Matrix } from \"../../math/matrix\";\nimport { Layers3D } from \"../../types\";\nimport { getComputation } from \"../../computation/utils\";\n\nexport class BackpropagationToConv extends AbstractBackPropagation {\n  protected previousLayer: Layers3D = null;\n\n  propagate(\n    input: Matrix,\n    numberOfExamples: number,\n    regularization: number,\n    sigma: Matrix\n  ): Matrix {\n    const previousLayer = this.previousLayer;\n\n    const padding = previousLayer.getPadding();\n    const stride = previousLayer.getStride();\n    const filterSize = previousLayer.getFilterSize();\n    const outputWidth = previousLayer.getOutputWidth();\n    const outputHeight = previousLayer.getOutputHeight();\n    const outputDepth = previousLayer.getOutputDepth();\n    const inputWidth = previousLayer.getWidth();\n    const inputHeight = previousLayer.getHeight();\n    const inputDepth = previousLayer.getDepth();\n\n    const tmpResult = getComputation().execute(\n      \"setZeros\",\n      new Matrix(\n        (inputWidth + 2 * padding) * (inputHeight + 2 * padding) * inputDepth,\n        numberOfExamples\n      )\n    );\n\n    const result = new Matrix(\n      inputWidth * inputHeight * inputDepth,\n      numberOfExamples\n    );\n\n    const aPrev = previousLayer.derivative(previousLayer.A);\n\n    previousLayer.gW = getComputation().execute(\"setZeros\", previousLayer.gW);\n    previousLayer.gb = getComputation().execute(\"setZeros\", previousLayer.gb);\n\n    for (let m = 0; m < numberOfExamples; m++) {\n      for (let c = 0; c < outputDepth; c++) {\n        for (let h = 0; h < outputHeight; h++) {\n          for (let w = 0; w < outputWidth; w++) {\n            const vertStart = stride * h;\n            const vertEnd = vertStart + filterSize;\n            const horizStart = stride * w;\n            const horizEnd = horizStart + filterSize;\n\n            // filter loop\n            for (let d = 0; d < inputDepth; d++) {\n              for (\n                let y = 0, vertical = vertStart, verticalPad = -padding;\n                y < filterSize;\n                y++, vertical++, verticalPad++\n              ) {\n                for (\n                  let x = 0, horizontal = horizStart, horizontalPad = -padding;\n                  x < filterSize;\n                  x++, horizontal++, horizontalPad++\n                ) {\n                  tmpResult[\n                    d *\n                      (inputWidth + 2 * padding) *\n                      (inputHeight + 2 * padding) +\n                      vertical * (inputWidth + 2 * padding) +\n                      horizontal\n                  ][m] +=\n                    previousLayer.W.data[c][\n                      d * filterSize * filterSize + y * filterSize + x\n                    ] *\n                    sigma[c * outputWidth * outputHeight + h * outputWidth + w][\n                      m\n                    ];\n\n                  let z = 0;\n                  if (padding == 0) {\n                    z =\n                      previousLayer.Z.data[\n                        d * inputWidth * inputHeight +\n                          vertical * inputWidth +\n                          horizontal\n                      ][m];\n                  } else {\n                    if (\n                      verticalPad >= 0 &&\n                      horizontalPad >= 0 &&\n                      verticalPad < inputHeight &&\n                      horizontalPad < inputWidth\n                    ) {\n                      z =\n                        previousLayer.Z.data[\n                          d * inputWidth * inputHeight +\n                            verticalPad * inputWidth +\n                            horizontalPad\n                        ][m];\n                    }\n                  }\n\n                  previousLayer.gW.data[c][\n                    d * filterSize * filterSize + y * filterSize + x\n                  ] +=\n                    (z *\n                      sigma[\n                        c * (outputWidth * outputHeight) + h * outputWidth + w\n                      ][m]) /\n                    numberOfExamples;\n                }\n              }\n            }\n\n            previousLayer.gb.data[c][0] +=\n              sigma[c * (outputWidth * outputHeight) + h * outputWidth + w][m] /\n              numberOfExamples;\n          }\n        }\n      }\n\n      if (padding > 0) {\n        // unpad\n        for (let c = 0; c < inputDepth; c++) {\n          for (let h = -padding, y = 0; h < inputHeight + padding; h++, y++) {\n            for (let w = -padding, x = 0; w < inputWidth + padding; w++, x++) {\n              if (w >= 0 && h >= 0 && w < inputWidth && h < inputHeight) {\n                result[c * inputWidth * inputHeight + h * inputWidth + w][m] =\n                  tmpResult[\n                    c *\n                      (inputWidth + 2 * padding) *\n                      (inputHeight + 2 * padding) +\n                      y * (inputWidth + 2 * padding) +\n                      x\n                  ][m];\n              }\n            }\n          }\n        }\n      }\n    }\n\n    if (padding > 0) {\n      return result;\n    }\n\n    return tmpResult;\n  }\n}\n","import { AbstractBackPropagation } from \"./abstract\";\nimport { Matrix } from \"../../math/matrix\";\nimport { Layers3D } from \"../../types\";\nimport { getComputation } from \"../../computation/utils\";\n\nexport class BackpropagationToMaxPool extends AbstractBackPropagation {\n  protected previousLayer: Layers3D = null;\n\n  propagate(\n    input: Matrix,\n    numberOfExamples: number,\n    regularization: number,\n    sigma: Matrix\n  ): Matrix {\n    const prevLayer = this.previousLayer;\n    const result = getComputation().execute(\n      \"setZeros\",\n      new Matrix(prevLayer.Z.rows, prevLayer.Z.cols)\n    );\n\n    const filterSize = prevLayer.getFilterSize();\n    const stride = prevLayer.getStride();\n    const inputWidth = prevLayer.getWidth();\n    const inputHeight = prevLayer.getHeight();\n    const inputDepth = prevLayer.getDepth();\n    const outputWidth = prevLayer.getOutputWidth();\n    const outputHeight = prevLayer.getOutputHeight();\n    const outputDepth = prevLayer.getOutputDepth();\n\n    for (let m = 0; m < numberOfExamples; m++) {\n      for (let c = 0; c < outputDepth; c++) {\n        for (let h = 0; h < outputHeight; h++) {\n          for (let w = 0; w < outputWidth; w++) {\n            const vertStart = stride * h;\n            const vertEnd = vertStart + filterSize;\n            const horizStart = stride * w;\n            const horizEnd = horizStart + filterSize;\n\n            let _max = -Infinity;\n            const inputOffset = inputHeight * inputWidth * c;\n            const outputOffset = outputHeight * outputWidth * c;\n            let maxX = 0;\n            let maxY = 0;\n\n            for (let y = 0, vStart = vertStart; y < filterSize; y++, vStart++) {\n              for (\n                let x = 0, hStart = horizStart;\n                x < filterSize;\n                x++, hStart++\n              ) {\n                if (\n                  _max <\n                  prevLayer.Z.data[inputOffset + vStart * inputWidth + hStart][\n                    m\n                  ]\n                ) {\n                  _max =\n                    prevLayer.Z.data[\n                      inputOffset + vStart * inputWidth + hStart\n                    ][m];\n                  maxX = hStart;\n                  maxY = vStart;\n                }\n              }\n            }\n\n            result.data[inputOffset + maxY * inputWidth + maxX][m] =\n              sigma[outputOffset + h * outputWidth + w][m];\n          }\n        }\n      }\n    }\n\n    return result;\n  }\n}\n","import { Layers, LayerType } from \"../../types\";\nimport { Backpropagation1Dto1D } from \"./backpropagation1dto1d\";\nimport { Backpropagation3Dto1D } from \"./backpropagationto3dto1d\";\nimport { BackpropagationToMaxPool } from \"./backpropagationtomaxpool\";\nimport { BackpropagationToConv } from \"./backpropagationtoconv\";\nimport { AbstractBackPropagation } from \"./abstract\";\n\nexport class BackpropagationFactory {\n  static create(previousLayer: Layers, layer: Layers): AbstractBackPropagation {\n    if (previousLayer == null) {\n      if (layer.is1D()) {\n        return new Backpropagation1Dto1D(layer, previousLayer);\n      } else if (layer.getType() == LayerType.conv) {\n        return new Backpropagation3Dto1D(layer, previousLayer);\n      }\n    } else {\n      if (previousLayer.getType() == LayerType.maxpool) {\n        return new BackpropagationToMaxPool(layer, previousLayer);\n      } else if (previousLayer.getType() == LayerType.conv) {\n        return new BackpropagationToConv(layer, previousLayer);\n      } else if (\n        previousLayer.is1D() ||\n        previousLayer.getType() == LayerType.fullyconnected\n      ) {\n        return new Backpropagation1Dto1D(layer, previousLayer);\n      }\n    }\n    return null;\n  }\n}\n","import { Matrix } from \"../math/matrix\";\nimport { im2col } from \"../math/math\";\nimport { LayerType } from \"../types\";\nimport { AbstractLayer3D } from \"./abstract3d\";\nimport { getComputation } from \"../computation/utils\";\n\nclass ConvLayer extends AbstractLayer3D {\n  protected numFilters = 32;\n  protected filterSize = 4;\n  protected padding = 1;\n  protected stride = 1;\n\n  configure(): void {\n    this.W.resize(\n      this.numFilters,\n      this.filterSize * this.filterSize * this.depth\n    );\n    this.W = getComputation().execute(\n      \"fillRandom\",\n      this.W,\n      this.width * this.height * this.depth\n    );\n\n    this.b.resize(this.numFilters, 1);\n    this.b = getComputation().execute(\"fillRandom\", this.b, 0.01);\n\n    this.gW.resize(\n      this.numFilters,\n      this.filterSize * this.filterSize * this.depth\n    );\n    this.gW = getComputation().execute(\"setZeros\", this.gW);\n\n    this.gb.resize(this.numFilters, 1);\n    this.gb = getComputation().execute(\"setZeros\", this.gb);\n\n    this.cW.resize(\n      this.numFilters,\n      this.filterSize * this.filterSize * this.depth\n    );\n    this.cW = getComputation().execute(\"setZeros\", this.gb);\n\n    this.cb.resize(this.numFilters, 1);\n    this.cb = getComputation().execute(\"setZeros\", this.cb);\n\n    this.vW.resize(\n      this.numFilters,\n      this.filterSize * this.filterSize * this.depth\n    );\n    this.vW = getComputation().execute(\"setZeros\", this.vW);\n\n    this.vb.resize(this.numFilters, 1);\n    this.vb = getComputation().execute(\"setZeros\", this.vb);\n  }\n\n  getOutputHeight(): number {\n    return (this.width - this.filterSize + 2 * this.padding) / this.stride + 1;\n  }\n\n  getOutputWidth(): number {\n    return (this.height - this.filterSize + 2 * this.padding) / this.stride + 1;\n  }\n\n  getOutputDepth(): number {\n    return this.numFilters;\n  }\n\n  setFilterSize(size: number): ConvLayer {\n    this.filterSize = size;\n    return this;\n  }\n\n  getFilterSize(): number {\n    return this.filterSize;\n  }\n\n  setNumFilters(numFilters: number): ConvLayer {\n    this.numFilters = numFilters;\n    return this;\n  }\n\n  getNumFilters(): number {\n    return this.numFilters;\n  }\n\n  setPadding(padding: number): ConvLayer {\n    this.padding = padding;\n    return this;\n  }\n\n  getPadding(): number {\n    return this.padding;\n  }\n\n  setStride(stride: number): ConvLayer {\n    this.stride = stride;\n    return this;\n  }\n\n  getStride(): number {\n    return this.stride;\n  }\n\n  forward(input: Matrix): Matrix {\n    const result = new Matrix(\n      this.getOutputWidth() * this.getOutputHeight() * this.getOutputDepth(),\n      input.cols\n    );\n\n    for (let i = 0; i < input.cols; i += 1) {\n      const conv = im2col(\n        input.col(i),\n        this.depth,\n        this.height,\n        this.width,\n        this.filterSize,\n        this.filterSize,\n        this.padding,\n        this.padding,\n        this.stride,\n        this.stride\n      );\n      const tmp = (this.Z = getComputation()\n        .execute(\n          \"elementWiseAdd\",\n          getComputation().execute(\"multiply\", this.W, conv),\n          this.b.replicate(1, input.cols)\n        )\n        .rollToColMatrix());\n\n      result.setCol(i, tmp);\n    }\n\n    this.Z = result;\n    this.activation(this.Z);\n\n    return this.A;\n  }\n\n  activation(m: Matrix): Matrix {\n    return getComputation().execute(\"reluActivation\", m);\n  }\n\n  derivative(m: Matrix): Matrix {\n    return getComputation().execute(\"reluDerivative\", m);\n  }\n\n  getType(): LayerType {\n    return LayerType.conv;\n  }\n\n  loss(output: Matrix, predictions: Matrix): number {\n    throw new Error(\"Unsupported.\");\n  }\n\n  error(m: number): number {\n    throw new Error(\"Unsupported.\");\n  }\n}\n\nexport { ConvLayer };\n","import { Dimension, LayerType } from \"../types\";\nimport { ConvLayer } from \"./conv\";\n\nclass FullyConnectedLayer extends ConvLayer {\n  configure(): void {\n    // do nothing\n  }\n\n  transition(previousLayer: FullyConnectedLayer): FullyConnectedLayer {\n    if (previousLayer.is3D()) {\n      if (previousLayer.getType() == LayerType.maxpool) {\n        this.filterSize = previousLayer.getOutputWidth();\n        this.padding = 0;\n        this.stride = 1;\n        this.width = previousLayer.getOutputWidth();\n        this.height = previousLayer.getOutputHeight();\n        this.depth = previousLayer.getOutputDepth();\n        this.numFilters =\n          previousLayer.getOutputWidth() *\n          previousLayer.getOutputHeight() *\n          previousLayer.getOutputDepth();\n      } else {\n        throw new Error(\n          \"Invalid usage. Cannot fully connect with previous non maxpool layer.\"\n        );\n      }\n    } else {\n      throw new Error(\n        \"Invalid usage. Cannot fully connect with previous 1D layer.\"\n      );\n    }\n\n    return this;\n  }\n\n  setSize(dimension: Dimension): FullyConnectedLayer {\n    throw new Error(\"Unsupported\");\n  }\n\n  setFilterSize(filterSize: number): FullyConnectedLayer {\n    throw new Error(\"Unsupported\");\n  }\n\n  setStride(stride: number): FullyConnectedLayer {\n    throw new Error(\"Unsupported\");\n  }\n\n  setPadding(padding: number): FullyConnectedLayer {\n    throw new Error(\"Unsupported\");\n  }\n\n  setWidth(value: number): FullyConnectedLayer {\n    throw new Error(\"Unsupported\");\n  }\n\n  setHeight(value: number): FullyConnectedLayer {\n    throw new Error(\"Unsupported\");\n  }\n\n  setDepth(value: number): FullyConnectedLayer {\n    throw new Error(\"Unsupported\");\n  }\n\n  setNumFilters(value: number): FullyConnectedLayer {\n    throw new Error(\"Unsupported\");\n  }\n}\n\nexport { FullyConnectedLayer };\n","import { AbstractLayer } from \"./abstract\";\nimport { SoftmaxLayer } from \"./softmax\";\nimport { LogisticLayer } from \"./logistic\";\nimport { TanhLayer } from \"./tanh\";\nimport { ReluLayer } from \"./relu\";\nimport { SoftplusLayer } from \"./softplus\";\nimport { ConvLayer } from \"./conv\";\nimport { FullyConnectedLayer } from \"./fullyconnected\";\nimport { MaxPoolLayer } from \"./maxpool\";\n\nexport {\n  AbstractLayer,\n  SoftmaxLayer,\n  LogisticLayer,\n  TanhLayer,\n  ReluLayer,\n  SoftplusLayer,\n  ConvLayer,\n  FullyConnectedLayer,\n  MaxPoolLayer,\n};\n","import { Matrix } from \"../math/matrix\";\nimport { LayerType } from \"../types\";\nimport { AbstractLayer1D } from \"./abstract1d\";\nimport { getComputation } from \"../computation/utils\";\n\nclass LogisticLayer extends AbstractLayer1D {\n  activation(m: Matrix): Matrix {\n    return getComputation().execute(\"logisticActivation\", m);\n  }\n\n  derivative(m: Matrix): Matrix {\n    return getComputation().execute(\"logisticDerivative\", m);\n  }\n\n  getType(): LayerType {\n    return LayerType.logistic;\n  }\n\n  loss(output: Matrix, predictions: Matrix): number {\n    return getComputation().execute(\"logisticLoss\", output, predictions);\n  }\n\n  error(m: number): number {\n    return -1.0 / m;\n  }\n}\n\nexport { LogisticLayer };\n","import { Matrix } from \"../math/matrix\";\nimport { maxpool } from \"../math/math\";\nimport { LayerType } from \"../types\";\nimport { AbstractLayer3D } from \"./abstract3d\";\nimport { BackpropagationToMaxPool } from \"./backpropagation/backpropagationtomaxpool\";\n\nclass MaxPoolLayer extends AbstractLayer3D {\n  filterSize: number;\n  stride: number;\n\n  configure(): void {\n    this.backPropagation = new BackpropagationToMaxPool(\n      this,\n      this.previousLayer\n    );\n  }\n\n  getOutputHeight(): number {\n    return (this.height - this.filterSize) / this.stride + 1;\n  }\n\n  getOutputWidth(): number {\n    return (this.width - this.filterSize) / this.stride + 1;\n  }\n\n  getOutputDepth(): number {\n    return this.depth;\n  }\n\n  setFilterSize(size: number): MaxPoolLayer {\n    this.filterSize = size;\n    return this;\n  }\n\n  getFilterSize(): number {\n    return this.filterSize;\n  }\n\n  setStride(stride: number): MaxPoolLayer {\n    this.stride = stride;\n    return this;\n  }\n\n  getStride(): number {\n    return this.stride;\n  }\n\n  forward(input: Matrix): Matrix {\n    const result = new Matrix(\n      this.getOutputWidth() * this.getOutputHeight() * this.getOutputDepth(),\n      input.cols\n    );\n\n    for (let i = 0; i < input.cols; i += 1) {\n      const pool = maxpool(\n        input.col(i),\n        this.depth,\n        this.height,\n        this.width,\n        this.filterSize,\n        this.filterSize,\n        this.stride,\n        this.stride\n      ).rollToColMatrix();\n\n      result.setCol(i, pool);\n    }\n\n    this.Z = result;\n    this.activation(this.Z);\n\n    return this.A;\n  }\n\n  activation(m: Matrix): Matrix {\n    throw new Error(\"No activation for MAXPOOL layer.\");\n  }\n\n  derivative(m: Matrix): Matrix {\n    throw new Error(\"No derivative for MAXPOOL layer.\");\n  }\n\n  getType(): LayerType {\n    return LayerType.maxpool;\n  }\n\n  loss(output: Matrix, predictions: Matrix): number {\n    throw new Error(\"Unsupported.\");\n  }\n\n  error(m: number): number {\n    throw new Error(\"Unsupported.\");\n  }\n}\n\nexport { MaxPoolLayer };\n","import { Matrix } from \"../math/matrix\";\nimport { LayerType } from \"../types\";\nimport { AbstractLayer1D } from \"./abstract1d\";\nimport { getComputation } from \"../computation/utils\";\n\nclass ReluLayer extends AbstractLayer1D {\n  activation(m: Matrix): Matrix {\n    return getComputation().execute(\"reluActivation\", m);\n  }\n\n  derivative(m: Matrix): Matrix {\n    return getComputation().execute(\"reluDerivative\", m);\n  }\n\n  getType(): LayerType {\n    return LayerType.relu;\n  }\n\n  loss(output: Matrix, predictions: Matrix): number {\n    return 0.0; // todo\n  }\n\n  error(m: number): number {\n    return 0.0; // todo\n  }\n}\n\nexport { ReluLayer };\n","import { Matrix } from \"../math/matrix\";\nimport { LayerType } from \"../types\";\nimport { AbstractLayer1D } from \"./abstract1d\";\nimport { getComputation } from \"../computation/utils\";\n\nclass SoftmaxLayer extends AbstractLayer1D {\n  activation(m: Matrix): Matrix {\n    return getComputation().execute(\"softmaxActivation\", m);\n  }\n\n  derivative(m: Matrix): Matrix {\n    throw new Error(\"Unsupported usage.\");\n  }\n\n  getType(): LayerType {\n    return LayerType.softmax;\n  }\n\n  loss(output: Matrix, predictions: Matrix): number {\n    return getComputation().execute(\"softmaxLoss\", output, predictions);\n  }\n\n  error(m: number): number {\n    return -1.0 / m;\n  }\n}\n\nexport { SoftmaxLayer };\n","import { Matrix } from \"../math/matrix\";\nimport { LayerType } from \"../types\";\nimport { AbstractLayer1D } from \"./abstract1d\";\nimport { getComputation } from \"../computation/utils\";\n\nclass SoftplusLayer extends AbstractLayer1D {\n  activation(m: Matrix): Matrix {\n    return getComputation().execute(\"softplusActivation\", m);\n  }\n\n  derivative(m: Matrix): Matrix {\n    return getComputation().execute(\"softplusDerivative\", m);\n  }\n\n  getType(): LayerType {\n    return LayerType.softplus;\n  }\n\n  loss(output: Matrix, predictions: Matrix): number {\n    return 0.0; // todo\n  }\n\n  error(m: number): number {\n    return 0.0; // todo\n  }\n}\n\nexport { SoftplusLayer };\n","import { Matrix } from \"../math/matrix\";\nimport { LayerType } from \"../types\";\nimport { AbstractLayer1D } from \"./abstract1d\";\nimport { getComputation } from \"../computation/utils\";\n\nclass TanhLayer extends AbstractLayer1D {\n  activation(m: Matrix): Matrix {\n    return getComputation().execute(\"tanhActivation\", m);\n  }\n\n  derivative(m: Matrix): Matrix {\n    return getComputation().execute(\"tanhDerivative\", m);\n  }\n\n  getType(): LayerType {\n    return LayerType.tanh;\n  }\n\n  loss(output: Matrix, predictions: Matrix): number {\n    return 0.0; // todo\n  }\n\n  error(m: number): number {\n    return 0.0; // todo\n  }\n}\n\nexport { TanhLayer };\n","import { Matrix } from \"./matrix\";\nimport { getComputation } from \"../computation/utils\";\n\nexport const im2col = (\n  input: Matrix,\n  channels: number,\n  height: number,\n  width: number,\n  kernel_h: number,\n  kernel_w: number,\n  pad_h: number,\n  pad_w: number,\n  stride_h: number,\n  stride_w: number\n): Matrix => {\n  const rows = kernel_w * kernel_h * channels;\n  const cols =\n    ((width - kernel_w + 2 * pad_w) / stride_w + 1) *\n    ((height - kernel_h + 2 * pad_h) / stride_h + 1);\n  let currentResultCol = 0;\n\n  const result = getComputation().execute(\"setZeros\", new Matrix(rows, cols));\n\n  for (\n    let boundingY = -pad_h;\n    boundingY + kernel_h <= height + pad_h;\n    boundingY += stride_h\n  ) {\n    for (\n      let boundingX = -pad_w;\n      boundingX + kernel_w <= width + pad_w;\n      boundingX += stride_w\n    ) {\n      let currentResultRow = 0;\n      for (let channel = 0; channel < channels; channel++) {\n        const inputOffset = height * width * channel;\n        for (let y = 0; y < kernel_h; y++) {\n          for (let x = 0; x < kernel_w; x++) {\n            if (\n              boundingY + y >= 0 &&\n              boundingX + x >= 0 &&\n              boundingX + x < width &&\n              boundingY + y < height\n            ) {\n              result.data[currentResultRow][currentResultCol] =\n                input.data[\n                  (y + boundingY) * width + boundingX + x + inputOffset\n                ][0];\n            }\n            currentResultRow++;\n          }\n        }\n      }\n      currentResultCol++;\n    }\n  }\n  return result;\n};\n\nexport const maxpool = (\n  input: Matrix,\n  channels: number,\n  height: number,\n  width: number,\n  kernel_h: number,\n  kernel_w: number,\n  stride_h: number,\n  stride_w: number\n): Matrix => {\n  const resultWidth = (width - kernel_w) / stride_w + 1;\n  const resultHeight = (height - kernel_h) / stride_h + 1;\n  const resultDepth = channels;\n\n  let currentResultCol = 0;\n  const result = getComputation().execute(\n    \"setZeros\",\n    new Matrix(resultWidth * resultHeight * resultDepth, 1)\n  );\n\n  for (\n    let boundingY = 0;\n    boundingY + kernel_h <= height;\n    boundingY += stride_h\n  ) {\n    for (\n      let boundingX = 0;\n      boundingX + kernel_w <= width;\n      boundingX += stride_w\n    ) {\n      for (let channel = 0; channel < channels; channel++) {\n        let _max = -Infinity;\n        const inputOffset = height * width * channel;\n        const outputOffset = resultWidth * resultHeight * channel;\n        for (let y = 0; y < kernel_h; y++) {\n          for (let x = 0; x < kernel_w; x++) {\n            _max = Math.max(\n              _max,\n              input.data[\n                inputOffset + (y + boundingY) * width + boundingX + x\n              ][0]\n            );\n          }\n        }\n        result.data[outputOffset + currentResultCol][0] = _max;\n      }\n      currentResultCol++;\n    }\n  }\n  return new Matrix();\n};\n","import { getComputation } from \"../computation/utils\";\n\nexport class Matrix {\n  public rows = 0;\n  public cols = 0;\n  public data = null;\n\n  constructor(rows = 0, cols = 0, data: number[][] = null) {\n    this.resize(rows, cols);\n    if (data) {\n      this.generateData(data);\n    }\n  }\n\n  resize(rows: number, cols: number): Matrix {\n    this.rows = rows;\n    this.cols = cols;\n    this.data = [];\n    for (let row = 0; row < this.rows; row += 1) {\n      this.data[row] = new Array(this.cols);\n    }\n\n    return this;\n  }\n\n  generateData(arr: number[][]): Matrix {\n    this.data = [];\n    for (let row = 0; row < this.rows; row += 1) {\n      this.data[row] = new Array(this.cols);\n    }\n    for (let col = 0; col < this.cols; col += 1) {\n      for (let row = 0; row < this.rows; row += 1) {\n        if (typeof arr[col] === \"number\") {\n          this.data[row][col] = arr[col];\n        } else if (arr[col] instanceof Float32Array) {\n          this.data[row][col] = arr[col][row];\n        } else {\n          this.data[row][col] = 0;\n        }\n      }\n    }\n    return this;\n  }\n\n  toBuffer(): ArrayBuffer {\n    const result = new ArrayBuffer(this.rows * this.cols * 64);\n    const view = new DataView(result, 0, this.rows * this.cols * 64);\n    this.data.forEach((num, i) => {\n      view.setFloat64(i, num);\n    });\n    return result;\n  }\n\n  sum(): number {\n    let sum = 0.0;\n    for (let row = 0; row < this.rows; row += 1) {\n      for (let col = 0; col < this.cols; col += 1) {\n        sum += this.data[row][col];\n      }\n    }\n    return sum;\n  }\n\n  colwiseSum(): Matrix {\n    const data = [];\n    for (let col = 0; col < this.cols; col += 1) {\n      let sum = 0.0;\n      for (let row = 0; row < this.rows; row += 1) {\n        sum += this.data[row][col];\n      }\n      data[col] = [sum];\n    }\n    return new Matrix(1, this.cols, data);\n  }\n\n  rowwiseSum(): Matrix {\n    const data = [];\n    for (let row = 0; row < this.rows; row += 1) {\n      let sum = 0.0;\n      for (let col = 0; col < this.rows; col += 1) {\n        sum += this.data[row][col];\n      }\n      data[row] = [sum];\n    }\n    return new Matrix(this.rows, 1, data);\n  }\n\n  replicate(rows: number, cols: number): Matrix {\n    const oldData = this.data;\n    const newData = [];\n    let result = null;\n    if (rows === 1 && this.cols === 1 && cols > 1) {\n      result = new Matrix(this.rows, cols);\n      for (let row = 0; row < this.rows; row += 1) {\n        newData[row] = [];\n        for (let col = 0; col < cols; col += 1) {\n          newData[row][col] = oldData[row][0];\n        }\n      }\n    } else if (cols === 1 && this.rows === 1 && rows > 1) {\n      result = new Matrix(rows, this.cols);\n      for (let row = 0; row < rows; row += 1) {\n        newData[row] = [];\n        for (let col = 0; col < this.cols; col += 1) {\n          newData[row][col] = oldData[0][col];\n        }\n      }\n    }\n    if (result) {\n      result.generateData(newData);\n      return result;\n    }\n    return this;\n  }\n\n  transpose(): Matrix {\n    return getComputation().execute(\"transpose\", this);\n  }\n\n  conjugate(): Matrix {\n    return this;\n  }\n\n  colMaxCoeffIndex(col: number): number {\n    let maxIndex = -1;\n    let max = -Infinity;\n\n    for (let row = 0; row < this.rows; row += 1) {\n      if (this.data[row][col] > max) {\n        max = this.data[row][col];\n        maxIndex = row;\n      }\n    }\n\n    return maxIndex;\n  }\n\n  block(\n    startRow: number,\n    startCol: number,\n    blockRows: number,\n    blockCols: number\n  ): Matrix {\n    const data = [];\n\n    for (\n      let row = startRow, newRow = 0;\n      row < this.rows && row < startRow + blockRows;\n      row += 1, newRow += 1\n    ) {\n      data[row] = new Array(blockCols);\n      for (\n        let col = startCol, newCol = 0;\n        col < this.cols && col < startCol + blockCols;\n        col += 1, newCol += 1\n      ) {\n        data[newRow][newCol] = this.data[row][col];\n      }\n    }\n\n    return new Matrix(blockRows, blockCols, data);\n  }\n\n  col(col: number): Matrix {\n    const data = [];\n    for (let row = 0; row < this.rows; row += 1) {\n      data[row] = [this.data[row][col]];\n    }\n    return new Matrix(this.rows, 1, data);\n  }\n\n  setCol(col: number, tmp: Matrix): Matrix {\n    for (let row = 0; row < this.rows; row += 1) {\n      this.data[row][col] = tmp.data[row][0];\n    }\n    return this;\n  }\n\n  rollToColMatrix(): Matrix {\n    const data = [];\n\n    let _row = 0;\n    for (let row = 0; row < this.rows; row += 1) {\n      data[row] = [];\n      for (let col = 0; col < this.cols; col += 1) {\n        data[_row++][0] = this.data[row][col];\n      }\n    }\n\n    return new Matrix(this.rows * this.cols, 1, data);\n  }\n}\n\nexport const cols = (m: Matrix): number => {\n  return m.cols;\n};\n","import { Dimension, Layers } from \"./types\";\nimport { Matrix } from \"./math/matrix\";\nimport * as fs from \"fs\";\nimport { getComputation } from \"./computation/utils\";\n\nclass Network {\n  private dimensions: Dimension = null;\n  private size = 0;\n  private layers: Layers[] = [];\n\n  constructor(dimensions: Dimension) {\n    this.dimensions = dimensions;\n  }\n\n  addLayer(layer: Layers): Network {\n    this.size++;\n    this.layers.push(layer);\n\n    return this;\n  }\n\n  getLayers(): Layers[] {\n    return this.layers;\n  }\n\n  forward(input: Matrix): Matrix {\n    let output = input;\n\n    this.layers.forEach((layer: Layers) => {\n      output = layer.forward(output);\n    });\n\n    return output;\n  }\n\n  backward(\n    X: Matrix,\n    Y: Matrix,\n    predictions: Matrix,\n    regularization: number\n  ): void {\n    const m = X.cols;\n\n    let delta = getComputation().execute(\"elementWiseSubtract\", predictions, Y);\n\n    for (let layer = this.layers.length - 1; layer >= 0; layer -= 1) {\n      delta = this.layers[layer]\n        .getBackPropagation()\n        .propagate(X, m, regularization, delta);\n    }\n  }\n\n  loss(output: Matrix, predictions: Matrix): number {\n    return this.layers[this.layers.length - 1].loss(output, predictions);\n  }\n\n  error(m: number): number {\n    return this.layers[this.layers.length - 1].error(m);\n  }\n\n  save(path: string): Promise<string> {\n    const resultJSON = {\n      dimensions: this.dimensions,\n      layers: [],\n    };\n\n    this.layers.forEach((layer: Layers) => {\n      resultJSON.layers.push({\n        type: layer.getType(),\n        size: layer.getSize(),\n        weights: {\n          W: layer.W.data,\n          b: layer.b.data,\n        },\n      });\n    });\n\n    const result = JSON.stringify(resultJSON);\n\n    return new Promise((resolve, reject) => {\n      fs.writeFile(path, result, (err) => {\n        if (err) {\n          console.error(err);\n          reject();\n        }\n        resolve(result);\n      });\n    });\n  }\n}\n\nexport { Network };\nexport default Network;\n","import Network from \"../network\";\nimport { AbstractOptimizer } from \"./optimizer/abstract\";\nimport { Dataset } from \"../dataset/dataset\";\n\nexport interface CostResult {\n  cost: number;\n  accuracy: number;\n}\n\nexport interface StepCallbackParameters {\n  iteration: number;\n}\n\nexport abstract class AbstractTrainer {\n  network: Network = null;\n  optimizer: AbstractOptimizer = null;\n  regularization = 0;\n  iterations = 1000;\n  learningRate = 0.1;\n  verbose = true;\n  verboseStep = 1;\n  stepCallback = Function;\n\n  constructor(network: Network, optimizer: AbstractOptimizer) {\n    this.network = network;\n    this.optimizer = optimizer;\n  }\n\n  setRegularization(regularization: number): AbstractTrainer {\n    this.regularization = regularization;\n    return this;\n  }\n\n  setIterations(iterations: number): AbstractTrainer {\n    this.iterations = iterations;\n    return this;\n  }\n\n  setLearningRate(learningRate: number): AbstractTrainer {\n    this.learningRate = learningRate;\n    return this;\n  }\n\n  setVerbose(verbose: boolean): AbstractTrainer {\n    this.verbose = verbose;\n    return this;\n  }\n\n  setVerboseStep(verboseStep: number): AbstractTrainer {\n    this.verboseStep = verboseStep;\n    return this;\n  }\n\n  setStepCallback(\n    stepCallback: (data: StepCallbackParameters) => void\n  ): AbstractTrainer {\n    this.stepCallback = stepCallback;\n    return this;\n  }\n\n  cost(inputDataset: Dataset, outputDataset: Dataset): CostResult {\n    const batchSize = 100;\n    const numberOfExamples = inputDataset.getNumberOfExamples();\n    const numBatches = Math.ceil(numberOfExamples / batchSize);\n\n    let cost = 0;\n    let accuracy = 0;\n    let penalty = 0;\n\n    this.network.getLayers().forEach((layer) => {\n      penalty += layer.penalty();\n    });\n\n    for (\n      let batch = 0, offset = 0;\n      batch < numberOfExamples;\n      batch += batchSize, offset += 1\n    ) {\n      const predictedOutput = this.network.forward(\n        inputDataset.getBatch(offset, batchSize)\n      );\n      const correctOutput = outputDataset.getBatch(offset, batchSize);\n\n      const miniBatchSize = correctOutput.cols;\n\n      const loss = this.network.loss(correctOutput, predictedOutput);\n      const error = this.network.error(miniBatchSize);\n\n      cost +=\n        (error * loss +\n          (this.regularization * penalty) / (2.0 * miniBatchSize)) /\n        // TODO: fix it\n        (numBatches * (miniBatchSize / batchSize));\n\n      for (let col = 0; col < predictedOutput.cols; col += 1) {\n        const index1 = predictedOutput.colMaxCoeffIndex(col);\n        const index2 = predictedOutput.colMaxCoeffIndex(col);\n\n        if (index1 === index2) {\n          accuracy++;\n        }\n      }\n    }\n\n    const result = {\n      cost,\n      accuracy: ((accuracy - 1) / numberOfExamples) * 100,\n    };\n\n    return result;\n  }\n}\n","import { MiniBatchTrainer } from \"./minibatch\";\n\nexport { MiniBatchTrainer };\n","import { AbstractTrainer } from \"./abstract\";\nimport { Dataset } from \"../dataset/dataset\";\n\nexport class MiniBatchTrainer extends AbstractTrainer {\n  batchSize = 100;\n\n  setBatchSize(batchSize: number): MiniBatchTrainer {\n    this.batchSize = batchSize;\n    return this;\n  }\n\n  train(inputDataset: Dataset, outputDataset: Dataset): void {\n    const numberOfExamples = inputDataset.getNumberOfExamples();\n    const startTime = new Date().getTime();\n\n    let t = 0;\n\n    this.optimizer.setBatchSize(this.batchSize);\n\n    for (let i = 0; i < this.iterations; i += 1) {\n      const startIterationTime = new Date().getTime();\n\n      for (\n        let batch = 0, offset = 0;\n        batch < numberOfExamples;\n        batch += this.batchSize, offset += this.batchSize\n      ) {\n        const startIterationTime2 = new Date().getTime();\n        const input = inputDataset.getBatch(offset, this.batchSize);\n        const output = outputDataset.getBatch(offset, this.batchSize);\n        const forward = this.network.forward(input);\n\n        this.network.backward(input, output, forward, this.regularization);\n\n        this.network.getLayers().forEach((layer) => {\n          this.optimizer.setT(++t);\n          this.optimizer.optimize(layer);\n        });\n\n        if (this.verbose) {\n          const endIterationTime = new Date().getTime();\n          console.log(\n            `Batch: ${offset} / ${numberOfExamples} | Time: ${\n              endIterationTime - startIterationTime2\n            } ms | ${endIterationTime - startIterationTime} ms.`\n          );\n        }\n      }\n\n      if (this.verbose) {\n        if ((i + 1) % this.verboseStep === 0) {\n          const endTime = new Date().getTime();\n          const currentResult = this.cost(inputDataset, outputDataset);\n\n          console.log(\n            `Iteration: ${i + 1} | Cost: ${currentResult.cost} | Accuracy: ${\n              currentResult.accuracy\n            }% | Time: ${endTime - startTime} ms.`\n          );\n        }\n      }\n\n      if (typeof this.stepCallback === \"function\") {\n        this.stepCallback({\n          iteration: i,\n        });\n      }\n    }\n  }\n}\n","import { Layers } from \"../../types\";\n\nexport abstract class AbstractOptimizer {\n  protected batchSize = 0;\n  protected t = 0;\n  protected learningRate = 0;\n\n  setBatchSize(batchSize: number): AbstractOptimizer {\n    this.batchSize = batchSize;\n    return this;\n  }\n\n  setT(t: number): AbstractOptimizer {\n    this.t = t;\n    return this;\n  }\n\n  setLearningRate(learningRate: number): AbstractOptimizer {\n    this.learningRate = learningRate;\n    return this;\n  }\n\n  abstract optimize(layer: Layers): void;\n}\n","import { AbstractOptimizer } from \"./abstract\";\nimport { Layers } from \"../../types\";\nimport { getComputation } from \"../../computation/utils\";\n\nexport class OptimizerAdam extends AbstractOptimizer {\n  optimize(layer: Layers): void {\n    this.adam(layer, this.learningRate, this.t);\n  }\n\n  adam(layer: Layers, learningRate: number, t: number): void {\n    const beta1 = 0.9;\n    const beta2 = 0.999;\n\n    layer.vW = getComputation().execute(\n      \"elementWiseAdd\",\n      getComputation().execute(\"elementWiseMultiplyNumber\", layer.vW, beta1),\n      getComputation().execute(\"elementWiseMultiplyNumber\", layer.gW, 1 - beta1)\n    );\n    const wCorrected = getComputation().execute(\n      \"elementWiseDivideNumber\",\n      layer.vW,\n      1 - Math.pow(beta1, t)\n    );\n\n    layer.cW = getComputation().execute(\n      \"elementWiseAdd\",\n      getComputation().execute(\"elementWiseMultiplyNumber\", layer.cW, beta1),\n      getComputation().execute(\"elementWiseMultiplyNumber\", layer.gW, 1 - beta1)\n    );\n    const sCorrected = getComputation().execute(\n      \"sqrt\",\n      getComputation().execute(\n        \"elementWiseMultiplyNumber\",\n        layer.cW,\n        1 - Math.pow(beta2, t)\n      )\n    );\n\n    layer.W = getComputation().execute(\n      \"elementWiseSubtract\",\n      layer.W,\n      getComputation().execute(\n        \"elementWiseMultiplyNumber\",\n        getComputation().execute(\"elementWiseMultiply\", wCorrected, sCorrected),\n        learningRate\n      )\n    );\n\n    layer.vb = getComputation().execute(\n      \"elementWiseAdd\",\n      getComputation().execute(\"elementWiseMultiplyNumber\", layer.vb, beta1),\n      getComputation().execute(\"elementWiseMultiplyNumber\", layer.gb, 1 - beta1)\n    );\n    const wCorrected2 = getComputation().execute(\n      \"elementWiseDivideNumber\",\n      layer.vb,\n      1 - Math.pow(beta1, t)\n    );\n    layer.cb = getComputation().execute(\n      \"elementWiseAdd\",\n      getComputation().execute(\"elementWiseMultiplyNumber\", layer.cb, beta2),\n      getComputation().execute(\n        \"elementWiseMultiplyNumber\",\n        getComputation().execute(\"elementWiseMultiply\", layer.gb, layer.gb),\n        1 - beta2\n      )\n    );\n    const sCorrected2 = getComputation().execute(\n      \"sqrt\",\n      getComputation().execute(\n        \"elementWiseDivideNumber\",\n        layer.cb,\n        1 - Math.pow(beta2, t)\n      )\n    );\n\n    layer.b = getComputation().execute(\n      \"elementWiseSubtract\",\n      layer.b,\n      getComputation().execute(\n        \"elementWiseMultiplyNumber\",\n        getComputation().execute(\"elementWiseDivide\", wCorrected2, sCorrected2),\n        learningRate\n      )\n    );\n  }\n}\n","import { AbstractOptimizer } from \"./abstract\";\nimport { Layers } from \"../../types\";\nimport { getComputation } from \"../../computation/utils\";\n\nexport class OptimizerGradientDescent extends AbstractOptimizer {\n  optimize(layer: Layers): void {\n    this.gradientDescent(layer, this.learningRate);\n  }\n\n  gradientDescent(layer: Layers, learningRate: number): void {\n    layer.W = getComputation().execute(\n      \"elementWiseSubtract\",\n      layer.W,\n      getComputation().execute(\n        \"elementWiseMultiplyNumber\",\n        layer.gW,\n        learningRate\n      )\n    );\n    layer.b = getComputation().execute(\n      \"elementWiseSubtract\",\n      layer.b,\n      getComputation().execute(\n        \"elementWiseMultiplyNumber\",\n        layer.gb,\n        learningRate\n      )\n    );\n  }\n}\n","import { OptimizerAdam } from \"./adam\";\nimport { OptimizerGradientDescent } from \"./gradientdescent\";\n\nexport { OptimizerAdam, OptimizerGradientDescent };\n","import {\n  SoftmaxLayer,\n  LogisticLayer,\n  TanhLayer,\n  ReluLayer,\n  SoftplusLayer,\n  AbstractLayer,\n} from \"./layer\";\nimport { ConvLayer } from \"./layer/\";\nimport { MaxPoolLayer } from \"./layer/\";\nimport { FullyConnectedLayer } from \"./layer/\";\nimport { PurelinLayer } from \"./layer/purelin\";\n\nexport type Dimension = [number] | [number, number, number];\n\nexport enum LayerType {\n  logistic = \"logistic\",\n  softmax = \"softmax\",\n  tanh = \"tanh\",\n  relu = \"relu\",\n  softplus = \"softplus\",\n  conv = \"conv\",\n  maxpool = \"maxpool\",\n  fullyconnected = \"fullyconnected\",\n  purelin = \"purelin\",\n}\n\nexport type Layers =\n  | LogisticLayer\n  | SoftmaxLayer\n  | TanhLayer\n  | ReluLayer\n  | SoftplusLayer\n  | AbstractLayer\n  | ConvLayer\n  | MaxPoolLayer\n  | FullyConnectedLayer\n  | PurelinLayer;\nexport type Layers1D =\n  | LogisticLayer\n  | SoftmaxLayer\n  | TanhLayer\n  | ReluLayer\n  | SoftplusLayer\n  | PurelinLayer\n  | AbstractLayer;\nexport type Layers3D = ConvLayer | MaxPoolLayer | FullyConnectedLayer;\n","module.exports = require(\"csvtojson\");","module.exports = require(\"gpu.js\");","module.exports = require(\"fs\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import { Builder1D, Builder3D } from \"./builder\";\nimport {\n  SoftmaxLayer,\n  LogisticLayer,\n  ReluLayer,\n  SoftplusLayer,\n  TanhLayer,\n  ConvLayer,\n  FullyConnectedLayer,\n  MaxPoolLayer,\n} from \"./layer\";\nimport { Matrix } from \"./math/matrix\";\nimport { DatasetBuilder } from \"./dataset\";\nimport { OptimizerAdam, OptimizerGradientDescent } from \"./trainer/optimizer\";\nimport { MiniBatchTrainer } from \"./trainer\";\nimport {\n  CallbackDatabaseModifier,\n  MinMaxScalingDatabaseModifier,\n  MissingDataScalingDatabaseModifier,\n} from \"./dataset/datasetmodifier\";\nimport { ComputationCPU, ComputationGPU, setComputation } from \"./computation\";\n\nconst Builders = { Builder1D, Builder3D };\nconst Math = {\n  Matrix,\n};\nconst Layers = {\n  SoftmaxLayer,\n  LogisticLayer,\n  ReluLayer,\n  SoftplusLayer,\n  TanhLayer,\n  ConvLayer,\n  MaxPoolLayer,\n  FullyConnectedLayer,\n};\nconst Dataset = {\n  DatasetBuilder: DatasetBuilder,\n};\nconst Optimizers = {\n  OptimizerAdam,\n  OptimizerGradientDescent,\n};\nconst Trainers = {\n  MiniBatchTrainer,\n};\nconst DatasetModifiers = {\n  CallbackDatabaseModifier,\n  MinMaxScalingDatabaseModifier,\n  MissingDataScalingDatabaseModifier,\n};\nconst Computations = {\n  ComputationCPU,\n  ComputationGPU,\n  setComputation,\n};\n\nexport {\n  Builders,\n  Math,\n  Layers,\n  Dataset,\n  Optimizers,\n  Trainers,\n  DatasetModifiers,\n  Computations,\n};\n"],"names":["Network","BackpropagationFactory","AbstractBuilder","dimension","dimensions","network","type","callback","layer","lastLayer","firstLayerTransition","transition","configure","setBackPropagation","create","addLayer","fs","LogisticLayer","ReluLayer","SoftmaxLayer","SoftplusLayer","TanhLayer","Builder1D","setWidth","jsonPath","Promise","resolve","reject","readFile","err","data","json","JSON","parse","toString","builder","forEach","layerData","layerClass","createLayer","setSize","getNetwork","getLayers","i","W","b","ConvLayer","MaxPoolLayer","Builder3D","setFilterSize","setStride","setNumFilters","setPadding","AbstractComputation","name","func","kernels","args","apply","Matrix","elementWiseDivide","m1","m2","rows","Error","cols","row","col","elementWiseDivideNumber","num","softmaxActivation","m","Math","exp","calculated","divider","colwiseSum","replicate","softmaxLoss","output","predictions","log","elementWiseMultiply","sum","logisticActivation","logisticDerivative","logisticLoss","logMatrix","sub","subMatrix","logSubMatrix","elementWiseAdd","tanhActivation","tanhDerivative","pow","reluActivation","max","reluDerivative","softplusActivation","softplusDerivative","penalty","sqrt","purelinLoss","multiply","Array","elementWiseSubtract","fillRandom","parameter","random","setZeros","setOnes","elementWiseMultiplyNumber","transpose","ComputationCPU","addKernel","GPU","gpu","mode","kernel","createKernel","a","thread","x","y","setOutput","constants","number","setConstants","result","kernel2","kernel3","ComputationGPU","setComputation","currentComputation","getComputation","Dataset","exampleSize","numberOfExamples","arr","example","dataIndex","length","Number","NaN","index","offset","batchSize","block","csvtojson","DatasetBuilder","csvPath","noheader","fromFile","then","dataset","AbstractDatasetModifier","getNumberOfExamples","applyToExample","CallbackDatabaseModifier","exampleIndex","exampleAt","MinMaxScalingDatabaseModifier","MissingDataScalingDatabaseModifier","min","Infinity","rowsToFill","correctExamplesCount","valueToFill","isNaN","push","modificationType","AbstractLayer","A","Z","gW","gb","vW","cW","vb","cb","backPropagation","input","execute","activation","value","width","height","depth","previousLayer","AbstractLayer1D","resize","is1D","getSize","is3D","getOutputWidth","getOutputHeight","getOutputDepth","setHeight","AbstractLayer3D","setDepth","getWidth","getHeight","getDepth","AbstractBackPropagation","Backpropagation1Dto1D","regularization","sigma","previousActivations","delta","conjugate","rowwiseSum","derivative","Backpropagation3Dto1D","BackpropagationToConv","padding","getPadding","stride","getStride","filterSize","getFilterSize","outputWidth","outputHeight","outputDepth","inputWidth","inputHeight","inputDepth","tmpResult","aPrev","c","h","w","vertStart","vertEnd","horizStart","horizEnd","d","vertical","verticalPad","horizontal","horizontalPad","z","BackpropagationToMaxPool","prevLayer","_max","inputOffset","outputOffset","maxX","maxY","vStart","hStart","LayerType","getType","conv","maxpool","fullyconnected","im2col","numFilters","size","tmp","rollToColMatrix","setCol","FullyConnectedLayer","logistic","pool","relu","softmax","softplus","tanh","channels","kernel_h","kernel_w","pad_h","pad_w","stride_h","stride_w","currentResultCol","boundingY","boundingX","currentResultRow","channel","resultWidth","resultHeight","resultDepth","generateData","Float32Array","ArrayBuffer","view","DataView","setFloat64","oldData","newData","maxIndex","startRow","startCol","blockRows","blockCols","newRow","newCol","_row","layers","forward","X","Y","getBackPropagation","propagate","loss","error","path","resultJSON","weights","stringify","writeFile","console","AbstractTrainer","optimizer","Function","iterations","learningRate","verbose","verboseStep","stepCallback","inputDataset","outputDataset","numBatches","ceil","cost","accuracy","batch","predictedOutput","getBatch","correctOutput","miniBatchSize","index1","colMaxCoeffIndex","index2","MiniBatchTrainer","startTime","Date","getTime","t","setBatchSize","startIterationTime","startIterationTime2","backward","setT","optimize","endIterationTime","endTime","currentResult","iteration","AbstractOptimizer","OptimizerAdam","adam","beta1","beta2","wCorrected","sCorrected","wCorrected2","sCorrected2","OptimizerGradientDescent","gradientDescent","Builders","Layers","Optimizers","Trainers","DatasetModifiers","Computations"],"sourceRoot":""}