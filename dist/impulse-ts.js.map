{"version":3,"file":"impulse-ts.js","mappings":"sCACA,IACEA,QAAQC,OAAOC,EAAQC,UAAY,WAAsB,IAA0B,yCACnF,MAAOC,GACP,MAAM,IAAIC,MAAM,iBAAmBD,K,qBCJrCF,EAAOI,QAAUC,QAAQ,UCCrBC,EAA2B,GAG/B,SAASC,EAAoBC,GAE5B,IAAIC,EAAeH,EAAyBE,GAC5C,QAAqBE,IAAjBD,EACH,OAAOA,EAAaL,QAGrB,IAAIJ,EAASM,EAAyBE,GAAY,CACjDG,GAAIH,EACJI,QAAQ,EACRR,QAAS,IAUV,OANAS,EAAoBL,GAAUR,EAAQA,EAAOI,QAASG,GAGtDP,EAAOY,QAAS,EAGTZ,EAAOI,QCvBfG,EAAoBO,EAAI,CAACV,EAASW,KACjC,IAAI,IAAIC,KAAOD,EACXR,EAAoBU,EAAEF,EAAYC,KAAST,EAAoBU,EAAEb,EAASY,IAC5EE,OAAOC,eAAef,EAASY,EAAK,CAAEI,YAAY,EAAMC,IAAKN,EAAWC,MCJ3ET,EAAoBU,EAAI,CAACK,EAAKC,IAAUL,OAAOM,UAAUC,eAAeC,KAAKJ,EAAKC,GCClFhB,EAAoBoB,EAAKvB,IACH,oBAAXwB,QAA0BA,OAAOC,aAC1CX,OAAOC,eAAef,EAASwB,OAAOC,YAAa,CAAEC,MAAO,WAE7DZ,OAAOC,eAAef,EAAS,aAAc,CAAE0B,OAAO,KCLvDvB,EAAoBwB,IAAO/B,IAC1BA,EAAOgC,MAAQ,GACVhC,EAAOiC,WAAUjC,EAAOiC,SAAW,IACjCjC,GCHRO,EAAoB2B,EAAI,G,8gBCejB,IAAMC,EAAb,WAKE,aAAgC,IAApBC,EAAoB,uDAAb,EAAGC,EAAU,uDAAH,EAAG,wBAJlB,GAIkB,cAHlB,GAGkB,cAFlB,MAGZC,KAAKC,OAAOH,EAAMC,G,QANtB,O,EAAA,G,EAAA,qBASE,SAAOD,EAAMC,GAKX,OAJAC,KAAKF,KAAOA,EACZE,KAAKD,KAAOA,EACZC,KAAKE,KAAO,IAAIC,MAAML,EAAOC,GAEtBC,U,iBAdX,KAkBaI,EAAW,SAACC,EAAYC,GACnC,GAAID,EAAGN,OAASO,EAAGR,KACjB,MAAM,IAAIjC,MAAM,qBAGlB,IAAM0C,EAAS,IAAIV,EAAOQ,EAAGP,KAAMQ,EAAGP,MAUtC,OATAQ,EAAOL,MAAOM,EAAAA,EAAAA,gBACZH,EAAGH,KACHG,EAAGP,KACHO,EAAGN,KACHO,EAAGJ,KACHI,EAAGR,KACHQ,EAAGP,MAGEQ,GA6CIN,EAAS,SAACI,EAAYP,EAAcC,GAC/CM,EAAGJ,OAAOH,EAAMC,IAGLU,EAAa,SAACJ,EAAYK,GACrC,OAAOC,EAAAA,EAAAA,kBAAiBN,EAAGH,KAAMG,EAAGP,KAAMO,EAAGN,KAAMW,I,8RC3DrD,QApCME,WAKJ,WAAYC,I,4FAAuB,6BAJH,MAIG,cAHZ,GAGY,gBAFR,IAGzBb,KAAKa,WAAaA,E,6CAGpB,SAASC,GACPd,KAAKe,OACLf,KAAKgB,OAAOC,KAAKH,K,qBAGnB,SAAQI,GACN,IAAIC,EAASD,EAMb,OAJAlB,KAAKgB,OAAOI,SAAQ,SAACN,GACnBK,EAASL,EAAMO,QAAQF,MAGlBA,I,sBAGT,SAASG,EAAWC,EAAWC,EAAqBC,GACnCH,EDmGRvB,KAvDa,SAACM,EAAYC,GACnC,GAAID,EAAGP,OAASQ,EAAGR,KACjB,MAAM,IAAIjC,MAAM,0BAElB,GAAIwC,EAAGN,OAASO,EAAGP,KACjB,MAAM,IAAIlC,MAAM,0BAGH,IAAIgC,EAAOQ,EAAGP,KAAMQ,EAAGP,MAC/BG,MAAOwB,EAAAA,EAAAA,2BACZrB,EAAGH,KACHG,EAAGP,KACHO,EAAGN,KACHO,EAAGJ,KACHI,EAAGR,KACHQ,EAAGP,MCzDS4B,CAASH,EAAaD,GAElCvB,KAAKgB,OAAOY,UAAUR,SAAQ,SAACN,Y,mBA7B7BF,G,ixCCAAiB,EAAAA,SAAAA,I,ivBACJ,SAAqBf,GACnBA,EAAMgB,SAAS9B,KAAKa,WAAW,S,mBAF7BgB,CCASE,WAKb,WAAYC,I,4FAAsB,6BAJA,MAIA,uBAHA,MAGA,iBAFL,MAG3BhC,KAAKa,WAAamB,EAClBhC,KAAKiC,QAAU,IAAIrB,EAAQoB,G,gDAG7B,SAAYE,EAAcC,GACxB,IAAMrB,EAAQ,IAAIoB,EAEM,mBAAbC,GACTA,EAASrB,GAGgB,OAAvBd,KAAKoC,cACPpC,KAAKqC,qBAAqBvB,GAE1BA,EAAMwB,WAAWtC,KAAKoC,eAGxBtB,EAAMyB,YAENvC,KAAKiC,QAAQO,SAAS1B,GACtBd,KAAKoC,cAAgBtB,I,wBAGvB,WACE,OAAOd,KAAKiC,a,mBA9BDF,I,kSCCHU,ECDGC,EAAAA,WAab,c,4FAAc,wBALY,GAKZ,gBAJa,GAIb,eAHY,GAGZ,uBAFoB,MAGhC1C,KAAK2C,EAAI,IAAI9C,EACbG,KAAK4C,EAAI,IAAI/C,EACbG,KAAK6C,EAAI,IAAIhD,EACbG,KAAK8C,EAAI,IAAIjD,EACbG,KAAK+C,GAAK,IAAIlD,EACdG,KAAKgD,GAAK,IAAInD,E,4CAGhB,SAAQqB,GAGN,OAFAlB,KAAK8C,ELyBU,SAACzC,EAAYC,GAC9B,GAAID,EAAGP,OAASQ,EAAGR,KACjB,MAAM,IAAIjC,MAAM,0BAElB,GAAIwC,EAAGN,OAASO,EAAGP,KACjB,MAAM,IAAIlC,MAAM,0BAGlB,IAAM0C,EAAS,IAAIV,EAAOQ,EAAGP,KAAMQ,EAAGP,MAUtC,OATAQ,EAAOL,MAAO+C,EAAAA,EAAAA,sBACZ5C,EAAGH,KACHG,EAAGP,KACHO,EAAGN,KACHO,EAAGJ,KACHI,EAAGR,KACHQ,EAAGP,MAGEQ,EK3CI2C,CAAI9C,EAASJ,KAAK2C,EAAGzB,GAAQlB,KAAK4C,GAC3C5C,KAAK6C,EAAI7C,KAAKmD,WAAWnD,KAAK8C,GACvB9C,KAAK6C,I,sBAGd,SAASrD,GACPQ,KAAKoD,MAAQ5D,I,sBAGf,WACE,OAAOQ,KAAKoD,Q,uBAGd,SAAU5D,GACRQ,KAAKqD,OAAS7D,I,uBAGhB,WACE,OAAOQ,KAAKqD,S,sBAGd,SAAS7D,GACPQ,KAAKsD,MAAQ9D,I,sBAGf,WACE,OAAOQ,KAAKsD,W,mBAjDDZ,G,onCDCHD,GAAAA,EAAAA,EAAAA,SAAAA,GAAAA,WAAAA,EAAAA,EAAAA,QAAAA,GAAAA,U,CAAAA,IAAAA,EAAAA,K,IEAGc,EAAAA,SAAAA,I,syBACa,G,wCAE1B,WACEtD,EAAOD,KAAK2C,EAAG3C,KAAKqD,OAAQrD,KAAKoD,OACjC3C,EAAWT,KAAK2C,EAAG3C,KAAKoD,OAExBnD,EAAOD,KAAK4C,EAAG5C,KAAKqD,OAAQ,GAC5B5C,EAAWT,KAAK4C,EAAG5C,KAAKoD,OAExBnD,EAAOD,KAAK+C,GAAI/C,KAAKqD,OAAQrD,KAAKoD,OAClCnD,EAAOD,KAAKgD,GAAIhD,KAAKqD,OAAQ,K,kBAG/B,WACE,OAAO,I,kBAGT,WACE,OAAO,I,wBAGT,SAAWjB,GACLA,EAAcoB,OAChBxD,KAAK8B,SAASM,EAAcqB,WACnBrB,EAAcsB,QACvB1D,KAAK8B,SACHM,EAAcuB,iBACZvB,EAAcwB,kBACdxB,EAAcyB,oB,qBAKtB,SAAQrE,GACNQ,KAAK8D,UAAUtE,EAAM,M,qBAGvB,WACE,OAAOQ,KAAKqD,S,4BAGd,WACE,OAAOrD,KAAKoD,Q,6BAGd,WACE,OAAOpD,KAAKqD,S,4BAGd,WACE,OAAO,O,mBAnDIE,CAAwBb,G,m/BCAjCqB,EAAAA,SAAAA,I,uuBACJ,SAAWC,GACT,OPiJ6B,SAACA,GAChC,IAAMzD,EAAS,IAAIV,EAAOmE,EAAElE,KAAMkE,EAAEjE,MAEpC,OADAQ,EAAOL,MAAO+D,EAAAA,EAAAA,mBAAkBD,EAAE9D,KAAM8D,EAAElE,KAAMkE,EAAEjE,MAC3CQ,EOpJE2D,CAAkBF,K,wBAG3B,WACE,MAAM,IAAInG,MAAM,wB,qBAGlB,WACE,OAAO4E,EAAU0B,U,kBAGnB,SAAKhD,EAAgBK,GACnB,OP2IoClB,EO3ITkB,GP4IvBjB,EAAS,IAAIV,GADOQ,EO3ILc,GP4IQrB,KAAMO,EAAGN,OAC/BG,MAAOkE,EAAAA,EAAAA,aACZ/D,EAAGH,KACHG,EAAGP,KACHO,EAAGN,KACHO,EAAGJ,KACHI,EAAGR,KACHQ,EAAGP,OAEEsE,EAAAA,EAAAA,WAAU9D,EAAQA,EAAOT,KAAMS,EAAOR,MAVpB,IAACM,EAAYC,EAChCC,I,mBOzIN,SAAMyD,GACJ,OAAQ,EAAMA,O,mBAlBZD,CAAqBR,G,m/BCKrBe,EAAAA,SAAAA,I,uuBACJ,SAAWN,GACT,OR+J8B,SAACA,GACjC,IAAMzD,EAAS,IAAIV,EAAOmE,EAAElE,KAAMkE,EAAEjE,MAEpC,OADAQ,EAAOL,MAAOqE,EAAAA,EAAAA,oBAAmBP,EAAE9D,KAAM8D,EAAElE,KAAMkE,EAAEjE,MAC5CQ,EQlKEiE,CAAmBR,K,wBAG5B,WACE,ORiK+BA,EQjKLhE,KAAK6C,GRkK3BtC,EAAS,IAAIV,EAAOmE,EAAElE,KAAMkE,EAAEjE,OAC7BG,MAAOuE,EAAAA,EAAAA,oBAAmBT,EAAGA,EAAElE,KAAMkE,EAAEjE,MACvCQ,EAHyB,IAACyD,EAC3BzD,I,qBQ/JN,WACE,OAAOkC,EAAUiC,W,kBAGnB,SAAKvD,EAAgBK,GACnB,OR+JqClB,EQ/JTkB,GRgKxBjB,EAAS,IAAIV,GADQQ,EQ/JLc,GRgKOrB,KAAMO,EAAGN,OAC/BG,MAAOyE,EAAAA,EAAAA,cACZtE,EAAGH,KACHG,EAAGP,KACHO,EAAGN,KACHO,EAAGJ,KACHI,EAAGR,KACHQ,EAAGP,OAEEsE,EAAAA,EAAAA,WAAU9D,EAAQA,EAAOT,KAAMS,EAAOR,MAVnB,IAACM,EAAYC,EACjCC,I,mBQ7JN,SAAMyD,GACJ,OAAQ,EAAMA,O,mBAlBZM,CAAsBf,I","sources":["webpack://impulse-ts/./build/Debug/impulseTsToolkit.node","webpack://impulse-ts/external \"path\"","webpack://impulse-ts/webpack/bootstrap","webpack://impulse-ts/webpack/runtime/define property getters","webpack://impulse-ts/webpack/runtime/hasOwnProperty shorthand","webpack://impulse-ts/webpack/runtime/make namespace object","webpack://impulse-ts/webpack/runtime/node module decorator","webpack://impulse-ts/webpack/runtime/publicPath","webpack://impulse-ts/./src/typescript/math/matrix.tsx","webpack://impulse-ts/./src/typescript/network.tsx","webpack://impulse-ts/./src/typescript/builder/builder1d.tsx","webpack://impulse-ts/./src/typescript/builder/abstract.tsx","webpack://impulse-ts/./src/typescript/types.tsx","webpack://impulse-ts/./src/typescript/layer/abstract.tsx","webpack://impulse-ts/./src/typescript/layer/abstract1d.tsx","webpack://impulse-ts/./src/typescript/layer/softmax.tsx","webpack://impulse-ts/./src/typescript/layer/logistic.tsx"],"sourcesContent":["\ntry {\n  process.dlopen(module, __dirname + require(\"path\").sep + __webpack_public_path__ + \"3cbe64475c8673abb56699f556ba8da0.node\");\n} catch (error) {\n  throw new Error('node-loader:\\n' + error);\n}\n","module.exports = require(\"path\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = (module) => {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","__webpack_require__.p = \"\";","import {\n  MatrixMultiply,\n  MatrixElementWiseAdd,\n  MatrixElementWiseSubtract,\n  MatrixElementWiseMultiply,\n  MatrixElementWiseDivide,\n  MatrixSum,\n  MatrixFillRandom,\n  SoftmaxActivation,\n  SoftmaxLoss,\n  LogisticActivation,\n  LogisticDerivative,\n  LogisticLoss,\n} from \"impulseTsToolkit\";\n\nexport class Matrix {\n  public rows = 0;\n  public cols = 0;\n  public data = null;\n\n  constructor(rows = 0, cols = 0) {\n    this.resize(rows, cols);\n  }\n\n  resize(rows, cols): Matrix {\n    this.rows = rows;\n    this.cols = cols;\n    this.data = new Array(rows * cols);\n\n    return this;\n  }\n}\n\nexport const multiply = (m1: Matrix, m2: Matrix): Matrix => {\n  if (m1.cols !== m2.rows) {\n    throw new Error(\"DIMENSIONS error.\");\n  }\n\n  const result = new Matrix(m1.rows, m2.cols);\n  result.data = MatrixMultiply(\n    m1.data,\n    m1.rows,\n    m1.cols,\n    m2.data,\n    m2.rows,\n    m2.cols\n  );\n\n  return result;\n};\n\nexport const add = (m1: Matrix, m2: Matrix): Matrix => {\n  if (m1.rows !== m2.rows) {\n    throw new Error(\"ROWS number not equal.\");\n  }\n  if (m1.cols !== m2.cols) {\n    throw new Error(\"COLS number not equal.\");\n  }\n\n  const result = new Matrix(m1.rows, m2.cols);\n  result.data = MatrixElementWiseAdd(\n    m1.data,\n    m1.rows,\n    m1.cols,\n    m2.data,\n    m2.rows,\n    m2.cols\n  );\n\n  return result;\n};\n\nexport const subtract = (m1: Matrix, m2: Matrix): Matrix => {\n  if (m1.rows !== m2.rows) {\n    throw new Error(\"ROWS number not equal.\");\n  }\n  if (m1.cols !== m2.cols) {\n    throw new Error(\"COLS number not equal.\");\n  }\n\n  const result = new Matrix(m1.rows, m2.cols);\n  result.data = MatrixElementWiseSubtract(\n    m1.data,\n    m1.rows,\n    m1.cols,\n    m2.data,\n    m2.rows,\n    m2.cols\n  );\n\n  return result;\n};\n\nexport const resize = (m1: Matrix, rows: number, cols: number): void => {\n  m1.resize(rows, cols);\n};\n\nexport const fillRandom = (m1: Matrix, i: number): Matrix => {\n  return MatrixFillRandom(m1.data, m1.rows, m1.cols, i);\n};\n\nexport const elementWiseMultiply = (m1: Matrix, m2: Matrix): Matrix => {\n  if (m1.rows !== m2.rows) {\n    throw new Error(\"ROWS number not equal.\");\n  }\n  if (m1.cols !== m2.cols) {\n    throw new Error(\"COLS number not equal.\");\n  }\n\n  const result = new Matrix(m1.rows, m1.cols);\n  result.data = MatrixElementWiseMultiply(\n    m1.data,\n    m1.rows,\n    m1.cols,\n    m2.data,\n    m2.rows,\n    m2.cols\n  );\n\n  return result;\n};\n\nexport const sum = (m: Matrix): number => {\n  return MatrixSum(m.data, m.rows, m.cols);\n};\n\nexport const cols = (m: Matrix): number => {\n  return m.cols;\n};\n\nexport const elementWiseDivide = (m1: Matrix, m2: Matrix): Matrix => {\n  if (m1.rows !== m2.rows) {\n    throw new Error(\"ROWS number not equal.\");\n  }\n  if (m1.cols !== m2.cols) {\n    throw new Error(\"COLS number not equal.\");\n  }\n\n  const result = new Matrix(m1.rows, m1.cols);\n  result.data = MatrixElementWiseDivide(\n    m1.data,\n    m1.rows,\n    m1.cols,\n    m2.data,\n    m2.rows,\n    m2.cols\n  );\n\n  return result;\n};\n\nexport const softmaxActivation = (m: Matrix): Matrix => {\n  const result = new Matrix(m.rows, m.cols);\n  result.data = SoftmaxActivation(m.data, m.rows, m.cols);\n  return result;\n};\n\nexport const softmaxLoss = (m1: Matrix, m2: Matrix): number => {\n  const result = new Matrix(m1.rows, m1.cols);\n  result.data = SoftmaxLoss(\n    m1.data,\n    m1.rows,\n    m1.cols,\n    m2.data,\n    m2.rows,\n    m2.cols\n  );\n  return MatrixSum(result, result.rows, result.cols);\n};\n\nexport const logisticActivation = (m: Matrix): Matrix => {\n  const result = new Matrix(m.rows, m.cols);\n  result.data = LogisticActivation(m.data, m.rows, m.cols);\n  return result;\n};\n\nexport const logisticDerivative = (m: Matrix): Matrix => {\n  const result = new Matrix(m.rows, m.cols);\n  result.data = LogisticDerivative(m, m.rows, m.cols);\n  return result;\n};\n\nexport const logisticLoss = (m1: Matrix, m2: Matrix): number => {\n  const result = new Matrix(m1.rows, m1.cols);\n  result.data = LogisticLoss(\n    m1.data,\n    m1.rows,\n    m1.cols,\n    m2.data,\n    m2.rows,\n    m2.cols\n  );\n  return MatrixSum(result, result.rows, result.cols);\n};\n","import { Dimension, Layers } from \"./types\";\nimport { cols, Matrix, subtract } from \"./math/matrix\";\n\nclass Network {\n  private dimensions: Dimension = null;\n  private size: number = 0;\n  private layers: Layers[] = [];\n\n  constructor(dimensions: Dimension) {\n    this.dimensions = dimensions;\n  }\n\n  addLayer(layer: Layers) {\n    this.size++;\n    this.layers.push(layer);\n  }\n\n  forward(input: Matrix): Matrix {\n    let output = input;\n\n    this.layers.forEach((layer: Layers) => {\n      output = layer.forward(output);\n    });\n\n    return output;\n  }\n\n  backward(X: Matrix, Y: Matrix, predictions: Matrix, regularization: number) {\n    const m = cols(X);\n\n    let delta = subtract(predictions, Y);\n\n    this.layers.reverse().forEach((layer) => {\n      // delta = layer.backpropagation.propagate(X, m, regularization, delta)\n    });\n  }\n}\n\nexport { Network };\nexport default Network;\n","import { AbstractBuilder } from \"./abstract\";\nimport { Layers } from \"../types\";\n\nclass Builder1D extends AbstractBuilder {\n  firstLayerTransition(layer: Layers) {\n    layer.setWidth(this.dimensions[0]);\n  }\n}\n\nexport { Builder1D };\nexport default Builder1D;\n","import { Dimension, Layers } from \"../types\";\nimport Network from \"../network\";\n\nabstract class AbstractBuilder {\n  protected dimensions: Dimension = null;\n  protected previousLayer: Layers = null;\n  protected network: Network = null;\n\n  constructor(dimension: Dimension) {\n    this.dimensions = dimension;\n    this.network = new Network(dimension);\n  }\n\n  createLayer(type: Layers, callback: Function) {\n    const layer = new type();\n\n    if (typeof callback === \"function\") {\n      callback(layer);\n    }\n\n    if (this.previousLayer === null) {\n      this.firstLayerTransition(layer);\n    } else {\n      layer.transition(this.previousLayer);\n    }\n\n    layer.configure();\n\n    this.network.addLayer(layer);\n    this.previousLayer = layer;\n  }\n\n  getNetwork(): Network {\n    return this.network;\n  }\n\n  abstract firstLayerTransition(layer: Layers);\n}\n\nexport { AbstractBuilder };\nexport default AbstractBuilder;\n","import { SoftmaxLayer, LogisticLayer } from \"./layer\";\n\nexport type Dimension = [number] | [number, number, number];\n\nexport enum LayerType {\n  logistic,\n  softmax,\n}\n\nexport type Layers = LogisticLayer | SoftmaxLayer;\nexport type Layers1D = LogisticLayer | SoftmaxLayer;\nexport type Layers2D = null;\n","import { add, Matrix, multiply } from \"../math/matrix\";\nimport { Dimension, Layers } from \"../types\";\n\nabstract class AbstractLayer {\n  public W: Matrix;\n  public b: Matrix;\n  public A: Matrix;\n  public Z: Matrix;\n  public gW: Matrix;\n  public gb: Matrix;\n\n  protected width: number = 0;\n  protected height: number = 0;\n  protected depth: number = 0;\n  protected previousLayer: Layers = null;\n\n  constructor() {\n    this.W = new Matrix();\n    this.b = new Matrix();\n    this.A = new Matrix();\n    this.Z = new Matrix();\n    this.gW = new Matrix();\n    this.gb = new Matrix();\n  }\n\n  forward(input: Matrix): Matrix {\n    this.Z = add(multiply(this.W, input), this.b);\n    this.A = this.activation(this.Z);\n    return this.A;\n  }\n\n  setWidth(value: number) {\n    this.width = value;\n  }\n\n  getWidth(): number {\n    return this.width;\n  }\n\n  setHeight(value: number) {\n    this.height = value;\n  }\n\n  getHeight(): number {\n    return this.height;\n  }\n\n  setDepth(value: number) {\n    this.depth = value;\n  }\n\n  getDepth(): number {\n    return this.depth;\n  }\n\n  abstract getOutputWidth();\n\n  abstract getOutputHeight();\n\n  abstract getOutputDepth();\n\n  abstract configure();\n\n  abstract is1D(): boolean;\n\n  abstract is3D(): boolean;\n\n  abstract transition(previousLayer: Layers);\n\n  abstract setSize(dimension: Dimension);\n\n  abstract getSize();\n\n  abstract activation(value: Matrix): Matrix;\n\n  abstract derivative(value: Matrix): Matrix;\n\n  abstract getType();\n\n  abstract loss(output: Matrix, predictions: Matrix): number;\n\n  abstract error(m: number): number;\n}\n\nexport { AbstractLayer };\n","import { AbstractLayer } from \"./abstract\";\nimport { fillRandom, resize } from \"../math/matrix\";\nimport { Dimension, Layers } from \"../types\";\n\nabstract class AbstractLayer1D extends AbstractLayer {\n  protected depth: number = 1;\n\n  configure() {\n    resize(this.W, this.height, this.width);\n    fillRandom(this.W, this.width);\n\n    resize(this.b, this.height, 1);\n    fillRandom(this.b, this.width);\n\n    resize(this.gW, this.height, this.width);\n    resize(this.gb, this.height, 1);\n  }\n\n  is1D(): boolean {\n    return true;\n  }\n\n  is3D(): boolean {\n    return false;\n  }\n\n  transition(previousLayer: Layers) {\n    if (previousLayer.is1D()) {\n      this.setWidth(previousLayer.getSize());\n    } else if (previousLayer.is3D()) {\n      this.setWidth(\n        previousLayer.getOutputWidth() *\n          previousLayer.getOutputHeight() *\n          previousLayer.getOutputDepth()\n      );\n    }\n  }\n\n  setSize(value: Dimension) {\n    this.setHeight(value[0]);\n  }\n\n  getSize(): number {\n    return this.height;\n  }\n\n  getOutputWidth() {\n    return this.width;\n  }\n\n  getOutputHeight() {\n    return this.height;\n  }\n\n  getOutputDepth() {\n    return 1;\n  }\n}\n\nexport { AbstractLayer1D };\n","import { Matrix, softmaxActivation, softmaxLoss } from \"../math/matrix\";\nimport { LayerType } from \"../types\";\nimport { AbstractLayer1D } from \"./abstract1d\";\n\nclass SoftmaxLayer extends AbstractLayer1D {\n  activation(m: Matrix): Matrix {\n    return softmaxActivation(m);\n  }\n\n  derivative(): Matrix {\n    throw new Error(\"Unsupported usage.\");\n  }\n\n  getType(): LayerType {\n    return LayerType.softmax;\n  }\n\n  loss(output: Matrix, predictions: Matrix): number {\n    return softmaxLoss(output, predictions);\n  }\n\n  error(m: number): number {\n    return -1.0 / m;\n  }\n}\n\nexport { SoftmaxLayer };\n","import {\n  logisticActivation,\n  logisticDerivative,\n  Matrix,\n  logisticLoss,\n} from \"../math/matrix\";\nimport { LayerType } from \"../types\";\nimport { AbstractLayer1D } from \"./abstract1d\";\n\nclass LogisticLayer extends AbstractLayer1D {\n  activation(m: Matrix): Matrix {\n    return logisticActivation(m);\n  }\n\n  derivative(): Matrix {\n    return logisticDerivative(this.A);\n  }\n\n  getType(): LayerType {\n    return LayerType.logistic;\n  }\n\n  loss(output: Matrix, predictions: Matrix): number {\n    return logisticLoss(output, predictions);\n  }\n\n  error(m: number): number {\n    return -1.0 / m;\n  }\n}\n\nexport { LogisticLayer };\n"],"names":["process","dlopen","module","__dirname","error","Error","exports","require","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","id","loaded","__webpack_modules__","d","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","r","Symbol","toStringTag","value","nmd","paths","children","p","Matrix","rows","cols","this","resize","data","Array","multiply","m1","m2","result","MatrixMultiply","fillRandom","i","MatrixFillRandom","Network","dimensions","layer","size","layers","push","input","output","forEach","forward","X","Y","predictions","regularization","MatrixElementWiseSubtract","subtract","reverse","Builder1D","setWidth","AbstractBuilder","dimension","network","type","callback","previousLayer","firstLayerTransition","transition","configure","addLayer","LayerType","AbstractLayer","W","b","A","Z","gW","gb","MatrixElementWiseAdd","add","activation","width","height","depth","AbstractLayer1D","is1D","getSize","is3D","getOutputWidth","getOutputHeight","getOutputDepth","setHeight","SoftmaxLayer","m","SoftmaxActivation","softmaxActivation","softmax","SoftmaxLoss","MatrixSum","LogisticLayer","LogisticActivation","logisticActivation","LogisticDerivative","logistic","LogisticLoss"],"sourceRoot":""}