{"version":3,"file":"impulse-ts.js","mappings":"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","sources":["webpack://impulse-ts/./build/Debug/impulseTsToolkit.node","webpack://impulse-ts/external \"path\"","webpack://impulse-ts/webpack/bootstrap","webpack://impulse-ts/webpack/runtime/define property getters","webpack://impulse-ts/webpack/runtime/hasOwnProperty shorthand","webpack://impulse-ts/webpack/runtime/make namespace object","webpack://impulse-ts/webpack/runtime/node module decorator","webpack://impulse-ts/webpack/runtime/publicPath","webpack://impulse-ts/external \"gpu.js\"","webpack://impulse-ts/./src/typescript/math/matrix.tsx","webpack://impulse-ts/external \"fs\"","webpack://impulse-ts/./src/typescript/network.tsx","webpack://impulse-ts/./src/typescript/builder/builder1d.tsx","webpack://impulse-ts/./src/typescript/builder/abstract.tsx","webpack://impulse-ts/./src/typescript/types.tsx","webpack://impulse-ts/./src/typescript/layer/abstract.tsx","webpack://impulse-ts/./src/typescript/layer/abstract1d.tsx","webpack://impulse-ts/./src/typescript/layer/softmax.tsx","webpack://impulse-ts/./src/typescript/layer/logistic.tsx"],"sourcesContent":["\ntry {\n  process.dlopen(module, __dirname + require(\"path\").sep + __webpack_public_path__ + \"202c32a4ae9e32b7853b0812ae623972.node\");\n} catch (error) {\n  throw new Error('node-loader:\\n' + error);\n}\n","module.exports = require(\"path\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = (module) => {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","__webpack_require__.p = \"\";","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"gpu.js\");","import {\n    MatrixSum,\n    SoftmaxActivation,\n    SoftmaxLoss,\n    LogisticActivation,\n    LogisticDerivative,\n    LogisticLoss,\n} from \"impulseTsToolkit\";\nimport {GPU, input} from \"gpu.js\";\n\nexport class Matrix {\n    public rows = 0;\n    public cols = 0;\n    public data = null;\n\n    constructor(rows = 0, cols = 0, data = new Array(rows * cols)) {\n        this.resize(rows, cols);\n        this.generateData(data);\n    }\n\n    resize(rows, cols): Matrix {\n        this.rows = rows;\n        this.cols = cols;\n        this.data = Float64Array.from(new Array(rows * cols));\n\n        return this;\n    }\n\n    generateData(arr: Array<number> = new Array()): Matrix {\n        this.data = Float64Array.from(arr);\n        return this;\n    }\n\n    toBuffer(): ArrayBuffer {\n        const result = new ArrayBuffer(this.rows * this.cols * 64);\n        const view = new DataView(result, 0, this.rows * this.cols * 64);\n        this.data.forEach((num, i) => {\n            view.setFloat64(i, num);\n        })\n        return result;\n    }\n\n    sum(): number {\n        let sum = 0.0;\n        this.data.forEach((num) => {\n            sum += num;\n        });\n        return sum;\n    }\n\n    colwiseSum(): Matrix {\n        const data = new Array(this.rows);\n        for (let row = 0; row < this.rows; row += 1) {\n            let sum = 0.0;\n            for (let col = 0; col < this.cols; col += 1) {\n                sum += this.data[row * col];\n            }\n            data[row] = sum;\n        }\n        return new Matrix(this.rows, 1, data)\n    }\n\n    replicate(rows: number, cols: number): Matrix {\n        return this;\n    }\n}\n\nexport const multiply = (m1: Matrix, m2: Matrix): Matrix => {\n    if (m1.cols !== m2.rows) {\n        throw new Error(\"DIMENSIONS error.\");\n    }\n\n    const gpu = new GPU();\n    const kernel = gpu.createKernel(function (a, b) {\n        let sum = 0;\n        for (let i = 0; i < this.constants.cols; i++) {\n            sum += a[this.thread.x][i] * b[i][this.thread.y];\n        }\n        return sum;\n    }).setOutput([m1.rows * m2.cols]).setConstants({\n        cols: m1.rows,\n    });\n\n    const data = kernel(input(m1.data, [m1.rows, m1.cols]), input(m2.data, [m2.rows, m2.cols]));\n    return new Matrix(m1.rows, m2.cols, Array.from(data));\n};\n\nexport const elementWiseAdd = (m1: Matrix, m2: Matrix): Matrix => {\n    if (m1.rows !== m2.rows) {\n        throw new Error(\"ROWS number not equal.\");\n    }\n    if (m1.cols !== m2.cols) {\n        throw new Error(\"COLS number not equal.\");\n    }\n\n    const gpu = new GPU();\n    const kernel = gpu.createKernel(function (a, b) {\n        return a[this.thread.x][this.thread.y] + b[this.thread.x][this.thread.y];\n    }).setOutput([m1.rows * m2.cols])\n    const data = kernel(input(m1.data, [m1.rows, m1.cols]), input(m2.data, [m2.rows, m2.cols]));\n    const result = new Matrix(m1.rows, m2.cols, Array.from(data));\n\n    return result;\n};\n\nexport const elementWiseSubtract = (m1: Matrix, m2: Matrix): Matrix => {\n    if (m1.rows !== m2.rows) {\n        throw new Error(\"ROWS number not equal.\");\n    }\n    if (m1.cols !== m2.cols) {\n        throw new Error(\"COLS number not equal.\");\n    }\n\n    const gpu = new GPU();\n    const kernel = gpu.createKernel(function (a, b) {\n        return a[this.thread.x][this.thread.y] - b[this.thread.x][this.thread.y];\n    }).setOutput([m1.cols * m1.rows])\n    const data = kernel(input(m1.data, [m1.rows, m1.cols]), input(m2.data, [m2.rows, m2.cols]));\n    const result = new Matrix(m1.rows, m2.cols, Array.from(data));\n\n    return result;\n};\n\nexport const fillRandom = (m1: Matrix, parameter: number): Matrix => {\n    const gpu = new GPU();\n    const kernel = gpu.createKernel(function (a) {\n        return Math.random() * Math.sqrt(2.0 / this.constants.parameter);\n    }).setOutput([m1.cols * m1.rows]).setConstants({\n        parameter\n    })\n    const data = kernel(input(m1.data, [m1.rows, m1.cols]));\n    const result = new Matrix(m1.rows, m1.cols, Array.from(data));\n\n    return result;\n};\n\nexport const setZeros = (m1: Matrix): Matrix => {\n    const gpu = new GPU();\n    const kernel = gpu.createKernel(function (a) {\n        return 0.0;\n    }).setOutput([m1.cols * m1.rows])\n    const data = kernel(input(m1.data, [m1.rows, m1.cols]));\n    const result = new Matrix(m1.rows, m1.cols, Array.from(data));\n\n    return result;\n};\n\nexport const elementWiseMultiply = (m1: Matrix, m2: Matrix): Matrix => {\n    if (m1.rows !== m2.rows) {\n        throw new Error(\"ROWS number not equal.\");\n    }\n    if (m1.cols !== m2.cols) {\n        throw new Error(\"COLS number not equal.\");\n    }\n\n    const gpu = new GPU();\n    const kernel = gpu.createKernel(function (a, b) {\n        return a[this.thread.x][this.thread.y] * b[this.thread.x][this.thread.y];\n    }).setOutput([m1.cols * m1.rows])\n    const data = kernel(input(m1.data, [m1.rows, m1.cols]), input(m2.data, [m2.rows, m2.cols]));\n    const result = new Matrix(m1.rows, m2.cols, Array.from(data));\n\n    return result;\n};\n\nexport const sum = (m: Matrix): number => {\n    return m.sum();\n};\n\nexport const cols = (m: Matrix): number => {\n    return m.cols;\n};\n\nexport const elementWiseDivide = (m1: Matrix, m2: Matrix): Matrix => {\n    if (m1.rows !== m2.rows) {\n        throw new Error(\"ROWS number not equal.\");\n    }\n    if (m1.cols !== m2.cols) {\n        throw new Error(\"COLS number not equal.\");\n    }\n\n    const gpu = new GPU();\n    const kernel = gpu.createKernel(function (a, b) {\n        return a[this.thread.x][this.thread.y] / b[this.thread.x][this.thread.y];\n    }).setOutput([m1.cols * m1.rows])\n    const data = kernel(input(m1.data, [m1.rows, m1.cols]), input(m2.data, [m2.rows, m2.cols]));\n    const result = new Matrix(m1.rows, m2.cols, Array.from(data));\n\n    return result;\n};\n\nexport const softmaxActivation = (m: Matrix): Matrix => {\n    const gpu = new GPU();\n    const kernel = gpu.createKernel(function (a) {\n        return Math.exp(a[this.thread.x][this.thread.y]);\n    }).setOutput([m.cols * m.rows]);\n    const data = new Matrix(m.rows, m.cols, Array.from(kernel(input(m.data, [m.rows, m.cols]))));\n    const divider = new Matrix(m.rows, 1, data.colwiseSum().data).replicate(m.rows, 1);\n    const result = new Matrix(m.rows, m.cols, elementWiseDivide(data, divider).data);\n    return result;\n};\n\nexport const softmaxLoss = (m1: Matrix, m2: Matrix): number => {\n    const result = new Matrix(m1.rows, m1.cols);\n    result.data = SoftmaxLoss(\n        m1.data,\n        m1.rows,\n        m1.cols,\n        m2.data,\n        m2.rows,\n        m2.cols\n    );\n    return MatrixSum(result, result.rows, result.cols);\n};\n\nexport const logisticActivation = (m: Matrix): Matrix => {\n    const gpu = new GPU();\n    const kernel = gpu.createKernel(function (a) {\n        return 1.0 / (1.0 + Math.exp(-a[this.thread.x][this.thread.y]));\n    }).setOutput([m.cols * m.rows]);\n    const data = kernel(input(m.data, [m.rows, m.cols]));\n    const result = new Matrix(m.rows, m.cols, Array.from(data));\n    return result;\n};\n\nexport const logisticDerivative = (m: Matrix): Matrix => {\n    const gpu = new GPU();\n    const kernel = gpu.createKernel(function (a) {\n        return a[this.thread.x][this.thread.y] * (1.0 - a[this.thread.x][this.thread.y]);\n    }).setOutput([m.cols * m.rows]);\n    const data = kernel(input(m.data, [m.rows, m.cols]));\n    const result = new Matrix(m.rows, m.cols, Array.from(data));\n    return result;\n};\n\nexport const logisticLoss = (output: Matrix, predictions: Matrix): number => {\n    const gpu = new GPU();\n    const kernel = gpu.createKernel(function (a) {\n        return Math.log(a[this.thread.x][this.thread.y]);\n    }).setOutput([output.cols * output.rows]);\n    const output2 = new Matrix(output.rows, output.cols, kernel(input(output.data, [output.rows, output.cols])) as number[]);\n    return elementWiseSubtract(output2, predictions).sum();\n};\n","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"fs\");","import { Dimension, Layers } from \"./types\";\nimport { cols, Matrix, elementWiseSubtract } from \"./math/matrix\";\nimport * as fs from \"fs\";\n\nclass Network {\n  private dimensions: Dimension = null;\n  private size: number = 0;\n  private layers: Layers[] = [];\n\n  constructor(dimensions: Dimension) {\n    this.dimensions = dimensions;\n  }\n\n  addLayer(layer: Layers) {\n    this.size++;\n    this.layers.push(layer);\n  }\n\n  forward(input: Matrix): Matrix {\n    let output = input;\n\n    this.layers.forEach((layer: Layers) => {\n      output = layer.forward(output);\n    });\n\n    return output;\n  }\n\n  backward(X: Matrix, Y: Matrix, predictions: Matrix, regularization: number) {\n    const m = cols(X);\n\n    let delta = elementWiseSubtract(predictions, Y);\n\n    this.layers.reverse().forEach((layer) => {\n      // delta = layer.backpropagation.propagate(X, m, regularization, delta)\n    });\n  }\n\n  save(path: string): Promise<string> {\n    const resultJSON = {\n      dimensions: this.dimensions,\n      layers: [],\n    };\n\n    this.layers.forEach((layer: Layers) => {\n      resultJSON.layers.push({\n        type: layer.getType(),\n        dimensions: [\n          layer.getOutputHeight(),\n          layer.getOutputWidth(),\n          layer.getOutputDepth(),\n        ],\n        weights: {\n          W: layer.W.data,\n          b: layer.b.data,\n        },\n      });\n    });\n\n    const result = JSON.stringify(resultJSON);\n\n    return new Promise((resolve, reject) => {\n      fs.writeFile(path, result, (err) => {\n        if (err) {\n          console.error(err);\n          reject();\n        }\n        resolve(result);\n      });\n    });\n  }\n}\n\nexport { Network };\nexport default Network;\n","import { AbstractBuilder } from \"./abstract\";\nimport { Layers } from \"../types\";\n\nclass Builder1D extends AbstractBuilder {\n  firstLayerTransition(layer: Layers) {\n    layer.setWidth(this.dimensions[0]);\n  }\n}\n\nexport { Builder1D };\nexport default Builder1D;\n","import { Dimension, Layers } from \"../types\";\nimport Network from \"../network\";\n\nabstract class AbstractBuilder {\n  protected dimensions: Dimension = null;\n  protected previousLayer: Layers = null;\n  protected network: Network = null;\n\n  constructor(dimension: Dimension) {\n    this.dimensions = dimension;\n    this.network = new Network(dimension);\n  }\n\n  createLayer(type: Layers, callback: Function) {\n    const layer = new type();\n\n    if (typeof callback === \"function\") {\n      callback(layer);\n    }\n\n    if (this.previousLayer === null) {\n      this.firstLayerTransition(layer);\n    } else {\n      layer.transition(this.previousLayer);\n    }\n\n    layer.configure();\n\n    this.network.addLayer(layer);\n    this.previousLayer = layer;\n  }\n\n  getNetwork(): Network {\n    return this.network;\n  }\n\n  abstract firstLayerTransition(layer: Layers);\n}\n\nexport { AbstractBuilder };\nexport default AbstractBuilder;\n","import { SoftmaxLayer, LogisticLayer } from \"./layer\";\n\nexport type Dimension = [number] | [number, number, number];\n\nexport enum LayerType {\n  logistic = \"logistic\",\n  softmax = \"softmax\",\n}\n\nexport type Layers = LogisticLayer | SoftmaxLayer;\nexport type Layers1D = LogisticLayer | SoftmaxLayer;\nexport type Layers2D = null;\n","import { elementWiseAdd, Matrix, multiply } from \"../math/matrix\";\nimport { Dimension, Layers } from \"../types\";\n\nabstract class AbstractLayer {\n  public W: Matrix;\n  public b: Matrix;\n  public A: Matrix;\n  public Z: Matrix;\n  public gW: Matrix;\n  public gb: Matrix;\n\n  protected width: number = 0;\n  protected height: number = 0;\n  protected depth: number = 0;\n  protected previousLayer: Layers = null;\n\n  constructor() {\n    this.W = new Matrix();\n    this.b = new Matrix();\n    this.A = new Matrix();\n    this.Z = new Matrix();\n    this.gW = new Matrix();\n    this.gb = new Matrix();\n  }\n\n  forward(input: Matrix): Matrix {\n    this.Z = elementWiseAdd(multiply(this.W, input), this.b);\n    this.A = this.activation(this.Z);\n    return this.A;\n  }\n\n  setWidth(value: number) {\n    this.width = value;\n  }\n\n  getWidth(): number {\n    return this.width;\n  }\n\n  setHeight(value: number) {\n    this.height = value;\n  }\n\n  getHeight(): number {\n    return this.height;\n  }\n\n  setDepth(value: number) {\n    this.depth = value;\n  }\n\n  getDepth(): number {\n    return this.depth;\n  }\n\n  abstract getOutputWidth();\n\n  abstract getOutputHeight();\n\n  abstract getOutputDepth();\n\n  abstract configure();\n\n  abstract is1D(): boolean;\n\n  abstract is3D(): boolean;\n\n  abstract transition(previousLayer: Layers);\n\n  abstract setSize(dimension: Dimension);\n\n  abstract getSize();\n\n  abstract activation(value: Matrix): Matrix;\n\n  abstract derivative(value: Matrix): Matrix;\n\n  abstract getType();\n\n  abstract loss(output: Matrix, predictions: Matrix): number;\n\n  abstract error(m: number): number;\n}\n\nexport { AbstractLayer };\n","import { AbstractLayer } from \"./abstract\";\nimport { fillRandom, setZeros } from \"../math/matrix\";\nimport { Dimension, Layers } from \"../types\";\n\nabstract class AbstractLayer1D extends AbstractLayer {\n  protected depth: number = 1;\n\n  configure() {\n    this.W.resize(this.height, this.width);\n    this.W = fillRandom(this.W, this.width);\n\n    this.b.resize(this.height, 1);\n    this.b = fillRandom(this.b, this.width);\n\n    this.gW.resize(this.height, this.width);\n    this.gW = setZeros(this.gW);\n\n    this.gb.resize(this.height, 1);\n    this.gb = setZeros(this.gb);\n  }\n\n  is1D(): boolean {\n    return true;\n  }\n\n  is3D(): boolean {\n    return false;\n  }\n\n  transition(previousLayer: Layers) {\n    if (previousLayer.is1D()) {\n      this.setWidth(previousLayer.getSize());\n    } else if (previousLayer.is3D()) {\n      this.setWidth(\n        previousLayer.getOutputWidth() *\n          previousLayer.getOutputHeight() *\n          previousLayer.getOutputDepth()\n      );\n    }\n  }\n\n  setSize(value: Dimension) {\n    this.setHeight(value[0]);\n  }\n\n  getSize(): number {\n    return this.height;\n  }\n\n  getOutputWidth() {\n    return this.width;\n  }\n\n  getOutputHeight() {\n    return this.height;\n  }\n\n  getOutputDepth() {\n    return 1;\n  }\n}\n\nexport { AbstractLayer1D };\n","import { Matrix, softmaxActivation, softmaxLoss } from \"../math/matrix\";\nimport { LayerType } from \"../types\";\nimport { AbstractLayer1D } from \"./abstract1d\";\n\nclass SoftmaxLayer extends AbstractLayer1D {\n  activation(m: Matrix): Matrix {\n    return softmaxActivation(m);\n  }\n\n  derivative(): Matrix {\n    throw new Error(\"Unsupported usage.\");\n  }\n\n  getType(): LayerType {\n    return LayerType.softmax;\n  }\n\n  loss(output: Matrix, predictions: Matrix): number {\n    return softmaxLoss(output, predictions);\n  }\n\n  error(m: number): number {\n    return -1.0 / m;\n  }\n}\n\nexport { SoftmaxLayer };\n","import {\n  logisticActivation,\n  logisticDerivative,\n  Matrix,\n  logisticLoss,\n} from \"../math/matrix\";\nimport { LayerType } from \"../types\";\nimport { AbstractLayer1D } from \"./abstract1d\";\n\nclass LogisticLayer extends AbstractLayer1D {\n  activation(m: Matrix): Matrix {\n    return logisticActivation(m);\n  }\n\n  derivative(): Matrix {\n    return logisticDerivative(this.A);\n  }\n\n  getType(): LayerType {\n    return LayerType.logistic;\n  }\n\n  loss(output: Matrix, predictions: Matrix): number {\n    return logisticLoss(output, predictions);\n  }\n\n  error(m: number): number {\n    return -1.0 / m;\n  }\n}\n\nexport { LogisticLayer };\n"],"names":["process","dlopen","module","__dirname","error","Error","exports","require","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","id","loaded","__webpack_modules__","d","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","r","Symbol","toStringTag","value","nmd","paths","children","p","Matrix","rows","cols","data","Array","this","resize","generateData","Float64Array","from","arr","result","ArrayBuffer","view","DataView","forEach","num","i","setFloat64","sum","row","col","multiply","m1","m2","GPU","createKernel","a","b","constants","thread","x","y","setOutput","setConstants","kernel","input","elementWiseAdd","elementWiseSubtract","fillRandom","parameter","Math","random","sqrt","setZeros","elementWiseMultiply","m","elementWiseDivide","Network","dimensions","layer","size","layers","push","output","forward","X","Y","predictions","regularization","reverse","path","resultJSON","type","getType","getOutputHeight","getOutputWidth","getOutputDepth","weights","W","JSON","stringify","Promise","resolve","reject","fs","err","console","Builder1D","setWidth","AbstractBuilder","dimension","network","callback","previousLayer","firstLayerTransition","transition","configure","addLayer","LayerType","AbstractLayer","A","Z","gW","gb","activation","width","height","depth","AbstractLayer1D","is1D","getSize","is3D","setHeight","SoftmaxLayer","exp","divider","colwiseSum","replicate","softmaxActivation","softmax","SoftmaxLoss","MatrixSum","LogisticLayer","logisticActivation","logistic","log","output2","logisticLoss"],"sourceRoot":""}