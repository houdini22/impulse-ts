{"version":3,"file":"impulse-ts.dev.js","mappings":"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","sources":["webpack://impulse-ts/./src/typescript/builder/abstract.tsx","webpack://impulse-ts/./src/typescript/builder/builder1d.tsx","webpack://impulse-ts/./src/typescript/builder/builder3d.tsx","webpack://impulse-ts/./src/typescript/dataset/dataset.tsx","webpack://impulse-ts/./src/typescript/dataset/datasetbuilder.tsx","webpack://impulse-ts/./src/typescript/dataset/datasetmodifier/abstract.tsx","webpack://impulse-ts/./src/typescript/dataset/datasetmodifier/callback.tsx","webpack://impulse-ts/./src/typescript/dataset/datasetmodifier/minmaxscaling.tsx","webpack://impulse-ts/./src/typescript/dataset/datasetmodifier/missingdata.tsx","webpack://impulse-ts/./src/typescript/layer/abstract.tsx","webpack://impulse-ts/./src/typescript/layer/abstract1d.tsx","webpack://impulse-ts/./src/typescript/layer/abstract3d.tsx","webpack://impulse-ts/./src/typescript/layer/backpropagation/abstract.tsx","webpack://impulse-ts/./src/typescript/layer/backpropagation/backpropagation1dto1d.tsx","webpack://impulse-ts/./src/typescript/layer/backpropagation/backpropagationto3dto1d.tsx","webpack://impulse-ts/./src/typescript/layer/backpropagation/backpropagationtoconv.tsx","webpack://impulse-ts/./src/typescript/layer/backpropagation/backpropagationtomaxpool.tsx","webpack://impulse-ts/./src/typescript/layer/backpropagation/factory.tsx","webpack://impulse-ts/./src/typescript/layer/conv.tsx","webpack://impulse-ts/./src/typescript/layer/fullyconnected.tsx","webpack://impulse-ts/./src/typescript/layer/index.tsx","webpack://impulse-ts/./src/typescript/layer/logistic.tsx","webpack://impulse-ts/./src/typescript/layer/maxpool.tsx","webpack://impulse-ts/./src/typescript/layer/relu.tsx","webpack://impulse-ts/./src/typescript/layer/softmax.tsx","webpack://impulse-ts/./src/typescript/layer/softplus.tsx","webpack://impulse-ts/./src/typescript/layer/tanh.tsx","webpack://impulse-ts/./src/typescript/math/math.tsx","webpack://impulse-ts/./src/typescript/math/matrix.tsx","webpack://impulse-ts/./src/typescript/network.tsx","webpack://impulse-ts/./src/typescript/trainer/abstract.tsx","webpack://impulse-ts/./src/typescript/trainer/minibatch.tsx","webpack://impulse-ts/./src/typescript/trainer/optimizer/abstract.tsx","webpack://impulse-ts/./src/typescript/trainer/optimizer/adam.tsx","webpack://impulse-ts/./src/typescript/trainer/optimizer/gradientdescent.tsx","webpack://impulse-ts/./src/typescript/types.tsx","webpack://impulse-ts/external \"csvtojson\"","webpack://impulse-ts/external \"fs\"","webpack://impulse-ts/external \"gpu.js\"","webpack://impulse-ts/webpack/bootstrap","webpack://impulse-ts/webpack/runtime/compat get default export","webpack://impulse-ts/webpack/runtime/define property getters","webpack://impulse-ts/webpack/runtime/hasOwnProperty shorthand","webpack://impulse-ts/webpack/runtime/make namespace object","webpack://impulse-ts/./src/typescript/main.tsx"],"sourcesContent":["import { Dimension, Layers } from \"../types\";\nimport Network from \"../network\";\nimport { BackpropagationFactory } from \"../layer/backpropagation/factory\";\n\nabstract class AbstractBuilder {\n  protected dimensions: Dimension = null;\n  protected lastLayer: Layers = null;\n  protected network: Network = null;\n\n  constructor(dimension: Dimension) {\n    this.dimensions = dimension;\n    this.network = new Network(dimension);\n  }\n\n  createLayer(type: Layers, callback: Function) {\n    // @ts-ignore\n    const layer = new type();\n\n    if (typeof callback === \"function\") {\n      callback(layer);\n    }\n\n    if (this.lastLayer === null) {\n      this.firstLayerTransition(layer);\n    } else {\n      layer.transition(this.lastLayer);\n    }\n\n    layer.configure();\n    layer.setBackPropagation(\n      BackpropagationFactory.create(this.lastLayer, layer)\n    );\n\n    this.network.addLayer(layer);\n    this.lastLayer = layer;\n  }\n\n  getNetwork(): Network {\n    return this.network;\n  }\n\n  abstract firstLayerTransition(layer: Layers);\n}\n\nexport { AbstractBuilder };\nexport default AbstractBuilder;\n","import { AbstractBuilder } from \"./abstract\";\nimport { Layers } from \"../types\";\nimport Network from \"../network\";\nimport * as fs from \"fs\";\nimport {\n  LogisticLayer,\n  ReluLayer,\n  SoftmaxLayer,\n  SoftplusLayer,\n  TanhLayer,\n} from \"../layer/\";\n\nclass Builder1D extends AbstractBuilder {\n  firstLayerTransition(layer: Layers) {\n    layer.setWidth(this.dimensions[0]);\n  }\n\n  static fromJSON(jsonPath: string): Promise<Network> {\n    return new Promise((resolve, reject) => {\n      fs.readFile(jsonPath, (err, data) => {\n        if (err) {\n          reject(err);\n          return;\n        }\n        const json = JSON.parse(data.toString());\n\n        const builder = new Builder1D(json[\"dimensions\"]);\n\n        json[\"layers\"].forEach((layerData) => {\n          let layerClass = null;\n\n          if (layerData[\"type\"] === \"logistic\") {\n            layerClass = LogisticLayer;\n          } else if (layerData[\"type\"] === \"softmax\") {\n            layerClass = SoftmaxLayer;\n          } else if (layerData[\"type\"] === \"relu\") {\n            layerClass = ReluLayer;\n          } else if (layerData[\"type\"] === \"softplus\") {\n            layerClass = SoftplusLayer;\n          } else if (layerData[\"type\"] === \"tanh\") {\n            layerClass = TanhLayer;\n          }\n\n          builder.createLayer(layerClass, (layer) => {\n            layer.setSize(layerData[\"dimensions\"]);\n          });\n        });\n\n        const network = builder.getNetwork();\n\n        network.getLayers().forEach((layer, i) => {\n          layer.W = json[\"layers\"][\"W\"];\n          layer.b = json[\"layers\"][\"b\"];\n        });\n\n        resolve(network);\n      });\n    });\n  }\n}\n\nexport { Builder1D };\n","import { AbstractBuilder } from \"./abstract\";\nimport { Layers } from \"../types\";\nimport Network from \"../network\";\nimport * as fs from \"fs\";\nimport {\n  LogisticLayer,\n  ReluLayer,\n  SoftmaxLayer,\n  SoftplusLayer,\n  TanhLayer,\n} from \"../layer/\";\nimport { ConvLayer } from \"../layer/conv\";\nimport { MaxPoolLayer } from \"../layer/maxpool\";\n\nclass Builder3D extends AbstractBuilder {\n  firstLayerTransition(layer: Layers) {\n    layer.setSize(this.dimensions);\n  }\n\n  static fromJSON(jsonPath: string): Promise<Network> {\n    return new Promise((resolve, reject) => {\n      fs.readFile(jsonPath, (err, data) => {\n        if (err) {\n          reject(err);\n          return;\n        }\n        const json = JSON.parse(data.toString());\n\n        const builder = new Builder3D(json[\"dimensions\"]);\n\n        json[\"layers\"].forEach((layerData) => {\n          let layerClass = null;\n\n          if (layerData[\"type\"] === \"logistic\") {\n            layerClass = LogisticLayer;\n            builder.createLayer(layerClass, (layer) => {\n              layer.setSize(layerData[\"dimensions\"]);\n            });\n          } else if (layerData[\"type\"] === \"softmax\") {\n            layerClass = SoftmaxLayer;\n            builder.createLayer(layerClass, (layer) => {\n              layer.setSize(layerData[\"dimensions\"]);\n            });\n          } else if (layerData[\"type\"] === \"relu\") {\n            layerClass = ReluLayer;\n            builder.createLayer(layerClass, (layer) => {\n              layer.setSize(layerData[\"dimensions\"]);\n            });\n          } else if (layerData[\"type\"] === \"softplus\") {\n            layerClass = SoftplusLayer;\n            builder.createLayer(layerClass, (layer) => {\n              layer.setSize(layerData[\"dimensions\"]);\n            });\n          } else if (layerData[\"type\"] === \"tanh\") {\n            layerClass = TanhLayer;\n            builder.createLayer(layerClass, (layer) => {\n              layer.setSize(layerData[\"dimensions\"]);\n            });\n          } else if (layerData[\"type\"] === \"conv\") {\n            layerClass = ConvLayer;\n            builder.createLayer(layerClass, (layer) => {\n              layer.setSize(layerData[\"dimensions\"]);\n              layer.setFilterSize(layerData[\"filterSize\"]);\n              layer.setStride(layerData[\"stride\"]);\n              layer.setNumFilters(layerData[\"numFilters\"]);\n              layer.setPadding(layerData[\"padding\"]);\n            });\n          } else if (layerData[\"type\"] === \"maxpool\") {\n            layerClass = MaxPoolLayer;\n            builder.createLayer(layerClass, (layer) => {\n              layer.setSize(layerData[\"dimensions\"]);\n              layer.setFilterSize(layerData[\"filterSize\"]);\n              layer.setStride(layerData[\"stride\"]);\n            });\n          } else if (layerData[\"type\"] === \"fullyconnected\") {\n            layerClass = MaxPoolLayer;\n            builder.createLayer(layerClass, (layer) => {});\n          }\n        });\n\n        const network = builder.getNetwork();\n\n        network.getLayers().forEach((layer, i) => {\n          layer.W = json[\"layers\"][\"W\"];\n          layer.b = json[\"layers\"][\"b\"];\n        });\n\n        resolve(network);\n      });\n    });\n  }\n}\n\nexport { Builder3D };\n","import { Matrix } from \"../math/matrix\";\n\nexport class Dataset {\n  public exampleSize: number = 0;\n  public numberOfExamples: number = 0;\n  public data: Matrix = null;\n\n  constructor(exampleSize: number, numberOfExamples: number, arr: string[][]) {\n    this.exampleSize = exampleSize;\n    this.numberOfExamples = numberOfExamples;\n    const data = [];\n\n    for (let example = 0; example < numberOfExamples; example += 1) {\n      data[example] = [];\n      for (let dataIndex = 0; dataIndex < exampleSize; dataIndex += 1) {\n        data[example][dataIndex] = arr[example][dataIndex].length\n          ? Number(arr[example][dataIndex])\n          : NaN;\n      }\n    }\n\n    this.data = new Matrix(this.exampleSize, this.numberOfExamples, data);\n  }\n\n  exampleAt(index: number): Matrix {\n    return this.data.col(index);\n  }\n\n  getNumberOfExamples(): number {\n    return this.numberOfExamples;\n  }\n\n  getBatch(offset: number, batchSize: number): Matrix {\n    return this.data.block(0, offset, this.data.rows, batchSize);\n  }\n}\n","import * as csvtojson from \"csvtojson\";\nimport { Dataset } from \"./dataset\";\n\nexport class DatasetBuilder {\n  static fromCSV(csvPath: string): Promise<Dataset> {\n    return new Promise((resolve) => {\n      csvtojson({\n        noheader: true,\n        output: \"csv\",\n      })\n        .fromFile(csvPath)\n        .then((arr) => {\n          const numberOfExamples = arr.length;\n          const exampleSize = arr[0].length;\n\n          const dataset = new Dataset(exampleSize, numberOfExamples, arr);\n          resolve(dataset);\n        });\n    });\n  }\n}\n","import { Dataset } from \"../dataset\";\n\nexport abstract class AbstractDatasetModifier {\n  protected dataset: Dataset = null;\n\n  constructor(dataset: Dataset) {\n    this.dataset = dataset;\n  }\n\n  apply(): Dataset {\n    for (\n      let example = 0;\n      example < this.dataset.getNumberOfExamples();\n      example += 1\n    ) {\n      this.applyToExample(example);\n    }\n\n    return this.dataset;\n  }\n\n  abstract applyToExample(example: number): void;\n}\n","import { AbstractDatasetModifier } from \"./abstract\";\n\nexport class CallbackDatabaseModifier extends AbstractDatasetModifier {\n  protected callback: Function = (example) => example;\n\n  applyToExample(example: number) {\n    for (\n      let exampleIndex = 0;\n      exampleIndex < this.dataset.getNumberOfExamples();\n      exampleIndex += 1\n    ) {\n      const example = this.callback(this.dataset.exampleAt(exampleIndex));\n      for (let row = 0; row < this.dataset.data.data.rows; row += 1) {\n        this.dataset.data.data[row][exampleIndex] = example.data.data[row][0];\n      }\n    }\n  }\n\n  setCallback(callback: Function): CallbackDatabaseModifier {\n    this.callback = callback;\n    return this;\n  }\n}\n","import { AbstractDatasetModifier } from \"./abstract\";\nimport { gpu } from \"../../math/matrix\";\n\nexport class MinMaxScalingDatabaseModifier extends AbstractDatasetModifier {\n  applyToExample(example: number) {\n    let min = Infinity;\n    let max = -Infinity;\n\n    for (\n      let exampleIndex = 0;\n      exampleIndex < this.dataset.getNumberOfExamples();\n      exampleIndex += 1\n    ) {\n      const example = this.dataset.exampleAt(exampleIndex);\n      for (let row = 0; row < example.rows; row += 1) {\n        min = Math.min(example.data[row][0]);\n        max = Math.max(example.data[row][0]);\n      }\n    }\n\n    const kernel = gpu\n      .createKernel(function (a) {\n        // @ts-ignore\n        return (\n          (a[this.thread.x][this.thread.y] - this.constants.min) /\n          (this.constants.max - this.constants.min)\n        );\n      })\n      .setOutput([this.dataset.data.data.rows, this.dataset.data.data.cols])\n      .setConstants({\n        min,\n        max,\n      });\n    this.dataset.data.data = kernel(this.dataset.data.data);\n  }\n}\n","import { AbstractDatasetModifier } from \"./abstract\";\n\nexport class MissingDataScalingDatabaseModifier extends AbstractDatasetModifier {\n  protected modificationType: string = \"mean\";\n\n  applyToExample(example: number) {\n    const rowsToFill = [];\n    let correctExamplesCount = 0;\n    let sum = 0;\n    let valueToFill = 0;\n\n    for (\n      let exampleIndex = 0;\n      exampleIndex < this.dataset.getNumberOfExamples();\n      exampleIndex += 1\n    ) {\n      const example = this.dataset.exampleAt(exampleIndex);\n      for (let row = 0; row < example.data.rows; row += 1) {\n        if (isNaN(example[row][0])) {\n          rowsToFill.push({\n            row,\n            col: example,\n          });\n        } else {\n          sum += example[row][0];\n          correctExamplesCount++;\n        }\n      }\n    }\n\n    if (this.modificationType === \"mean\") {\n      valueToFill = sum / correctExamplesCount;\n    }\n\n    rowsToFill.forEach(({ row, col }) => {\n      this.dataset.data.data[row][col] = valueToFill;\n    });\n  }\n\n  setModificationType(type: string): MissingDataScalingDatabaseModifier {\n    this.modificationType = type;\n    return this;\n  }\n}\n","import { elementWiseAdd, Matrix, multiply, penalty } from \"../math/matrix\";\nimport { Dimension, Layers } from \"../types\";\nimport { AbstractBackPropagation } from \"./backpropagation/abstract\";\n\nabstract class AbstractLayer {\n  public W: Matrix;\n  public b: Matrix;\n  public A: Matrix;\n  public Z: Matrix;\n  public gW: Matrix;\n  public gb: Matrix;\n  public vW: Matrix;\n  public cW: Matrix;\n  public vb: Matrix;\n  public cb: Matrix;\n\n  protected width: number = 0;\n  protected height: number = 0;\n  protected depth: number = 0;\n  protected previousLayer: Layers = null;\n  protected backPropagation: AbstractBackPropagation = null;\n\n  constructor() {\n    this.W = new Matrix();\n    this.b = new Matrix();\n    this.A = new Matrix();\n    this.Z = new Matrix();\n    this.gW = new Matrix();\n    this.gb = new Matrix();\n    this.vW = new Matrix();\n    this.cW = new Matrix();\n    this.vb = new Matrix();\n    this.cb = new Matrix();\n  }\n\n  setBackPropagation(backPropagation: AbstractBackPropagation): AbstractLayer {\n    this.backPropagation = backPropagation;\n    return this;\n  }\n\n  getBackPropagation(): AbstractBackPropagation {\n    return this.backPropagation;\n  }\n\n  forward(input: Matrix): Matrix {\n    this.Z = elementWiseAdd(\n      multiply(this.W, input),\n      this.b.replicate(1, input.cols)\n    );\n    this.A = this.activation(this.Z);\n    return this.A;\n  }\n\n  setWidth(value: number) {\n    this.width = value;\n  }\n\n  getWidth(): number {\n    return this.width;\n  }\n\n  setHeight(value: number) {\n    this.height = value;\n  }\n\n  getHeight(): number {\n    return this.height;\n  }\n\n  setDepth(value: number) {\n    this.depth = value;\n  }\n\n  getDepth(): number {\n    return this.depth;\n  }\n\n  abstract getOutputWidth();\n\n  abstract getOutputHeight();\n\n  abstract getOutputDepth();\n\n  abstract configure();\n\n  abstract is1D(): boolean;\n\n  abstract is3D(): boolean;\n\n  transition(previousLayer: Layers): AbstractLayer {\n    this.previousLayer = previousLayer;\n    return this;\n  }\n\n  abstract setSize(dimension: Dimension);\n\n  abstract getSize();\n\n  abstract activation(value: Matrix): Matrix;\n\n  abstract derivative(value: Matrix): Matrix;\n\n  abstract getType();\n\n  abstract loss(output: Matrix, predictions: Matrix): number;\n\n  abstract error(m: number): number;\n\n  penalty(): number {\n    return penalty(this.W);\n  }\n}\n\nexport { AbstractLayer };\n","import { AbstractLayer } from \"./abstract\";\nimport { fillRandom, setZeros } from \"../math/matrix\";\nimport { Dimension, Layers } from \"../types\";\n\nabstract class AbstractLayer1D extends AbstractLayer {\n  protected depth: number = 1;\n\n  configure() {\n    this.W.resize(this.height, this.width);\n    this.W = fillRandom(this.W, this.width);\n\n    this.b.resize(this.height, 1);\n    this.b = fillRandom(this.b, this.width);\n\n    this.gW.resize(this.height, this.width);\n    this.gW = setZeros(this.gW);\n\n    this.gb.resize(this.height, 1);\n    this.gb = setZeros(this.gb);\n\n    this.cW.resize(this.height, this.width);\n    this.cW = setZeros(this.cW);\n\n    this.cb.resize(this.height, 1);\n    this.cb = setZeros(this.cb);\n\n    this.vW.resize(this.height, this.width);\n    this.vW = setZeros(this.vW);\n\n    this.vb.resize(this.height, 1);\n    this.vb = setZeros(this.cb);\n  }\n\n  is1D(): boolean {\n    return true;\n  }\n\n  is3D(): boolean {\n    return false;\n  }\n\n  transition(previousLayer: Layers): AbstractLayer1D {\n    if (previousLayer.is1D()) {\n      this.setWidth(previousLayer.getSize());\n    } else if (previousLayer.is3D()) {\n      this.setWidth(\n        previousLayer.getOutputWidth() *\n          previousLayer.getOutputHeight() *\n          previousLayer.getOutputDepth()\n      );\n    }\n\n    super.transition(previousLayer);\n\n    return this;\n  }\n\n  setSize(value: Dimension) {\n    this.setHeight(value[0]);\n  }\n\n  getSize(): number {\n    return this.height;\n  }\n\n  getOutputWidth() {\n    return this.width;\n  }\n\n  getOutputHeight() {\n    return this.height;\n  }\n\n  getOutputDepth() {\n    return 1;\n  }\n}\n\nexport { AbstractLayer1D };\n","import { AbstractLayer } from \"./abstract\";\nimport { Dimension } from \"../types\";\n\nabstract class AbstractLayer3D extends AbstractLayer {\n  configure() {\n    // do nothing\n  }\n\n  is1D(): boolean {\n    return false;\n  }\n\n  is3D(): boolean {\n    return true;\n  }\n\n  transition(previousLayer: AbstractLayer): AbstractLayer3D {\n    if (previousLayer.is3D()) {\n      this.setSize([\n        previousLayer.getOutputWidth(),\n        previousLayer.getOutputHeight(),\n        previousLayer.getOutputDepth(),\n      ]);\n    }\n\n    super.transition(previousLayer);\n\n    return this;\n  }\n\n  setSize(dimension: Dimension) {\n    this.setWidth(dimension[0]);\n    this.setHeight(dimension[1]);\n    this.setDepth(dimension[2]);\n  }\n\n  getSize(): Dimension {\n    return [this.getWidth(), this.getHeight(), this.getDepth()];\n  }\n}\n\nexport { AbstractLayer3D };\n","import { Layers } from \"../../types\";\nimport { Matrix } from \"../../math/matrix\";\n\nexport abstract class AbstractBackPropagation {\n  protected layer: Layers = null;\n  protected previousLayer: Layers = null;\n\n  constructor(layer: Layers, previousLayer: Layers) {\n    this.layer = layer;\n    this.previousLayer = previousLayer;\n  }\n\n  abstract propagate(\n    input: Matrix,\n    numberOfExamples: number,\n    regularization: number,\n    sigma: Matrix\n  ): Matrix;\n}\n","import { AbstractBackPropagation } from \"./abstract\";\nimport {\n  elementWiseAdd,\n  elementWiseMultiply,\n  elementWiseMultiplyNumber,\n  Matrix,\n  multiply,\n} from \"../../math/matrix\";\nimport { elementWiseDivideNumber } from \"../../math/matrix\";\n\nexport class Backpropagation1Dto1D extends AbstractBackPropagation {\n  propagate(\n    input: Matrix,\n    numberOfExamples: number,\n    regularization: number,\n    sigma: Matrix\n  ): Matrix {\n    const previousActivations =\n      this.previousLayer !== null ? this.previousLayer.A : input;\n    const delta = multiply(sigma, previousActivations.transpose().conjugate());\n    this.layer.gW = elementWiseAdd(\n      elementWiseDivideNumber(delta, numberOfExamples),\n      elementWiseMultiplyNumber(this.layer.W, regularization / numberOfExamples)\n    );\n    this.layer.gb = elementWiseDivideNumber(\n      sigma.rowwiseSum(),\n      numberOfExamples\n    );\n    if (this.previousLayer !== null) {\n      return elementWiseMultiply(\n        multiply(this.layer.W.transpose(), sigma),\n        this.previousLayer.derivative(this.previousLayer.A)\n      );\n    }\n    return new Matrix();\n  }\n}\n","import { AbstractBackPropagation } from \"./abstract\";\nimport { Matrix } from \"../../math/matrix\";\n\nexport class Backpropagation3Dto1D extends AbstractBackPropagation {\n  propagate(\n    input: Matrix,\n    numberOfExamples: number,\n    regularization: number,\n    sigma: Matrix\n  ): Matrix {\n    return sigma;\n  }\n}\n","import { AbstractBackPropagation } from \"./abstract\";\nimport { Matrix, setZeros } from \"../../math/matrix\";\nimport { Layers3D } from \"../../types\";\n\nexport class BackpropagationToConv extends AbstractBackPropagation {\n  protected previousLayer: Layers3D = null;\n\n  propagate(\n    input: Matrix,\n    numberOfExamples: number,\n    regularization: number,\n    sigma: Matrix\n  ): Matrix {\n    const previousLayer = this.previousLayer;\n\n    const padding = previousLayer.getPadding();\n    const stride = previousLayer.getStride();\n    const filterSize = previousLayer.getFilterSize();\n    const outputWidth = previousLayer.getOutputWidth();\n    const outputHeight = previousLayer.getOutputHeight();\n    const outputDepth = previousLayer.getOutputDepth();\n    const inputWidth = previousLayer.getWidth();\n    const inputHeight = previousLayer.getHeight();\n    const inputDepth = previousLayer.getDepth();\n\n    const tmpResult = setZeros(\n      new Matrix(\n        (inputWidth + 2 * padding) * (inputHeight + 2 * padding) * inputDepth,\n        numberOfExamples\n      )\n    );\n\n    const result = new Matrix(\n      inputWidth * inputHeight * inputDepth,\n      numberOfExamples\n    );\n\n    const aPrev = previousLayer.derivative(previousLayer.A);\n\n    previousLayer.gW = setZeros(previousLayer.gW);\n    previousLayer.gb = setZeros(previousLayer.gb);\n\n    for (let m = 0; m < numberOfExamples; m++) {\n      for (let c = 0; c < outputDepth; c++) {\n        for (let h = 0; h < outputHeight; h++) {\n          for (let w = 0; w < outputWidth; w++) {\n            const vertStart = stride * h;\n            const vertEnd = vertStart + filterSize;\n            const horizStart = stride * w;\n            const horizEnd = horizStart + filterSize;\n\n            // filter loop\n            for (let d = 0; d < inputDepth; d++) {\n              for (\n                let y = 0, vertical = vertStart, verticalPad = -padding;\n                y < filterSize;\n                y++, vertical++, verticalPad++\n              ) {\n                for (\n                  let x = 0, horizontal = horizStart, horizontalPad = -padding;\n                  x < filterSize;\n                  x++, horizontal++, horizontalPad++\n                ) {\n                  tmpResult[\n                    d *\n                      (inputWidth + 2 * padding) *\n                      (inputHeight + 2 * padding) +\n                      vertical * (inputWidth + 2 * padding) +\n                      horizontal\n                  ][m] +=\n                    previousLayer.W.data[c][\n                      d * filterSize * filterSize + y * filterSize + x\n                    ] *\n                    sigma[c * outputWidth * outputHeight + h * outputWidth + w][\n                      m\n                    ];\n\n                  let z = 0;\n                  if (padding == 0) {\n                    z =\n                      previousLayer.Z.data[\n                        d * inputWidth * inputHeight +\n                          vertical * inputWidth +\n                          horizontal\n                      ][m];\n                  } else {\n                    if (\n                      verticalPad >= 0 &&\n                      horizontalPad >= 0 &&\n                      verticalPad < inputHeight &&\n                      horizontalPad < inputWidth\n                    ) {\n                      z =\n                        previousLayer.Z.data[\n                          d * inputWidth * inputHeight +\n                            verticalPad * inputWidth +\n                            horizontalPad\n                        ][m];\n                    }\n                  }\n\n                  previousLayer.gW.data[c][\n                    d * filterSize * filterSize + y * filterSize + x\n                  ] +=\n                    (z *\n                      sigma[\n                        c * (outputWidth * outputHeight) + h * outputWidth + w\n                      ][m]) /\n                    numberOfExamples;\n                }\n              }\n            }\n\n            previousLayer.gb.data[c][0] +=\n              sigma[c * (outputWidth * outputHeight) + h * outputWidth + w][m] /\n              numberOfExamples;\n          }\n        }\n      }\n\n      if (padding > 0) {\n        // unpad\n        for (let c = 0; c < inputDepth; c++) {\n          for (let h = -padding, y = 0; h < inputHeight + padding; h++, y++) {\n            for (let w = -padding, x = 0; w < inputWidth + padding; w++, x++) {\n              if (w >= 0 && h >= 0 && w < inputWidth && h < inputHeight) {\n                result[c * inputWidth * inputHeight + h * inputWidth + w][m] =\n                  tmpResult[\n                    c *\n                      (inputWidth + 2 * padding) *\n                      (inputHeight + 2 * padding) +\n                      y * (inputWidth + 2 * padding) +\n                      x\n                  ][m];\n              }\n            }\n          }\n        }\n      }\n    }\n\n    if (padding > 0) {\n      return result;\n    }\n\n    return tmpResult;\n  }\n}\n","import { AbstractBackPropagation } from \"./abstract\";\nimport { Matrix, setZeros } from \"../../math/matrix\";\nimport { Layers3D } from \"../../types\";\n\nexport class BackpropagationToMaxPool extends AbstractBackPropagation {\n  protected previousLayer: Layers3D = null;\n\n  propagate(\n    input: Matrix,\n    numberOfExamples: number,\n    regularization: number,\n    sigma: Matrix\n  ): Matrix {\n    const prevLayer = this.previousLayer;\n    const result = setZeros(new Matrix(prevLayer.Z.rows, prevLayer.Z.cols));\n\n    const filterSize = prevLayer.getFilterSize();\n    const stride = prevLayer.getStride();\n    const inputWidth = prevLayer.getWidth();\n    const inputHeight = prevLayer.getHeight();\n    const inputDepth = prevLayer.getDepth();\n    const outputWidth = prevLayer.getOutputWidth();\n    const outputHeight = prevLayer.getOutputHeight();\n    const outputDepth = prevLayer.getOutputDepth();\n\n    for (let m = 0; m < numberOfExamples; m++) {\n      for (let c = 0; c < outputDepth; c++) {\n        for (let h = 0; h < outputHeight; h++) {\n          for (let w = 0; w < outputWidth; w++) {\n            const vertStart = stride * h;\n            const vertEnd = vertStart + filterSize;\n            const horizStart = stride * w;\n            const horizEnd = horizStart + filterSize;\n\n            let _max = -Infinity;\n            const inputOffset = inputHeight * inputWidth * c;\n            const outputOffset = outputHeight * outputWidth * c;\n            let maxX = 0;\n            let maxY = 0;\n\n            for (let y = 0, vStart = vertStart; y < filterSize; y++, vStart++) {\n              for (\n                let x = 0, hStart = horizStart;\n                x < filterSize;\n                x++, hStart++\n              ) {\n                if (\n                  _max <\n                  prevLayer.Z.data[inputOffset + vStart * inputWidth + hStart][\n                    m\n                  ]\n                ) {\n                  _max =\n                    prevLayer.Z.data[\n                      inputOffset + vStart * inputWidth + hStart\n                    ][m];\n                  maxX = hStart;\n                  maxY = vStart;\n                }\n              }\n            }\n\n            result.data[inputOffset + maxY * inputWidth + maxX][m] =\n              sigma[outputOffset + h * outputWidth + w][m];\n          }\n        }\n      }\n    }\n\n    return result;\n  }\n}\n","import { Layers, LayerType } from \"../../types\";\nimport { Backpropagation1Dto1D } from \"./backpropagation1dto1d\";\nimport { Backpropagation3Dto1D } from \"./backpropagationto3dto1d\";\nimport { BackpropagationToMaxPool } from \"./backpropagationtomaxpool\";\nimport { BackpropagationToConv } from \"./backpropagationtoconv\";\n\nexport class BackpropagationFactory {\n  static create(previousLayer: Layers, layer: Layers) {\n    if (previousLayer == null) {\n      if (layer.is1D()) {\n        return new Backpropagation1Dto1D(layer, previousLayer);\n      } else if (layer.getType() == LayerType.conv) {\n        return new Backpropagation3Dto1D(layer, previousLayer);\n      }\n    } else {\n      if (previousLayer.getType() == LayerType.maxpool) {\n        return new BackpropagationToMaxPool(layer, previousLayer);\n      } else if (previousLayer.getType() == LayerType.conv) {\n        return new BackpropagationToConv(layer, previousLayer);\n      } else if (\n        previousLayer.is1D() ||\n        previousLayer.getType() == LayerType.fullyconnected\n      ) {\n        return new Backpropagation1Dto1D(layer, previousLayer);\n      }\n    }\n    return null;\n  }\n}\n","import {\n  Matrix,\n  fillRandom,\n  setZeros,\n  reluActivation,\n  reluDerivative,\n  elementWiseAdd,\n  multiply,\n} from \"../math/matrix\";\nimport { im2col } from \"../math/math\";\nimport { LayerType } from \"../types\";\nimport { AbstractLayer3D } from \"./abstract3d\";\n\nclass ConvLayer extends AbstractLayer3D {\n  protected numFilters: number = 32;\n  protected filterSize: number = 4;\n  protected padding: number = 1;\n  protected stride: number = 1;\n\n  configure() {\n    this.W.resize(\n      this.numFilters,\n      this.filterSize * this.filterSize * this.depth\n    );\n    this.W = fillRandom(this.W, this.width * this.height * this.depth);\n\n    this.b.resize(this.numFilters, 1);\n    this.b = fillRandom(this.b, 0.01);\n\n    this.gW.resize(\n      this.numFilters,\n      this.filterSize * this.filterSize * this.depth\n    );\n    this.gW = setZeros(this.gW);\n\n    this.gb.resize(this.numFilters, 1);\n    this.gb = setZeros(this.gb);\n\n    this.cW.resize(\n      this.numFilters,\n      this.filterSize * this.filterSize * this.depth\n    );\n    this.cW = setZeros(this.gb);\n\n    this.cb.resize(this.numFilters, 1);\n    this.cb = setZeros(this.cb);\n\n    this.vW.resize(\n      this.numFilters,\n      this.filterSize * this.filterSize * this.depth\n    );\n    this.vW = setZeros(this.vW);\n\n    this.vb.resize(this.numFilters, 1);\n    this.vb = setZeros(this.vb);\n  }\n\n  getOutputHeight(): number {\n    return (this.width - this.filterSize + 2 * this.padding) / this.stride + 1;\n  }\n\n  getOutputWidth(): number {\n    return (this.height - this.filterSize + 2 * this.padding) / this.stride + 1;\n  }\n\n  getOutputDepth(): number {\n    return this.numFilters;\n  }\n\n  setFilterSize(size: number): ConvLayer {\n    this.filterSize = size;\n    return this;\n  }\n\n  getFilterSize(): number {\n    return this.filterSize;\n  }\n\n  setNumFilters(numFilters: number): ConvLayer {\n    this.numFilters = numFilters;\n    return this;\n  }\n\n  getNumFilters(): number {\n    return this.numFilters;\n  }\n\n  setPadding(padding: number): ConvLayer {\n    this.padding = padding;\n    return this;\n  }\n\n  getPadding(): number {\n    return this.padding;\n  }\n\n  setStride(stride: number): ConvLayer {\n    this.stride = stride;\n    return this;\n  }\n\n  getStride(): number {\n    return this.stride;\n  }\n\n  forward(input: Matrix): Matrix {\n    const result = new Matrix(\n      this.getOutputWidth() * this.getOutputHeight() * this.getOutputDepth(),\n      input.cols\n    );\n\n    for (let i = 0; i < input.cols; i += 1) {\n      const conv = im2col(\n        input.col(i),\n        this.depth,\n        this.height,\n        this.width,\n        this.filterSize,\n        this.filterSize,\n        this.padding,\n        this.padding,\n        this.stride,\n        this.stride\n      );\n      const tmp = (this.Z = elementWiseAdd(\n        multiply(this.W, conv),\n        this.b.replicate(1, input.cols)\n      ).rollToColMatrix());\n\n      result.setCol(i, tmp);\n    }\n\n    this.Z = result;\n    this.activation(this.Z);\n\n    return this.A;\n  }\n\n  activation(m: Matrix): Matrix {\n    return reluActivation(m);\n  }\n\n  derivative(m: Matrix): Matrix {\n    return reluDerivative(m);\n  }\n\n  getType(): LayerType {\n    return LayerType.conv;\n  }\n\n  loss(output: Matrix, predictions: Matrix): number {\n    throw new Error(\"Unsupported.\");\n  }\n\n  error(m: number): number {\n    throw new Error(\"Unsupported.\");\n  }\n}\n\nexport { ConvLayer };\n","import { Dimension, LayerType } from \"../types\";\nimport { ConvLayer } from \"./conv\";\n\nclass FullyConnectedLayer extends ConvLayer {\n  configure() {\n    // do nothing\n  }\n\n  transition(previousLayer: FullyConnectedLayer): FullyConnectedLayer {\n    if (previousLayer.is3D()) {\n      if (previousLayer.getType() == LayerType.maxpool) {\n        this.filterSize = previousLayer.getOutputWidth();\n        this.padding = 0;\n        this.stride = 1;\n        this.width = previousLayer.getOutputWidth();\n        this.height = previousLayer.getOutputHeight();\n        this.depth = previousLayer.getOutputDepth();\n        this.numFilters =\n          previousLayer.getOutputWidth() *\n          previousLayer.getOutputHeight() *\n          previousLayer.getOutputDepth();\n      } else {\n        throw new Error(\n          \"Invalid usage. Cannot fully connect with previous non maxpool layer.\"\n        );\n      }\n    } else {\n      throw new Error(\n        \"Invalid usage. Cannot fully connect with previous 1D layer.\"\n      );\n    }\n\n    return this;\n  }\n\n  setSize(dimension: Dimension): FullyConnectedLayer {\n    throw new Error(\"Unsupported\");\n  }\n\n  setFilterSize(filterSize: number): FullyConnectedLayer {\n    throw new Error(\"Unsupported\");\n  }\n\n  setStride(stride: number): FullyConnectedLayer {\n    throw new Error(\"Unsupported\");\n  }\n\n  setPadding(padding: number): FullyConnectedLayer {\n    throw new Error(\"Unsupported\");\n  }\n\n  setWidth(value: number): FullyConnectedLayer {\n    throw new Error(\"Unsupported\");\n  }\n\n  setHeight(value: number): FullyConnectedLayer {\n    throw new Error(\"Unsupported\");\n  }\n\n  setDepth(value: number): FullyConnectedLayer {\n    throw new Error(\"Unsupported\");\n  }\n\n  setNumFilters(value: number): FullyConnectedLayer {\n    throw new Error(\"Unsupported\");\n  }\n}\n\nexport { FullyConnectedLayer };\n","import { AbstractLayer } from \"./abstract\";\nimport { SoftmaxLayer } from \"./softmax\";\nimport { LogisticLayer } from \"./logistic\";\nimport { TanhLayer } from \"./tanh\";\nimport { ReluLayer } from \"./relu\";\nimport { SoftplusLayer } from \"./softplus\";\nimport { ConvLayer } from \"./conv\";\nimport { FullyConnectedLayer } from \"./fullyconnected\";\nimport { MaxPoolLayer } from \"./maxpool\";\n\nexport {\n  AbstractLayer,\n  SoftmaxLayer,\n  LogisticLayer,\n  TanhLayer,\n  ReluLayer,\n  SoftplusLayer,\n  ConvLayer,\n  FullyConnectedLayer,\n  MaxPoolLayer,\n};\n","import {\n  logisticActivation,\n  logisticDerivative,\n  Matrix,\n  logisticLoss,\n} from \"../math/matrix\";\nimport { LayerType } from \"../types\";\nimport { AbstractLayer1D } from \"./abstract1d\";\n\nclass LogisticLayer extends AbstractLayer1D {\n  activation(m: Matrix): Matrix {\n    return logisticActivation(m);\n  }\n\n  derivative(m: Matrix): Matrix {\n    return logisticDerivative(m);\n  }\n\n  getType(): LayerType {\n    return LayerType.logistic;\n  }\n\n  loss(output: Matrix, predictions: Matrix): number {\n    return logisticLoss(output, predictions);\n  }\n\n  error(m: number): number {\n    return -1.0 / m;\n  }\n}\n\nexport { LogisticLayer };\n","import { Matrix } from \"../math/matrix\";\nimport { maxpool } from \"../math/math\";\nimport { LayerType } from \"../types\";\nimport { AbstractLayer3D } from \"./abstract3d\";\nimport { BackpropagationToMaxPool } from \"./backpropagation/backpropagationtomaxpool\";\n\nclass MaxPoolLayer extends AbstractLayer3D {\n  filterSize: number;\n  stride: number;\n\n  configure() {\n    this.backPropagation = new BackpropagationToMaxPool(\n      this,\n      this.previousLayer\n    );\n  }\n\n  getOutputHeight(): number {\n    return (this.height - this.filterSize) / this.stride + 1;\n  }\n\n  getOutputWidth(): number {\n    return (this.width - this.filterSize) / this.stride + 1;\n  }\n\n  getOutputDepth(): number {\n    return this.depth;\n  }\n\n  setFilterSize(size: number): MaxPoolLayer {\n    this.filterSize = size;\n    return this;\n  }\n\n  getFilterSize(): number {\n    return this.filterSize;\n  }\n\n  setStride(stride: number): MaxPoolLayer {\n    this.stride = stride;\n    return this;\n  }\n\n  getStride(): number {\n    return this.stride;\n  }\n\n  forward(input: Matrix): Matrix {\n    const result = new Matrix(\n      this.getOutputWidth() * this.getOutputHeight() * this.getOutputDepth(),\n      input.cols\n    );\n\n    for (let i = 0; i < input.cols; i += 1) {\n      const pool = maxpool(\n        input.col(i),\n        this.depth,\n        this.height,\n        this.width,\n        this.filterSize,\n        this.filterSize,\n        this.stride,\n        this.stride\n      ).rollToColMatrix();\n\n      result.setCol(i, pool);\n    }\n\n    this.Z = result;\n    this.activation(this.Z);\n\n    return this.A;\n  }\n\n  activation(m: Matrix): Matrix {\n    throw new Error(\"No activation for MAXPOOL layer.\");\n  }\n\n  derivative(m: Matrix): Matrix {\n    throw new Error(\"No derivative for MAXPOOL layer.\");\n  }\n\n  getType(): LayerType {\n    return LayerType.maxpool;\n  }\n\n  loss(output: Matrix, predictions: Matrix): number {\n    throw new Error(\"Unsupported.\");\n  }\n\n  error(m: number): number {\n    throw new Error(\"Unsupported.\");\n  }\n}\n\nexport { MaxPoolLayer };\n","import { Matrix, reluActivation, reluDerivative } from \"../math/matrix\";\nimport { LayerType } from \"../types\";\nimport { AbstractLayer1D } from \"./abstract1d\";\n\nclass ReluLayer extends AbstractLayer1D {\n  activation(m: Matrix): Matrix {\n    return reluActivation(m);\n  }\n\n  derivative(m: Matrix): Matrix {\n    return reluDerivative(m);\n  }\n\n  getType(): LayerType {\n    return LayerType.relu;\n  }\n\n  loss(output: Matrix, predictions: Matrix): number {\n    return 0.0; // todo\n  }\n\n  error(m: number): number {\n    return 0.0; // todo\n  }\n}\n\nexport { ReluLayer };\n","import { Matrix, softmaxActivation, softmaxLoss } from \"../math/matrix\";\nimport { LayerType } from \"../types\";\nimport { AbstractLayer1D } from \"./abstract1d\";\n\nclass SoftmaxLayer extends AbstractLayer1D {\n  activation(m: Matrix): Matrix {\n    return softmaxActivation(m);\n  }\n\n  derivative(m: Matrix): Matrix {\n    throw new Error(\"Unsupported usage.\");\n  }\n\n  getType(): LayerType {\n    return LayerType.softmax;\n  }\n\n  loss(output: Matrix, predictions: Matrix): number {\n    return softmaxLoss(output, predictions);\n  }\n\n  error(m: number): number {\n    return -1.0 / m;\n  }\n}\n\nexport { SoftmaxLayer };\n","import { Matrix, softplusActivation, softplusDerivative } from \"../math/matrix\";\nimport { LayerType } from \"../types\";\nimport { AbstractLayer1D } from \"./abstract1d\";\n\nclass SoftplusLayer extends AbstractLayer1D {\n  activation(m: Matrix): Matrix {\n    return softplusActivation(m);\n  }\n\n  derivative(m: Matrix): Matrix {\n    return softplusDerivative(m);\n  }\n\n  getType(): LayerType {\n    return LayerType.softplus;\n  }\n\n  loss(output: Matrix, predictions: Matrix): number {\n    return 0.0; // todo\n  }\n\n  error(m: number): number {\n    return 0.0; // todo\n  }\n}\n\nexport { SoftplusLayer };\n","import { Matrix, tanhActivation, tanhDerivative } from \"../math/matrix\";\nimport { LayerType } from \"../types\";\nimport { AbstractLayer1D } from \"./abstract1d\";\n\nclass TanhLayer extends AbstractLayer1D {\n  activation(m: Matrix): Matrix {\n    return tanhActivation(m);\n  }\n\n  derivative(m: Matrix): Matrix {\n    return tanhDerivative(m);\n  }\n\n  getType(): LayerType {\n    return LayerType.tanh;\n  }\n\n  loss(output: Matrix, predictions: Matrix): number {\n    return 0.0; // todo\n  }\n\n  error(m: number): number {\n    return 0.0; // todo\n  }\n}\n\nexport { TanhLayer };\n","import { Matrix, setZeros } from \"./matrix\";\n\nexport const im2col = (\n  input: Matrix,\n  channels: number,\n  height: number,\n  width: number,\n  kernel_h: number,\n  kernel_w: number,\n  pad_h: number,\n  pad_w: number,\n  stride_h: number,\n  stride_w: number\n): Matrix => {\n  const rows = kernel_w * kernel_h * channels;\n  const cols =\n    ((width - kernel_w + 2 * pad_w) / stride_w + 1) *\n    ((height - kernel_h + 2 * pad_h) / stride_h + 1);\n  let currentResultCol = 0;\n\n  const result = setZeros(new Matrix(rows, cols));\n\n  for (\n    let boundingY = -pad_h;\n    boundingY + kernel_h <= height + pad_h;\n    boundingY += stride_h\n  ) {\n    for (\n      let boundingX = -pad_w;\n      boundingX + kernel_w <= width + pad_w;\n      boundingX += stride_w\n    ) {\n      let currentResultRow = 0;\n      for (let channel = 0; channel < channels; channel++) {\n        const inputOffset = height * width * channel;\n        for (let y = 0; y < kernel_h; y++) {\n          for (let x = 0; x < kernel_w; x++) {\n            if (\n              boundingY + y >= 0 &&\n              boundingX + x >= 0 &&\n              boundingX + x < width &&\n              boundingY + y < height\n            ) {\n              result.data[currentResultRow][currentResultCol] =\n                input.data[\n                  (y + boundingY) * width + boundingX + x + inputOffset\n                ][0];\n            }\n            currentResultRow++;\n          }\n        }\n      }\n      currentResultCol++;\n    }\n  }\n  return result;\n};\n\nexport const maxpool = (\n  input: Matrix,\n  channels: number,\n  height: number,\n  width: number,\n  kernel_h: number,\n  kernel_w: number,\n  stride_h: number,\n  stride_w: number\n): Matrix => {\n  const resultWidth = (width - kernel_w) / stride_w + 1;\n  const resultHeight = (height - kernel_h) / stride_h + 1;\n  const resultDepth = channels;\n\n  let currentResultCol = 0;\n  const result = setZeros(\n    new Matrix(resultWidth * resultHeight * resultDepth, 1)\n  );\n\n  for (\n    let boundingY = 0;\n    boundingY + kernel_h <= height;\n    boundingY += stride_h\n  ) {\n    for (\n      let boundingX = 0;\n      boundingX + kernel_w <= width;\n      boundingX += stride_w\n    ) {\n      for (let channel = 0; channel < channels; channel++) {\n        let _max = -Infinity;\n        const inputOffset = height * width * channel;\n        const outputOffset = resultWidth * resultHeight * channel;\n        for (let y = 0; y < kernel_h; y++) {\n          for (let x = 0; x < kernel_w; x++) {\n            _max = Math.max(\n              _max,\n              input.data[\n                inputOffset + (y + boundingY) * width + boundingX + x\n              ][0]\n            );\n          }\n        }\n        result.data[outputOffset + currentResultCol][0] = _max;\n      }\n      currentResultCol++;\n    }\n  }\n  return new Matrix();\n};\n","import { GPU } from \"gpu.js\";\n\nexport const gpu = new GPU({ mode: \"gpu\" });\n\nexport class Matrix {\n  public rows = 0;\n  public cols = 0;\n  public data = null;\n\n  constructor(rows = 0, cols = 0, data: number[][] = null) {\n    this.resize(rows, cols);\n    if (data) {\n      this.generateData(data);\n    }\n  }\n\n  resize(rows, cols): Matrix {\n    this.rows = rows;\n    this.cols = cols;\n    this.data = [];\n    for (let row = 0; row < this.rows; row += 1) {\n      this.data[row] = new Array(this.cols);\n    }\n\n    return this;\n  }\n\n  generateData(arr: number[][]): Matrix {\n    this.data = [];\n    for (let row = 0; row < this.rows; row += 1) {\n      this.data[row] = new Array(this.cols);\n    }\n    for (let col = 0; col < this.cols; col += 1) {\n      for (let row = 0; row < this.rows; row += 1) {\n        if (typeof arr[col] === \"number\") {\n          this.data[row][col] = arr[col];\n        } else if (arr[col] instanceof Float32Array) {\n          this.data[row][col] = arr[col][row];\n        } else {\n          this.data[row][col] = 0;\n        }\n      }\n    }\n    return this;\n  }\n\n  toBuffer(): ArrayBuffer {\n    const result = new ArrayBuffer(this.rows * this.cols * 64);\n    const view = new DataView(result, 0, this.rows * this.cols * 64);\n    this.data.forEach((num, i) => {\n      view.setFloat64(i, num);\n    });\n    return result;\n  }\n\n  sum(): number {\n    let sum = 0.0;\n    for (let row = 0; row < this.rows; row += 1) {\n      for (let col = 0; col < this.cols; col += 1) {\n        sum += this.data[row][col];\n      }\n    }\n    return sum;\n  }\n\n  colwiseSum(): Matrix {\n    const data = [];\n    for (let col = 0; col < this.cols; col += 1) {\n      let sum = 0.0;\n      for (let row = 0; row < this.rows; row += 1) {\n        sum += this.data[row][col];\n      }\n      data[col] = [sum];\n    }\n    return new Matrix(1, this.cols, data);\n  }\n\n  rowwiseSum(): Matrix {\n    const data = [];\n    for (let row = 0; row < this.rows; row += 1) {\n      let sum = 0.0;\n      for (let col = 0; col < this.rows; col += 1) {\n        sum += this.data[row][col];\n      }\n      data[row] = [sum];\n    }\n    return new Matrix(this.rows, 1, data);\n  }\n\n  replicate(rows: number, cols: number): Matrix {\n    const oldData = this.data;\n    const newData = [];\n    let result = null;\n    if (rows === 1 && this.cols === 1 && cols > 1) {\n      result = new Matrix(this.rows, cols);\n      for (let row = 0; row < this.rows; row += 1) {\n        newData[row] = [];\n        for (let col = 0; col < cols; col += 1) {\n          newData[row][col] = oldData[row][0];\n        }\n      }\n    } else if (cols === 1 && this.rows === 1 && rows > 1) {\n      result = new Matrix(rows, this.cols);\n      for (let row = 0; row < rows; row += 1) {\n        newData[row] = [];\n        for (let col = 0; col < this.cols; col += 1) {\n          newData[row][col] = oldData[0][col];\n        }\n      }\n    }\n    if (result) {\n      result.generateData(newData);\n      return result;\n    }\n    return this;\n  }\n\n  transpose(): Matrix {\n    const kernel = gpu\n      .createKernel(function (a) {\n        return a[this.thread.y][this.thread.x];\n      })\n      .setOutput([this.cols, this.rows]);\n\n    return new Matrix(this.cols, this.rows, kernel(this.data) as number[][]);\n  }\n\n  conjugate(): Matrix {\n    return this;\n  }\n\n  colMaxCoeffIndex(col: number): number {\n    let maxIndex = -1;\n    let max = -Infinity;\n\n    for (let row = 0; row < this.rows; row += 1) {\n      if (this.data[row][col] > max) {\n        max = this.data[row][col];\n        maxIndex = row;\n      }\n    }\n\n    return maxIndex;\n  }\n\n  block(\n    startRow: number,\n    startCol: number,\n    blockRows: number,\n    blockCols: number\n  ): Matrix {\n    const data = [];\n\n    for (\n      let row = startRow, newRow = 0;\n      row < this.rows && row < startRow + blockRows;\n      row += 1, newRow += 1\n    ) {\n      data[row] = new Array(blockCols);\n      for (\n        let col = startCol, newCol = 0;\n        col < this.cols && col < startCol + blockCols;\n        col += 1, newCol += 1\n      ) {\n        data[newRow][newCol] = this.data[row][col];\n      }\n    }\n\n    return new Matrix(blockRows, blockCols, data);\n  }\n\n  col(col: number): Matrix {\n    const data = [];\n    for (let row = 0; row < this.rows; row += 1) {\n      data[row] = [this.data[row][col]];\n    }\n    return new Matrix(this.rows, 1, data);\n  }\n\n  setCol(col: number, tmp: Matrix): Matrix {\n    for (let row = 0; row < this.rows; row += 1) {\n      this.data[row][col] = tmp.data[row][0];\n    }\n    return this;\n  }\n\n  rollToColMatrix(): Matrix {\n    const data = [];\n\n    let _row = 0;\n    for (let row = 0; row < this.rows; row += 1) {\n      data[row] = [];\n      for (let col = 0; col < this.cols; col += 1) {\n        data[_row++][0] = this.data[row][col];\n      }\n    }\n\n    return new Matrix(this.rows * this.cols, 1, data);\n  }\n}\n\nexport const multiply = (m1: Matrix, m2: Matrix): Matrix => {\n  if (m1.cols !== m2.rows) {\n    throw new Error(\n      `DIMENSIONS error. m1.cols ${m1.cols} !== m2.rows ${m2.rows}.`\n    );\n  }\n\n  const kernel = gpu\n    .createKernel(function (a, b) {\n      let sum = 0;\n      for (let i = 0; i < this.constants.cols; i++) {\n        sum += a[this.thread.x][i] * b[i][this.thread.y];\n      }\n      return sum;\n    })\n    .setOutput([m1.rows, m2.cols])\n    .setConstants({\n      cols: m1.rows,\n    });\n\n  return new Matrix(m1.rows, m2.cols, kernel(m1.data, m2.data) as number[][]);\n};\n\nexport const elementWiseAdd = (m1: Matrix, m2: Matrix): Matrix => {\n  if (m1.rows !== m2.rows) {\n    throw new Error(\"ROWS number not equal.\");\n  }\n  if (m1.cols !== m2.cols) {\n    throw new Error(\"COLS number not equal.\");\n  }\n\n  const kernel = gpu\n    .createKernel(function (a, b) {\n      return a[this.thread.x][this.thread.y] + b[this.thread.x][this.thread.y];\n    })\n    .setOutput([m1.rows, m2.cols]);\n\n  return new Matrix(m1.rows, m2.cols, kernel(m1.data, m2.data) as number[][]);\n};\n\nexport const elementWiseSubtract = (m1: Matrix, m2: Matrix): Matrix => {\n  if (m1.rows !== m2.rows) {\n    throw new Error(\"ROWS number not equal.\");\n  }\n  if (m1.cols !== m2.cols) {\n    throw new Error(\"COLS number not equal.\");\n  }\n\n  const kernel = gpu\n    .createKernel(function (a, b) {\n      return a[this.thread.x][this.thread.y] - b[this.thread.x][this.thread.y];\n    })\n    .setOutput([m1.rows, m2.cols]);\n\n  return new Matrix(m1.rows, m2.cols, kernel(m1.data, m2.data) as number[][]);\n};\n\nexport const fillRandom = (m1: Matrix, parameter: number): Matrix => {\n  const kernel = gpu\n    .createKernel(function () {\n      // @ts-ignore\n      return (Math.random() - 0.5) * Math.sqrt(2.0 / this.constants.parameter);\n    })\n    .setOutput([m1.rows, m1.cols])\n    .setConstants({\n      parameter,\n    });\n\n  return new Matrix(m1.rows, m1.cols, kernel() as number[][]);\n};\n\nexport const setZeros = (m1: Matrix): Matrix => {\n  const kernel = gpu\n    .createKernel(function () {\n      return 0.0;\n    })\n    .setOutput([m1.rows, m1.cols]);\n  return new Matrix(m1.rows, m1.cols, kernel() as number[][]);\n};\n\nexport const setOnes = (m1: Matrix): Matrix => {\n  const kernel = gpu\n    .createKernel(function () {\n      return 1.0;\n    })\n    .setOutput([m1.rows, m1.cols]);\n  return new Matrix(m1.rows, m1.cols, kernel() as number[][]);\n};\n\nexport const elementWiseMultiply = (m1: Matrix, m2: Matrix): Matrix => {\n  if (m1.rows !== m2.rows) {\n    throw new Error(\"ROWS number not equal.\");\n  }\n  if (m1.cols !== m2.cols) {\n    throw new Error(\"COLS number not equal.\");\n  }\n\n  const kernel = gpu\n    .createKernel(function (a, b) {\n      return a[this.thread.x][this.thread.y] * b[this.thread.x][this.thread.y];\n    })\n    .setOutput([m1.rows, m2.cols]);\n\n  return new Matrix(m1.rows, m2.cols, kernel(m1.data, m2.data) as number[][]);\n};\n\nexport const elementWiseMultiplyNumber = (m1: Matrix, num: number): Matrix => {\n  const kernel = gpu\n    .createKernel(function (a) {\n      // @ts-ignore\n      return a[this.thread.x][this.thread.y] * this.constants.number;\n    })\n    .setOutput([m1.rows, m1.cols])\n    .setConstants({\n      number: num,\n    });\n\n  return new Matrix(m1.rows, m1.cols, kernel(m1.data) as number[][]);\n};\n\nexport const sum = (m: Matrix): number => {\n  return m.sum();\n};\n\nexport const cols = (m: Matrix): number => {\n  return m.cols;\n};\n\nexport const elementWiseDivide = (m1: Matrix, m2: Matrix): Matrix => {\n  if (m1.rows !== m2.rows) {\n    throw new Error(\"ROWS number not equal.\");\n  }\n  if (m1.cols !== m2.cols) {\n    throw new Error(\"COLS number not equal.\");\n  }\n\n  const kernel = gpu\n    .createKernel(function (a, b) {\n      return a[this.thread.x][this.thread.y] / b[this.thread.x][this.thread.y];\n    })\n    .setOutput([m1.rows, m2.cols]);\n\n  return new Matrix(m1.rows, m2.cols, kernel(m1.data, m2.data) as number[][]);\n};\n\nexport const elementWiseDivideNumber = (m1: Matrix, num: number): Matrix => {\n  const kernel = gpu\n    .createKernel(function (a) {\n      // @ts-ignore\n      return a[this.thread.x][this.thread.y] / this.constants.number;\n    })\n    .setOutput([m1.rows, m1.cols])\n    .setConstants({\n      number: num,\n    });\n\n  return new Matrix(m1.rows, m1.cols, kernel(m1.data) as number[][]);\n};\n\nexport const softmaxActivation = (m: Matrix): Matrix => {\n  const kernel = gpu\n    .createKernel(function (a) {\n      return Math.exp(a[this.thread.x][this.thread.y]);\n    })\n    .setOutput([m.rows, m.cols]);\n  const data = new Matrix(m.rows, m.cols, kernel(m.data) as number[][]);\n  const divider = new Matrix(1, m.cols, data.colwiseSum().data).replicate(\n    m.rows,\n    1\n  );\n  const result = new Matrix(\n    m.rows,\n    m.cols,\n    elementWiseDivide(data, divider).data\n  );\n  return result;\n};\n\nexport const softmaxLoss = (output: Matrix, predictions: Matrix): number => {\n  const kernel = gpu\n    .createKernel(function (a) {\n      return Math.log(a[this.thread.x][this.thread.y]);\n    })\n    .setOutput([predictions.rows, predictions.cols]);\n  return new Matrix(\n    output.rows,\n    output.cols,\n    elementWiseMultiply(\n      output,\n      new Matrix(\n        output.rows,\n        output.cols,\n        kernel(predictions.data) as number[][]\n      )\n    ).data\n  ).sum();\n};\n\nexport const logisticActivation = (m: Matrix): Matrix => {\n  const kernel = gpu\n    .createKernel(function (a) {\n      return 1.0 / (1.0 + Math.exp(-a[this.thread.x][this.thread.y]));\n    })\n    .setOutput([m.rows, m.cols]);\n  return new Matrix(m.rows, m.cols, kernel(m.data) as number[][]);\n};\n\nexport const logisticDerivative = (m: Matrix): Matrix => {\n  const kernel = gpu\n    .createKernel(function (a) {\n      return (\n        a[this.thread.x][this.thread.y] *\n        (1.0 - a[this.thread.x][this.thread.y])\n      );\n    })\n    .setOutput([m.rows, m.cols]);\n  return new Matrix(m.rows, m.cols, kernel(m.data) as number[][]);\n};\n\nexport const logisticLoss = (output: Matrix, predictions: Matrix): number => {\n  const kernel = gpu\n    .createKernel(function (a) {\n      return Math.log(a[this.thread.x][this.thread.y]);\n    })\n    .setOutput([output.rows, output.cols]);\n  const kernel2 = gpu\n    .createKernel(function (a) {\n      return 1.0 - a[this.thread.x][this.thread.y];\n    })\n    .setOutput([output.rows, output.cols]);\n  const kernel3 = gpu\n    .createKernel(function (a) {\n      return Math.log(1.0 - a[this.thread.x][this.thread.y]);\n    })\n    .setOutput([predictions.rows, predictions.cols]);\n\n  return elementWiseAdd(\n    elementWiseMultiply(\n      output,\n      new Matrix(output.rows, output.cols, kernel(output.data) as number[][])\n    ),\n    elementWiseMultiply(\n      new Matrix(output.rows, output.cols, kernel2(output.data) as number[][]),\n      new Matrix(\n        predictions.rows,\n        predictions.cols,\n        kernel3(predictions.data) as number[][]\n      )\n    )\n  ).sum();\n};\n\nexport const tanhActivation = (m: Matrix): Matrix => {\n  const kernel = gpu\n    .createKernel(function (a) {\n      return (\n        2.0 / (1.0 + Math.exp(-2.0 * a[this.thread.x][this.thread.y])) - 1.0\n      );\n    })\n    .setOutput([m.rows, m.cols]);\n  return new Matrix(m.rows, m.cols, kernel(m.data) as number[][]);\n};\n\nexport const tanhDerivative = (m: Matrix): Matrix => {\n  const kernel = gpu\n    .createKernel(function (a) {\n      return (\n        1.0 -\n        Math.pow(\n          2.0 / (1.0 + Math.exp(-2.0 * a[this.thread.x][this.thread.y])) - 1.0,\n          2.0\n        )\n      );\n    })\n    .setOutput([m.rows, m.cols]);\n  return new Matrix(m.rows, m.cols, kernel(m.data) as number[][]);\n};\n\nexport const reluActivation = (m: Matrix): Matrix => {\n  const kernel = gpu\n    .createKernel(function (a) {\n      return Math.max(0.0, a[this.thread.x][this.thread.y]);\n    })\n    .setOutput([m.rows, m.cols]);\n  return new Matrix(m.rows, m.cols, kernel(m.data) as number[][]);\n};\n\nexport const reluDerivative = (m: Matrix): Matrix => {\n  const kernel = gpu\n    .createKernel(function (a) {\n      if (a[this.thread.x][this.thread.y] > 0) {\n        return 1;\n      }\n      return 0;\n    })\n    .setOutput([m.rows, m.cols]);\n  return new Matrix(m.rows, m.cols, kernel(m.data) as number[][]);\n};\n\nexport const softplusActivation = (m: Matrix): Matrix => {\n  const kernel = gpu\n    .createKernel(function (a) {\n      return Math.log(1 + Math.exp(a[this.thread.x][this.thread.y]));\n    })\n    .setOutput([m.rows, m.cols]);\n  return new Matrix(m.rows, m.cols, kernel(m.data) as number[][]);\n};\n\nexport const softplusDerivative = (m: Matrix): Matrix => {\n  const kernel = gpu\n    .createKernel(function (a) {\n      return 1 / (1 + Math.exp(-a[this.thread.x][this.thread.y]));\n    })\n    .setOutput([m.rows, m.cols]);\n  return new Matrix(m.rows, m.cols, kernel(m.data) as number[][]);\n};\n\nexport const penalty = (m: Matrix): number => {\n  const kernel = gpu\n    .createKernel(function (a) {\n      return Math.pow(a[this.thread.x][this.thread.y], 2);\n    })\n    .setOutput([m.rows, m.cols]);\n  return new Matrix(m.rows, m.cols, kernel(m.data) as number[][]).sum();\n};\n\nexport const sqrt = (m: Matrix): Matrix => {\n  const kernel = gpu\n    .createKernel(function (a) {\n      return Math.sqrt(a[this.thread.x][this.thread.y] + 1e-8);\n    })\n    .setOutput([m.rows, m.cols]);\n  return new Matrix(m.rows, m.cols, kernel(m.data) as number[][]);\n};\n\nexport const purelinLoss = (output: Matrix, predictions: Matrix): number => {\n  const kernel = gpu\n    .createKernel(function (a, b) {\n      return (\n        b[this.thread.x][this.thread.y] -\n        Math.pow(a[this.thread.x][this.thread.y], 2)\n      );\n    })\n    .setOutput([output.rows, output.cols]);\n  return new Matrix(\n    output.rows,\n    output.cols,\n    kernel(output.data) as number[][]\n  ).sum();\n};\n","import { Dimension, Layers } from \"./types\";\nimport { cols, Matrix, elementWiseSubtract } from \"./math/matrix\";\nimport * as fs from \"fs\";\nimport { Dataset } from \"./dataset/dataset\";\n\nclass Network {\n  private dimensions: Dimension = null;\n  private size: number = 0;\n  private layers: Layers[] = [];\n\n  constructor(dimensions: Dimension) {\n    this.dimensions = dimensions;\n  }\n\n  addLayer(layer: Layers) {\n    this.size++;\n    this.layers.push(layer);\n  }\n\n  getLayers(): Layers[] {\n    return this.layers;\n  }\n\n  forward(input: Matrix): Matrix {\n    let output = input;\n\n    this.layers.forEach((layer: Layers) => {\n      output = layer.forward(output);\n    });\n\n    return output;\n  }\n\n  backward(X: Matrix, Y: Matrix, predictions: Matrix, regularization: number) {\n    const m = cols(X);\n\n    let delta = elementWiseSubtract(predictions, Y);\n\n    for (let layer = this.layers.length - 1; layer >= 0; layer -= 1) {\n      delta = this.layers[layer].getBackPropagation().propagate(X, m, regularization, delta);\n    }\n  }\n\n  loss(output: Matrix, predictions: Matrix) {\n    return this.layers[this.layers.length - 1].loss(output, predictions);\n  }\n\n  error(m: number) {\n    return this.layers[this.layers.length - 1].error(m);\n  }\n\n  save(path: string): Promise<string> {\n    const resultJSON = {\n      dimensions: this.dimensions,\n      layers: [],\n    };\n\n    this.layers.forEach((layer: Layers) => {\n      resultJSON.layers.push({\n        type: layer.getType(),\n        size: layer.getSize(),\n        weights: {\n          W: layer.W.data,\n          b: layer.b.data,\n        },\n      });\n    });\n\n    const result = JSON.stringify(resultJSON);\n\n    return new Promise((resolve, reject) => {\n      fs.writeFile(path, result, (err) => {\n        if (err) {\n          console.error(err);\n          reject();\n        }\n        resolve(result);\n      });\n    });\n  }\n}\n\nexport { Network };\nexport default Network;\n","import Network from \"../network\";\nimport { AbstractOptimizer } from \"./optimizer/abstract\";\nimport { Dataset } from \"../dataset/dataset\";\n\nexport abstract class AbstractTrainer {\n  network: Network = null;\n  optimizer: AbstractOptimizer = null;\n  regularization: number = 0;\n  iterations: number = 1000;\n  learningRate: number = 0.1;\n  verbose: boolean = true;\n  verboseStep: number = 1;\n  stepCallback: Function = () => null;\n\n  constructor(network: Network, optimizer: AbstractOptimizer) {\n    this.network = network;\n    this.optimizer = optimizer;\n  }\n\n  setRegularization(regularization: number): AbstractTrainer {\n    this.regularization = regularization;\n    return this;\n  }\n\n  setIterations(iterations: number): AbstractTrainer {\n    this.iterations = iterations;\n    return this;\n  }\n\n  setLearningRate(learningRate: number): AbstractTrainer {\n    this.learningRate = learningRate;\n    return this;\n  }\n\n  setVerbose(verbose: boolean): AbstractTrainer {\n    this.verbose = verbose;\n    return this;\n  }\n\n  setVerboseStep(verboseStep: number): AbstractTrainer {\n    this.verboseStep = verboseStep;\n    return this;\n  }\n\n  setStepCallback(stepCallback: Function): AbstractTrainer {\n    this.stepCallback = stepCallback;\n    return this;\n  }\n\n  cost(inputDataset: Dataset, outputDataset: Dataset) {\n    const batchSize = 100;\n    const numberOfExamples = inputDataset.getNumberOfExamples();\n    const numBatches = Math.ceil(numberOfExamples / batchSize);\n\n    let cost = 0;\n    let accuracy = 0;\n    let penalty = 0;\n\n    this.network.getLayers().forEach((layer) => {\n      penalty += layer.penalty();\n    });\n\n    for (\n      let batch = 0, offset = 0;\n      batch < numberOfExamples;\n      batch += batchSize, offset += 1\n    ) {\n      const predictedOutput = this.network.forward(\n        inputDataset.getBatch(offset, batchSize)\n      );\n      const correctOutput = outputDataset.getBatch(offset, batchSize);\n\n      const miniBatchSize = correctOutput.cols;\n\n      let loss = this.network.loss(correctOutput, predictedOutput);\n      let error = this.network.error(miniBatchSize);\n\n      cost +=\n        (error * loss +\n          (this.regularization * penalty) / (2.0 * miniBatchSize)) /\n        // TODO: fix it\n        (numBatches * (miniBatchSize / batchSize));\n\n      for (let col = 0; col < predictedOutput.cols; col += 1) {\n        const index1 = predictedOutput.colMaxCoeffIndex(col);\n        const index2 = predictedOutput.colMaxCoeffIndex(col);\n\n        if (index1 === index2) {\n          accuracy++;\n        }\n      }\n    }\n\n    const result = {\n      cost,\n      accuracy: ((accuracy - 1) / numberOfExamples) * 100,\n    };\n\n    return result;\n  }\n}\n","import { AbstractTrainer } from \"./abstract\";\nimport { Dataset } from \"../dataset/dataset\";\n\nexport class MiniBatchTrainer extends AbstractTrainer {\n  batchSize: number = 100;\n\n  setBatchSize(batchSize: number): MiniBatchTrainer {\n    this.batchSize = batchSize;\n    return this;\n  }\n\n  train(inputDataset: Dataset, outputDataset: Dataset) {\n    const numberOfExamples = inputDataset.getNumberOfExamples();\n    const startTime = new Date().getTime();\n\n    let t = 0;\n\n    this.optimizer.setBatchSize(this.batchSize);\n\n    for (let i = 0; i < this.iterations; i += 1) {\n      const startIterationTime = new Date().getTime();\n\n      for (\n        let batch = 0, offset = 0;\n        batch < numberOfExamples;\n        batch += this.batchSize, offset += this.batchSize\n      ) {\n        const startIterationTime2 = new Date().getTime();\n        const input = inputDataset.getBatch(offset, this.batchSize);\n        const output = outputDataset.getBatch(offset, this.batchSize);\n        const forward = this.network.forward(input);\n\n        this.network.backward(input, output, forward, this.regularization);\n\n        this.network.getLayers().forEach((layer) => {\n          this.optimizer.setT(++t);\n          this.optimizer.optimize(layer);\n        });\n\n        if (this.verbose) {\n          const endIterationTime = new Date().getTime();\n          console.log(\n            `Batch: ${offset} / ${numberOfExamples} | Time: ${endIterationTime - startIterationTime2} ms | ${endIterationTime - startIterationTime} ms.`\n          );\n        }\n      }\n\n      if (this.verbose) {\n        if ((i + 1) % this.verboseStep === 0) {\n          const endTime = new Date().getTime();\n          const currentResult = this.cost(inputDataset, outputDataset);\n\n          console.log(\n            `Iteration: ${i + 1} | Cost: ${currentResult.cost} | Accuracy: ${\n              currentResult.accuracy\n            }% | Time: ${endTime - startTime} ms.`\n          );\n        }\n      }\n\n      if (typeof this.stepCallback === \"function\") {\n        this.stepCallback({\n          iteration: i,\n        });\n      }\n    }\n  }\n}\n","import { Layers } from \"../../types\";\n\nexport abstract class AbstractOptimizer {\n  protected batchSize: number = 0;\n  protected t: number = 0;\n  protected learningRate: number = 0;\n\n  setBatchSize(batchSize: number): AbstractOptimizer {\n    this.batchSize = batchSize;\n    return this;\n  }\n\n  setT(t: number): AbstractOptimizer {\n    this.t = t;\n    return this;\n  }\n\n  setLearningRate(learningRate: number): AbstractOptimizer {\n    this.learningRate = learningRate;\n    return this;\n  }\n\n  abstract optimize(layer: Layers);\n}\n","import { AbstractOptimizer } from \"./abstract\";\nimport { Layers } from \"../../types\";\nimport {\n  elementWiseAdd,\n  elementWiseDivide,\n  elementWiseDivideNumber,\n  elementWiseMultiply,\n  elementWiseMultiplyNumber,\n  elementWiseSubtract,\n  sqrt,\n} from \"../../math/matrix\";\n\nexport class OptimizerAdam extends AbstractOptimizer {\n  optimize(layer: Layers) {\n    this.adam(layer, this.learningRate, this.t);\n  }\n\n  adam(layer: Layers, learningRate: number, t: number) {\n    const beta1 = 0.9;\n    const beta2 = 0.999;\n    const epsilon = 1e-8;\n\n    layer.vW = elementWiseAdd(\n      elementWiseMultiplyNumber(layer.vW, beta1),\n      elementWiseMultiplyNumber(layer.gW, 1 - beta1)\n    );\n    const wCorrected = elementWiseDivideNumber(\n      layer.vW,\n      1 - Math.pow(beta1, t)\n    );\n\n    layer.cW = elementWiseAdd(\n      elementWiseMultiplyNumber(layer.cW, beta1),\n      elementWiseMultiplyNumber(layer.gW, 1 - beta1)\n    );\n    const sCorrected = sqrt(\n      elementWiseMultiplyNumber(layer.cW, 1 - Math.pow(beta2, t))\n    );\n\n    layer.W = elementWiseSubtract(\n      layer.W,\n      elementWiseMultiplyNumber(\n        elementWiseMultiply(wCorrected, sCorrected),\n        learningRate\n      )\n    );\n\n    layer.vb = elementWiseAdd(\n      elementWiseMultiplyNumber(layer.vb, beta1),\n      elementWiseMultiplyNumber(layer.gb, 1 - beta1)\n    );\n    const wCorrected2 = elementWiseDivideNumber(\n      layer.vb,\n      1 - Math.pow(beta1, t)\n    );\n    layer.cb = elementWiseAdd(\n      elementWiseMultiplyNumber(layer.cb, beta2),\n      elementWiseMultiplyNumber(\n        elementWiseMultiply(layer.gb, layer.gb),\n        1 - beta2\n      )\n    );\n    const sCorrected2 = sqrt(\n      elementWiseDivideNumber(layer.cb, 1 - Math.pow(beta2, t))\n    );\n\n    layer.b = elementWiseSubtract(\n      layer.b,\n      elementWiseMultiplyNumber(\n        elementWiseDivide(wCorrected2, sCorrected2),\n        learningRate\n      )\n    );\n  }\n}\n","import { AbstractOptimizer } from \"./abstract\";\nimport { Layers } from \"../../types\";\nimport {\n  elementWiseMultiplyNumber,\n  elementWiseSubtract,\n} from \"../../math/matrix\";\n\nexport class OptimizerGradientDescent extends AbstractOptimizer {\n  optimize(layer: Layers) {\n    this.gradientDescent(layer, this.learningRate);\n  }\n\n  gradientDescent(layer: Layers, learningRate: number) {\n    layer.W = elementWiseSubtract(\n      layer.W,\n      elementWiseMultiplyNumber(layer.gW, learningRate)\n    );\n    layer.b = elementWiseSubtract(\n      layer.b,\n      elementWiseMultiplyNumber(layer.gb, learningRate)\n    );\n  }\n}\n","import {\n  SoftmaxLayer,\n  LogisticLayer,\n  TanhLayer,\n  ReluLayer,\n  SoftplusLayer,\n  AbstractLayer,\n} from \"./layer\";\nimport { ConvLayer } from \"./layer/\";\nimport { MaxPoolLayer } from \"./layer/\";\nimport { FullyConnectedLayer } from \"./layer/\";\nimport { PurelinLayer } from \"./layer/purelin\";\n\nexport type Dimension = [number] | [number, number, number];\n\nexport enum LayerType {\n  logistic = \"logistic\",\n  softmax = \"softmax\",\n  tanh = \"tanh\",\n  relu = \"relu\",\n  softplus = \"softplus\",\n  conv = \"conv\",\n  maxpool = \"maxpool\",\n  fullyconnected = \"fullyconnected\",\n  purelin = \"purelin\",\n}\n\nexport type Layers =\n  | LogisticLayer\n  | SoftmaxLayer\n  | TanhLayer\n  | ReluLayer\n  | SoftplusLayer\n  | AbstractLayer\n  | ConvLayer\n  | MaxPoolLayer\n  | FullyConnectedLayer\n  | PurelinLayer;\nexport type Layers1D =\n  | LogisticLayer\n  | SoftmaxLayer\n  | TanhLayer\n  | ReluLayer\n  | SoftplusLayer\n  | PurelinLayer\n  | AbstractLayer;\nexport type Layers3D = ConvLayer | MaxPoolLayer | FullyConnectedLayer;\n","module.exports = require(\"csvtojson\");","module.exports = require(\"fs\");","module.exports = require(\"gpu.js\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import { Builder1D } from \"./builder/builder1d\";\nimport { Builder3D } from \"./builder/builder3d\";\nimport {\n  SoftmaxLayer,\n  LogisticLayer,\n  ReluLayer,\n  SoftplusLayer,\n  TanhLayer,\n  ConvLayer,\n  FullyConnectedLayer,\n  MaxPoolLayer,\n} from \"./layer\";\nimport { Matrix } from \"./math/matrix\";\nimport {\n  multiply as matrixMultiply,\n  sum as matrixSum,\n  fillRandom as matrixFillRandom,\n  elementWiseMultiply as matrixElementWiseMultiply,\n  elementWiseDivide as matrixElementWiseDivide,\n  elementWiseAdd as matrixElementWiseAdd,\n  elementWiseSubtract as matrixElementWiseSubtract,\n} from \"./math/matrix\";\nimport { DatasetBuilder } from \"./dataset/datasetbuilder\";\nimport { OptimizerAdam } from \"./trainer/optimizer/adam\";\nimport { OptimizerGradientDescent } from \"./trainer/optimizer/gradientdescent\";\nimport { MiniBatchTrainer } from \"./trainer/minibatch\";\nimport { CallbackDatabaseModifier } from \"./dataset/datasetmodifier/callback\";\nimport { MinMaxScalingDatabaseModifier } from \"./dataset/datasetmodifier/minmaxscaling\";\nimport { MissingDataScalingDatabaseModifier } from \"./dataset/datasetmodifier/missingdata\";\n\nconst Builders = { Builder1D, Builder3D };\nconst Math = {\n  Matrix,\n  matrixMultiply,\n  matrixSum,\n  matrixFillRandom,\n  matrixElementWiseMultiply,\n  matrixElementWiseDivide,\n  matrixElementWiseAdd,\n  matrixElementWiseSubtract,\n};\nconst Layers = {\n  SoftmaxLayer,\n  LogisticLayer,\n  ReluLayer,\n  SoftplusLayer,\n  TanhLayer,\n  ConvLayer,\n  MaxPoolLayer,\n  FullyConnectedLayer,\n};\nconst Dataset = {\n  DatasetBuilder: DatasetBuilder,\n};\nconst Optimizers = {\n  OptimizerAdam,\n  OptimizerGradientDescent,\n};\nconst Trainers = {\n  MiniBatchTrainer,\n};\nconst DatasetModifiers = {\n  CallbackDatabaseModifier,\n  MinMaxScalingDatabaseModifier,\n  MissingDataScalingDatabaseModifier,\n};\n\nexport {\n  Builders,\n  Math,\n  Layers,\n  Dataset,\n  Optimizers,\n  Trainers,\n  DatasetModifiers,\n};\n"],"names":["Network","BackpropagationFactory","AbstractBuilder","dimension","dimensions","network","type","callback","layer","lastLayer","firstLayerTransition","transition","configure","setBackPropagation","create","addLayer","fs","LogisticLayer","ReluLayer","SoftmaxLayer","SoftplusLayer","TanhLayer","Builder1D","setWidth","jsonPath","Promise","resolve","reject","readFile","err","data","json","JSON","parse","toString","builder","forEach","layerData","layerClass","createLayer","setSize","getNetwork","getLayers","i","W","b","ConvLayer","MaxPoolLayer","Builder3D","setFilterSize","setStride","setNumFilters","setPadding","Matrix","Dataset","exampleSize","numberOfExamples","arr","example","dataIndex","length","Number","NaN","index","col","offset","batchSize","block","rows","csvtojson","DatasetBuilder","csvPath","noheader","output","fromFile","then","dataset","AbstractDatasetModifier","getNumberOfExamples","applyToExample","CallbackDatabaseModifier","exampleIndex","exampleAt","row","gpu","MinMaxScalingDatabaseModifier","min","Infinity","max","Math","kernel","createKernel","a","thread","x","y","constants","setOutput","cols","setConstants","MissingDataScalingDatabaseModifier","rowsToFill","correctExamplesCount","sum","valueToFill","isNaN","push","modificationType","elementWiseAdd","multiply","penalty","AbstractLayer","A","Z","gW","gb","vW","cW","vb","cb","backPropagation","input","replicate","activation","value","width","height","depth","previousLayer","fillRandom","setZeros","AbstractLayer1D","resize","is1D","getSize","is3D","getOutputWidth","getOutputHeight","getOutputDepth","setHeight","AbstractLayer3D","setDepth","getWidth","getHeight","getDepth","AbstractBackPropagation","elementWiseMultiply","elementWiseMultiplyNumber","elementWiseDivideNumber","Backpropagation1Dto1D","regularization","sigma","previousActivations","delta","transpose","conjugate","rowwiseSum","derivative","Backpropagation3Dto1D","BackpropagationToConv","padding","getPadding","stride","getStride","filterSize","getFilterSize","outputWidth","outputHeight","outputDepth","inputWidth","inputHeight","inputDepth","tmpResult","result","aPrev","m","c","h","w","vertStart","vertEnd","horizStart","horizEnd","d","vertical","verticalPad","horizontal","horizontalPad","z","BackpropagationToMaxPool","prevLayer","_max","inputOffset","outputOffset","maxX","maxY","vStart","hStart","LayerType","getType","conv","maxpool","fullyconnected","reluActivation","reluDerivative","im2col","numFilters","size","tmp","rollToColMatrix","setCol","predictions","Error","FullyConnectedLayer","logisticActivation","logisticDerivative","logisticLoss","logistic","pool","relu","softmaxActivation","softmaxLoss","softmax","softplusActivation","softplusDerivative","softplus","tanhActivation","tanhDerivative","tanh","channels","kernel_h","kernel_w","pad_h","pad_w","stride_h","stride_w","currentResultCol","boundingY","boundingX","currentResultRow","channel","resultWidth","resultHeight","resultDepth","GPU","mode","generateData","Array","Float32Array","ArrayBuffer","view","DataView","num","setFloat64","oldData","newData","maxIndex","startRow","startCol","blockRows","blockCols","newRow","newCol","_row","m1","m2","elementWiseSubtract","parameter","random","sqrt","setOnes","number","elementWiseDivide","exp","divider","colwiseSum","log","kernel2","kernel3","pow","purelinLoss","layers","forward","X","Y","getBackPropagation","propagate","loss","error","path","resultJSON","weights","stringify","writeFile","console","AbstractTrainer","optimizer","iterations","learningRate","verbose","verboseStep","stepCallback","inputDataset","outputDataset","numBatches","ceil","cost","accuracy","batch","predictedOutput","getBatch","correctOutput","miniBatchSize","index1","colMaxCoeffIndex","index2","MiniBatchTrainer","startTime","Date","getTime","t","setBatchSize","startIterationTime","startIterationTime2","backward","setT","optimize","endIterationTime","endTime","currentResult","iteration","AbstractOptimizer","OptimizerAdam","adam","beta1","beta2","epsilon","wCorrected","sCorrected","wCorrected2","sCorrected2","OptimizerGradientDescent","gradientDescent","matrixMultiply","matrixSum","matrixFillRandom","matrixElementWiseMultiply","matrixElementWiseDivide","matrixElementWiseAdd","matrixElementWiseSubtract","Builders","Layers","Optimizers","Trainers","DatasetModifiers"],"sourceRoot":""}