{"version":3,"file":"impulse-ts.dev.js","mappings":"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","sources":["webpack://impulse-ts/./src/typescript/builder/abstract.tsx","webpack://impulse-ts/./src/typescript/builder/builder1d.tsx","webpack://impulse-ts/./src/typescript/dataset/Dataset.tsx","webpack://impulse-ts/./src/typescript/dataset/DatasetBuilder.tsx","webpack://impulse-ts/./src/typescript/layer/abstract.tsx","webpack://impulse-ts/./src/typescript/layer/abstract1d.tsx","webpack://impulse-ts/./src/typescript/layer/backpropagation/abstract.tsx","webpack://impulse-ts/./src/typescript/layer/backpropagation/backpropagation1dto1d.tsx","webpack://impulse-ts/./src/typescript/layer/index.tsx","webpack://impulse-ts/./src/typescript/layer/logistic.tsx","webpack://impulse-ts/./src/typescript/layer/relu.tsx","webpack://impulse-ts/./src/typescript/layer/softmax.tsx","webpack://impulse-ts/./src/typescript/layer/softplus.tsx","webpack://impulse-ts/./src/typescript/layer/tanh.tsx","webpack://impulse-ts/./src/typescript/main.tsx","webpack://impulse-ts/./src/typescript/math/matrix.tsx","webpack://impulse-ts/./src/typescript/network.tsx","webpack://impulse-ts/./src/typescript/types.tsx","webpack://impulse-ts/external \"csvtojson\"","webpack://impulse-ts/external \"fs\"","webpack://impulse-ts/external \"gpu.js\"","webpack://impulse-ts/webpack/bootstrap","webpack://impulse-ts/webpack/runtime/compat get default export","webpack://impulse-ts/webpack/runtime/define property getters","webpack://impulse-ts/webpack/runtime/hasOwnProperty shorthand","webpack://impulse-ts/webpack/runtime/make namespace object","webpack://impulse-ts/webpack/before-startup","webpack://impulse-ts/webpack/startup","webpack://impulse-ts/webpack/after-startup"],"sourcesContent":["import { Dimension, Layers } from \"../types\";\nimport Network from \"../network\";\n\nabstract class AbstractBuilder {\n  protected dimensions: Dimension = null;\n  protected lastLayer: Layers = null;\n  protected network: Network = null;\n\n  constructor(dimension: Dimension) {\n    this.dimensions = dimension;\n    this.network = new Network(dimension);\n  }\n\n  createLayer(type: Layers, callback: Function) {\n    const layer = new type();\n\n    if (typeof callback === \"function\") {\n      callback(layer);\n    }\n\n    if (this.lastLayer === null) {\n      this.firstLayerTransition(layer);\n    } else {\n      layer.transition(this.lastLayer);\n    }\n\n    layer.configure();\n\n    this.network.addLayer(layer);\n    this.lastLayer = layer;\n  }\n\n  getNetwork(): Network {\n    return this.network;\n  }\n\n  abstract firstLayerTransition(layer: Layers);\n}\n\nexport { AbstractBuilder };\nexport default AbstractBuilder;\n","import { AbstractBuilder } from \"./abstract\";\nimport { Layers } from \"../types\";\nimport Network from \"../network\";\nimport * as fs from \"fs\";\nimport {\n  LogisticLayer,\n  ReluLayer,\n  SoftmaxLayer,\n  SoftplusLayer,\n  TanhLayer,\n} from \"../main\";\n\nclass Builder1D extends AbstractBuilder {\n  firstLayerTransition(layer: Layers) {\n    layer.setWidth(this.dimensions[0]);\n  }\n\n  static fromJSON(jsonPath: string): Promise<Network> {\n    return new Promise((resolve, reject) => {\n      fs.readFile(jsonPath, (err, data) => {\n        if (err) {\n          reject(err);\n          return;\n        }\n        const json = JSON.parse(data.toString());\n\n        const builder = new Builder1D(json[\"dimensions\"]);\n\n        json[\"layers\"].forEach((layerData) => {\n          let layerClass = null;\n\n          if (layerData[\"type\"] === \"logistic\") {\n            layerClass = LogisticLayer;\n          } else if (layerData[\"type\"] === \"softmax\") {\n            layerClass = SoftmaxLayer;\n          } else if (layerData[\"type\"] === \"relu\") {\n            layerClass = ReluLayer;\n          } else if (layerData[\"type\"] === \"softplus\") {\n            layerClass = SoftplusLayer;\n          } else if (layerData[\"type\"] === \"tanh\") {\n            layerClass = TanhLayer;\n          }\n\n          builder.createLayer(layerClass, (layer) => {\n            layer.setSize(layerData[\"dimensions\"]);\n          });\n        });\n\n        const network = builder.getNetwork();\n\n        network.getLayers().forEach((layer, i) => {\n          layer.W = json[\"layers\"][\"W\"];\n          layer.b = json[\"layers\"][\"b\"];\n        });\n\n        resolve(network);\n      });\n    });\n  }\n}\n\nexport { Builder1D };\nexport default Builder1D;\n","import { Matrix } from \"../math/matrix\";\n\nexport class Dataset {\n  public exampleSize: number = 0;\n  public numberOfExamples: number = 0;\n  public data: Matrix = null;\n\n  constructor(exampleSize: number, numberOfExamples: number, arr: number[][]) {\n    this.exampleSize = exampleSize;\n    this.numberOfExamples = numberOfExamples;\n    const data = [];\n\n    for (let example = 0; example < numberOfExamples; example += 1) {\n      data[example] = [];\n      for (let dataIndex = 0; dataIndex < exampleSize; dataIndex += 1) {\n        data[example][dataIndex] = Number(arr[example][dataIndex] || 0);\n      }\n    }\n\n    this.data = new Matrix(this.exampleSize, this.numberOfExamples, data);\n  }\n\n  exampleAt(index: number): Matrix {\n    const data = [];\n    for (let dataIndex = 0; dataIndex < this.exampleSize; dataIndex += 1) {\n      data[dataIndex] = [];\n      data[dataIndex][0] = this.data.data[index][dataIndex];\n    }\n\n    return new Matrix(this.exampleSize, 1, data);\n  }\n}\n","import * as csvtojson from \"csvtojson\";\nimport { Dataset } from \"./Dataset\";\n\nexport class DatasetBuilder {\n  static fromCSV(csvPath: string): Promise<Dataset> {\n    return new Promise((resolve) => {\n      csvtojson({\n        noheader: true,\n        output: \"csv\",\n      })\n        .fromFile(csvPath)\n        .then((arr) => {\n          const numberOfExamples = arr.length;\n          const exampleSize = arr[0].length;\n\n          const dataset = new Dataset(exampleSize, numberOfExamples, arr);\n          resolve(dataset);\n        });\n    });\n  }\n}\n","import { elementWiseAdd, Matrix, multiply } from \"../math/matrix\";\nimport { Dimension, Layers } from \"../types\";\nimport { AbstractBackPropagation } from \"./backpropagation/abstract\";\n\nabstract class AbstractLayer {\n  public W: Matrix;\n  public b: Matrix;\n  public A: Matrix;\n  public Z: Matrix;\n  public gW: Matrix;\n  public gb: Matrix;\n\n  protected width: number = 0;\n  protected height: number = 0;\n  protected depth: number = 0;\n  protected previousLayer: Layers = null;\n  protected backPropagation: AbstractBackPropagation = null;\n\n  constructor() {\n    this.W = new Matrix();\n    this.b = new Matrix();\n    this.A = new Matrix();\n    this.Z = new Matrix();\n    this.gW = new Matrix();\n    this.gb = new Matrix();\n  }\n\n  getBackPropagation(): AbstractBackPropagation {\n    return this.backPropagation;\n  }\n\n  forward(input: Matrix): Matrix {\n    this.Z = elementWiseAdd(\n      multiply(this.W, input),\n      this.b.replicate(1, input.cols)\n    );\n    this.A = this.activation(this.Z);\n    return this.A;\n  }\n\n  setWidth(value: number) {\n    this.width = value;\n  }\n\n  getWidth(): number {\n    return this.width;\n  }\n\n  setHeight(value: number) {\n    this.height = value;\n  }\n\n  getHeight(): number {\n    return this.height;\n  }\n\n  setDepth(value: number) {\n    this.depth = value;\n  }\n\n  getDepth(): number {\n    return this.depth;\n  }\n\n  abstract getOutputWidth();\n\n  abstract getOutputHeight();\n\n  abstract getOutputDepth();\n\n  abstract configure();\n\n  abstract is1D(): boolean;\n\n  abstract is3D(): boolean;\n\n  transition(previousLayer: Layers): void {\n    this.previousLayer = previousLayer;\n  }\n\n  abstract setSize(dimension: Dimension);\n\n  abstract getSize();\n\n  abstract activation(value: Matrix): Matrix;\n\n  abstract derivative(value: Matrix): Matrix;\n\n  abstract getType();\n\n  abstract loss(output: Matrix, predictions: Matrix): number;\n\n  abstract error(m: number): number;\n}\n\nexport { AbstractLayer };\n","import { AbstractLayer } from \"./abstract\";\nimport { fillRandom, setZeros } from \"../math/matrix\";\nimport { Dimension, Layers } from \"../types\";\nimport { Backpropagation1Dto1D } from \"./backpropagation/backpropagation1dto1d\";\n\nabstract class AbstractLayer1D extends AbstractLayer {\n  protected depth: number = 1;\n\n  configure() {\n    this.W.resize(this.height, this.width);\n    this.W = fillRandom(this.W, this.width);\n\n    this.b.resize(this.height, 1);\n    this.b = fillRandom(this.b, this.width);\n\n    this.gW.resize(this.height, this.width);\n    this.gW = setZeros(this.gW);\n\n    this.gb.resize(this.height, 1);\n    this.gb = setZeros(this.gb);\n\n    this.backPropagation = new Backpropagation1Dto1D(this, this.previousLayer);\n  }\n\n  is1D(): boolean {\n    return true;\n  }\n\n  is3D(): boolean {\n    return false;\n  }\n\n  transition(previousLayer: Layers) {\n    if (previousLayer.is1D()) {\n      this.setWidth(previousLayer.getSize());\n    } else if (previousLayer.is3D()) {\n      this.setWidth(\n        previousLayer.getOutputWidth() *\n          previousLayer.getOutputHeight() *\n          previousLayer.getOutputDepth()\n      );\n    }\n\n    super.transition(previousLayer);\n  }\n\n  setSize(value: Dimension) {\n    this.setHeight(value[0]);\n  }\n\n  getSize(): number {\n    return this.height;\n  }\n\n  getOutputWidth() {\n    return this.width;\n  }\n\n  getOutputHeight() {\n    return this.height;\n  }\n\n  getOutputDepth() {\n    return 1;\n  }\n}\n\nexport { AbstractLayer1D };\n","import { Layers } from \"../../types\";\nimport {Matrix} from \"../../math/matrix\";\n\nexport abstract class AbstractBackPropagation {\n  protected layer: Layers = null;\n  protected previousLayer: Layers = null;\n\n  constructor(layer: Layers, previousLayer: Layers) {\n    this.layer = layer;\n    this.previousLayer = previousLayer;\n  }\n\n  abstract propagate(\n      input: Matrix,\n      numberOfExamples: number,\n      regularization: number,\n      sigma: Matrix\n  ): Matrix;\n}\n","import { AbstractBackPropagation } from \"./abstract\";\nimport {\n  elementWiseAdd,\n  elementWiseMultiply,\n  elementWiseMultiplyNumber,\n  Matrix,\n  multiply,\n} from \"../../math/matrix\";\nimport { elementWiseDivideNumber } from \"../../math/matrix\";\n\nexport class Backpropagation1Dto1D extends AbstractBackPropagation {\n  propagate(\n    input: Matrix,\n    numberOfExamples: number,\n    regularization: number,\n    sigma: Matrix\n  ): Matrix {\n    const previousActivations =\n      this.previousLayer !== null ? this.previousLayer.A : input;\n    const delta = multiply(sigma, previousActivations.transpose().conjugate());\n    this.layer.gW = elementWiseAdd(\n      elementWiseDivideNumber(delta.rowwiseSum(), numberOfExamples),\n      elementWiseMultiplyNumber(this.layer.W, regularization / numberOfExamples)\n    );\n    this.layer.gb = elementWiseDivideNumber(\n      sigma.rowwiseSum(),\n      numberOfExamples\n    );\n    if (this.previousLayer !== null) {\n      return elementWiseMultiply(\n        multiply(this.layer.W.transpose(), sigma),\n        this.previousLayer.derivative(this.previousLayer.A)\n      );\n    }\n    return new Matrix();\n  }\n}\n","import { AbstractLayer } from \"./abstract\";\nimport { SoftmaxLayer } from \"./softmax\";\nimport { LogisticLayer } from \"./logistic\";\nimport { TanhLayer } from \"./tanh\";\nimport { ReluLayer } from \"./relu\";\nimport { SoftplusLayer } from \"./softplus\";\n\nexport {\n  AbstractLayer,\n  SoftmaxLayer,\n  LogisticLayer,\n  TanhLayer,\n  ReluLayer,\n  SoftplusLayer,\n};\n","import {\n  logisticActivation,\n  logisticDerivative,\n  Matrix,\n  logisticLoss,\n} from \"../math/matrix\";\nimport { LayerType } from \"../types\";\nimport { AbstractLayer1D } from \"./abstract1d\";\n\nclass LogisticLayer extends AbstractLayer1D {\n  activation(m: Matrix): Matrix {\n    return logisticActivation(m);\n  }\n\n  derivative(m: Matrix): Matrix {\n    return logisticDerivative(m);\n  }\n\n  getType(): LayerType {\n    return LayerType.logistic;\n  }\n\n  loss(output: Matrix, predictions: Matrix): number {\n    return logisticLoss(output, predictions);\n  }\n\n  error(m: number): number {\n    return -1.0 / m;\n  }\n}\n\nexport { LogisticLayer };\n","import { Matrix, reluActivation, reluDerivative } from \"../math/matrix\";\nimport { LayerType } from \"../types\";\nimport { AbstractLayer1D } from \"./abstract1d\";\n\nclass ReluLayer extends AbstractLayer1D {\n  activation(m: Matrix): Matrix {\n    return reluActivation(m);\n  }\n\n  derivative(m: Matrix): Matrix {\n    return reluDerivative(m);\n  }\n\n  getType(): LayerType {\n    return LayerType.relu;\n  }\n\n  loss(output: Matrix, predictions: Matrix): number {\n    return 0.0; // todo\n  }\n\n  error(m: number): number {\n    return 0.0; // todo\n  }\n}\n\nexport { ReluLayer };\n","import { Matrix, softmaxActivation, softmaxLoss } from \"../math/matrix\";\nimport { LayerType } from \"../types\";\nimport { AbstractLayer1D } from \"./abstract1d\";\n\nclass SoftmaxLayer extends AbstractLayer1D {\n  activation(m: Matrix): Matrix {\n    return softmaxActivation(m);\n  }\n\n  derivative(m: Matrix): Matrix {\n    throw new Error(\"Unsupported usage.\");\n  }\n\n  getType(): LayerType {\n    return LayerType.softmax;\n  }\n\n  loss(output: Matrix, predictions: Matrix): number {\n    return softmaxLoss(output, predictions);\n  }\n\n  error(m: number): number {\n    return -1.0 / m;\n  }\n}\n\nexport { SoftmaxLayer };\n","import { Matrix, softplusActivation, softplusDerivative } from \"../math/matrix\";\nimport { LayerType } from \"../types\";\nimport { AbstractLayer1D } from \"./abstract1d\";\n\nclass SoftplusLayer extends AbstractLayer1D {\n  activation(m: Matrix): Matrix {\n    return softplusActivation(m);\n  }\n\n  derivative(m: Matrix): Matrix {\n    return softplusDerivative(m);\n  }\n\n  getType(): LayerType {\n    return LayerType.softplus;\n  }\n\n  loss(output: Matrix, predictions: Matrix): number {\n    return 0.0; // todo\n  }\n\n  error(m: number): number {\n    return 0.0; // todo\n  }\n}\n\nexport { SoftplusLayer };\n","import { Matrix, tanhActivation, tanhDerivative } from \"../math/matrix\";\nimport { LayerType } from \"../types\";\nimport { AbstractLayer1D } from \"./abstract1d\";\n\nclass TanhLayer extends AbstractLayer1D {\n  activation(m: Matrix): Matrix {\n    return tanhActivation(m);\n  }\n\n  derivative(m: Matrix): Matrix {\n    return tanhDerivative(m);\n  }\n\n  getType(): LayerType {\n    return LayerType.tanh;\n  }\n\n  loss(output: Matrix, predictions: Matrix): number {\n    return 0.0; // todo\n  }\n\n  error(m: number): number {\n    return 0.0; // todo\n  }\n}\n\nexport { TanhLayer };\n","import { Builder1D } from \"./builder/builder1d\";\nimport {\n  SoftmaxLayer,\n  LogisticLayer,\n  ReluLayer,\n  SoftplusLayer,\n  TanhLayer,\n} from \"./layer\";\nimport { Matrix } from \"./math/matrix\";\nimport {\n  multiply as matrixMultiply,\n  sum as matrixSum,\n  fillRandom as matrixFillRandom,\n  elementWiseMultiply as matrixElementWiseMultiply,\n  elementWiseDivide as matrixElementWiseDivide,\n  elementWiseAdd as matrixElementWiseAdd,\n  elementWiseSubtract as matrixElementWiseSubtract,\n} from \"./math/matrix\";\nimport { DatasetBuilder } from \"./dataset/DatasetBuilder\";\n\nexport {\n  Builder1D,\n  Matrix,\n  SoftmaxLayer,\n  LogisticLayer,\n  matrixMultiply,\n  matrixSum,\n  matrixFillRandom,\n  matrixElementWiseMultiply,\n  matrixElementWiseDivide,\n  matrixElementWiseAdd,\n  matrixElementWiseSubtract,\n  DatasetBuilder,\n  ReluLayer,\n  SoftplusLayer,\n  TanhLayer,\n};\n","import { GPU } from \"gpu.js\";\n\nexport const gpu = new GPU({ mode: \"gpu\" });\n\nexport class Matrix {\n  public rows = 0;\n  public cols = 0;\n  public data = null;\n\n  constructor(rows = 0, cols = 0, data: number[][] = null) {\n    this.resize(rows, cols);\n    if (data) {\n      this.generateData(data);\n    }\n  }\n\n  resize(rows, cols): Matrix {\n    this.rows = rows;\n    this.cols = cols;\n    this.data = [];\n    for (let row = 0; row < this.rows; row += 1) {\n      this.data[row] = new Array(this.cols).map(() => {\n        return 0;\n      });\n    }\n\n    return this;\n  }\n\n  generateData(arr: number[][]): Matrix {\n    this.data = [];\n    for (let row = 0; row < this.rows; row += 1) {\n      this.data[row] = new Array(this.cols).map(() => {\n        return 0;\n      });\n    }\n    for (let col = 0; col < this.cols; col += 1) {\n      for (let row = 0; row < this.rows; row += 1) {\n        if (typeof arr[col] === \"number\") {\n          this.data[row][col] = arr[col];\n        } else if (arr[col] instanceof Float32Array) {\n          this.data[row][col] = arr[col][row];\n        } else {\n          this.data[row][col] = 0;\n        }\n      }\n    }\n    return this;\n  }\n\n  toBuffer(): ArrayBuffer {\n    const result = new ArrayBuffer(this.rows * this.cols * 64);\n    const view = new DataView(result, 0, this.rows * this.cols * 64);\n    this.data.forEach((num, i) => {\n      view.setFloat64(i, num);\n    });\n    return result;\n  }\n\n  sum(): number {\n    let sum = 0.0;\n    for (let row = 0; row < this.rows; row += 1) {\n      for (let col = 0; col < this.cols; col += 1) {\n        sum += this.data[row][col];\n      }\n    }\n    return sum;\n  }\n\n  colwiseSum(): Matrix {\n    const data = [];\n    for (let col = 0; col < this.cols; col += 1) {\n      let sum = 0.0;\n      for (let row = 0; row < this.rows; row += 1) {\n        sum += this.data[row][col];\n      }\n      data[col] = [sum];\n    }\n    return new Matrix(1, this.cols, data);\n  }\n\n  rowwiseSum(): Matrix {\n    const data = [];\n    for (let row = 0; row < this.rows; row += 1) {\n      let sum = 0.0;\n      for (let col = 0; col < this.rows; col += 1) {\n        sum += this.data[row][col];\n      }\n      data[row] = [sum];\n    }\n    return new Matrix(this.rows, 1, data);\n  }\n\n  replicate(rows: number, cols: number): Matrix {\n    const oldData = this.data;\n    const newData = [];\n    let result = null;\n    if (rows === 1 && this.cols === 1 && cols > 1) {\n      result = new Matrix(this.rows, cols);\n      for (let row = 0; row < this.rows; row += 1) {\n        newData[row] = [];\n        for (let col = 0; col < cols; col += 1) {\n          newData[row][col] = oldData[row][0];\n        }\n      }\n    } else if (cols === 1 && this.rows === 1 && rows > 1) {\n      result = new Matrix(rows, this.cols);\n      for (let row = 0; row < rows; row += 1) {\n        newData[row] = [];\n        for (let col = 0; col < this.cols; col += 1) {\n          newData[row][col] = oldData[0][col];\n        }\n      }\n    }\n    if (result) {\n      result.generateData(newData);\n      return result;\n    }\n    return this;\n  }\n\n  transpose(): Matrix {\n    const oldData = this.data;\n    const kernel = gpu\n      .createKernel(function (a) {\n        return a[this.thread.y][this.thread.x];\n      })\n      .setOutput([this.cols, this.rows]);\n\n    this.resize(this.cols, this.rows);\n    this.generateData(kernel(oldData) as number[][]);\n\n    return this;\n  }\n\n  conjugate(): Matrix {\n    return this;\n  }\n}\n\nexport const multiply = (m1: Matrix, m2: Matrix): Matrix => {\n  if (m1.cols !== m2.rows) {\n    throw new Error(\"DIMENSIONS error.\");\n  }\n\n  const kernel = gpu\n    .createKernel(function (a, b) {\n      let sum = 0;\n      for (let i = 0; i < this.constants.cols; i++) {\n        sum += a[this.thread.x][i] * b[i][this.thread.y];\n      }\n      return sum;\n    })\n    .setOutput([m1.rows, m2.cols])\n    .setConstants({\n      cols: m1.rows,\n    });\n\n  return new Matrix(m1.rows, m2.cols, kernel(m1.data, m2.data));\n};\n\nexport const elementWiseAdd = (m1: Matrix, m2: Matrix): Matrix => {\n  if (m1.rows !== m2.rows) {\n    throw new Error(\"ROWS number not equal.\");\n  }\n  if (m1.cols !== m2.cols) {\n    throw new Error(\"COLS number not equal.\");\n  }\n\n  const kernel = gpu\n    .createKernel(function (a, b) {\n      return a[this.thread.x][this.thread.y] + b[this.thread.x][this.thread.y];\n    })\n    .setOutput([m1.rows, m2.cols]);\n\n  return new Matrix(m1.rows, m2.cols, kernel(m1.data, m2.data));\n};\n\nexport const elementWiseSubtract = (m1: Matrix, m2: Matrix): Matrix => {\n  if (m1.rows !== m2.rows) {\n    throw new Error(\"ROWS number not equal.\");\n  }\n  if (m1.cols !== m2.cols) {\n    throw new Error(\"COLS number not equal.\");\n  }\n\n  const kernel = gpu\n    .createKernel(function (a, b) {\n      return a[this.thread.x][this.thread.y] - b[this.thread.x][this.thread.y];\n    })\n    .setOutput([m1.rows, m2.cols]);\n\n  return new Matrix(m1.rows, m2.cols, kernel(m1.data, m2.data));\n};\n\nexport const fillRandom = (m1: Matrix, parameter: number): Matrix => {\n  const kernel = gpu\n    .createKernel(function () {\n      return (Math.random() - 0.5) * Math.sqrt(2.0 / this.constants.parameter);\n    })\n    .setOutput([m1.rows, m1.cols])\n    .setConstants({\n      parameter,\n    });\n\n  return new Matrix(m1.rows, m1.cols, kernel());\n};\n\nexport const setZeros = (m1: Matrix): Matrix => {\n  const kernel = gpu\n    .createKernel(function () {\n      return 0.0;\n    })\n    .setOutput([m1.rows, m1.cols]);\n  return new Matrix(m1.rows, m1.cols, kernel());\n};\n\nexport const elementWiseMultiply = (m1: Matrix, m2: Matrix): Matrix => {\n  if (m1.rows !== m2.rows) {\n    throw new Error(\"ROWS number not equal.\");\n  }\n  if (m1.cols !== m2.cols) {\n    throw new Error(\"COLS number not equal.\");\n  }\n\n  const kernel = gpu\n    .createKernel(function (a, b) {\n      return a[this.thread.x][this.thread.y] * b[this.thread.x][this.thread.y];\n    })\n    .setOutput([m1.rows, m2.cols]);\n\n  return new Matrix(m1.rows, m2.cols, kernel(m1.data, m2.data));\n};\n\nexport const elementWiseMultiplyNumber = (m1: Matrix, num: number): Matrix => {\n  const kernel = gpu\n    .createKernel(function (a) {\n      return a[this.thread.x][this.thread.y] * this.constants.number;\n    })\n    .setOutput([m1.rows, m1.cols])\n    .setConstants({\n      number: num,\n    });\n\n  return new Matrix(m1.rows, m1.cols, kernel(m1.data));\n};\n\nexport const sum = (m: Matrix): number => {\n  return m.sum();\n};\n\nexport const cols = (m: Matrix): number => {\n  return m.cols;\n};\n\nexport const elementWiseDivide = (m1: Matrix, m2: Matrix): Matrix => {\n  if (m1.rows !== m2.rows) {\n    throw new Error(\"ROWS number not equal.\");\n  }\n  if (m1.cols !== m2.cols) {\n    throw new Error(\"COLS number not equal.\");\n  }\n\n  const kernel = gpu\n    .createKernel(function (a, b) {\n      return a[this.thread.x][this.thread.y] / b[this.thread.x][this.thread.y];\n    })\n    .setOutput([m1.rows, m2.cols]);\n\n  return new Matrix(m1.rows, m2.cols, kernel(m1.data, m2.data));\n};\n\nexport const elementWiseDivideNumber = (m1: Matrix, num: number): Matrix => {\n  const kernel = gpu\n    .createKernel(function (a) {\n      return a[this.thread.x][this.thread.y] / this.constants.number;\n    })\n    .setOutput([m1.rows, m1.cols])\n    .setConstants({\n      number: num,\n    });\n\n  return new Matrix(m1.rows, m1.cols, kernel(m1.data));\n};\n\nexport const softmaxActivation = (m: Matrix): Matrix => {\n  const kernel = gpu\n    .createKernel(function (a) {\n      return Math.exp(a[this.thread.x][this.thread.y]);\n    })\n    .setOutput([m.rows, m.cols]);\n  const data = new Matrix(m.rows, m.cols, kernel(m.data));\n  const divider = new Matrix(1, m.cols, data.colwiseSum().data).replicate(\n    m.rows,\n    1\n  );\n  const result = new Matrix(\n    m.rows,\n    m.cols,\n    elementWiseDivide(data, divider).data\n  );\n  return result;\n};\n\nexport const softmaxLoss = (output: Matrix, predictions: Matrix): number => {\n  const kernel = gpu\n    .createKernel(function (a) {\n      return Math.log(a[this.thread.x][this.thread.y]);\n    })\n    .setOutput([predictions.rows, predictions.cols]);\n  return new Matrix(\n    output.rows,\n    output.cols,\n    elementWiseMultiply(\n      output,\n      new Matrix(output.rows, output.cols, kernel(predictions.data))\n    ).data\n  ).sum();\n};\n\nexport const logisticActivation = (m: Matrix): Matrix => {\n  const kernel = gpu\n    .createKernel(function (a) {\n      return 1.0 / (1.0 + Math.exp(-a[this.thread.x][this.thread.y]));\n    })\n    .setOutput([m.rows, m.cols]);\n  return new Matrix(m.rows, m.cols, kernel(m.data));\n};\n\nexport const logisticDerivative = (m: Matrix): Matrix => {\n  const kernel = gpu\n    .createKernel(function (a) {\n      return (\n        a[this.thread.x][this.thread.y] *\n        (1.0 - a[this.thread.x][this.thread.y])\n      );\n    })\n    .setOutput([m.rows, m.cols]);\n  return new Matrix(m.rows, m.cols, kernel(m.data));\n};\n\nexport const logisticLoss = (output: Matrix, predictions: Matrix): number => {\n  const kernel = gpu\n    .createKernel(function (a) {\n      return Math.log(a[this.thread.x][this.thread.y]);\n    })\n    .setOutput([output.rows, output.cols]);\n  const kernel2 = gpu\n    .createKernel(function (a) {\n      return 1.0 - a[this.thread.x][this.thread.y];\n    })\n    .setOutput([output.rows, output.cols]);\n  const kernel3 = gpu\n    .createKernel(function (a) {\n      return Math.log(1.0 - a[this.thread.x][this.thread.y]);\n    })\n    .setOutput([predictions.rows, predictions.cols]);\n\n  return elementWiseAdd(\n    elementWiseMultiply(\n      output,\n      new Matrix(output.rows, output.cols, kernel(output.data) as number[][])\n    ),\n    elementWiseMultiply(\n      new Matrix(output.rows, output.cols, kernel2(output.data) as number[][]),\n      new Matrix(\n        predictions.rows,\n        predictions.cols,\n        kernel3(predictions.data) as number[][]\n      )\n    )\n  ).sum();\n};\n\nexport const tanhActivation = (m: Matrix): Matrix => {\n  const kernel = gpu\n    .createKernel(function (a) {\n      return (\n        2.0 / (1.0 + Math.exp(-2.0 * a[this.thread.x][this.thread.y])) - 1.0\n      );\n    })\n    .setOutput([m.rows, m.cols]);\n  return new Matrix(m.rows, m.cols, kernel(m.data));\n};\n\nexport const tanhDerivative = (m: Matrix): Matrix => {\n  const kernel = gpu\n    .createKernel(function (a) {\n      return (\n        1.0 -\n        Math.pow(\n          2.0 / (1.0 + Math.exp(-2.0 * a[this.thread.x][this.thread.y])) - 1.0,\n          2.0\n        )\n      );\n    })\n    .setOutput([m.rows, m.cols]);\n  return new Matrix(m.rows, m.cols, kernel(m.data));\n};\n\nexport const reluActivation = (m: Matrix): Matrix => {\n  const kernel = gpu\n    .createKernel(function (a) {\n      return Math.max(0.0, a[this.thread.x][this.thread.y]);\n    })\n    .setOutput([m.rows, m.cols]);\n  return new Matrix(m.rows, m.cols, kernel(m.data));\n};\n\nexport const reluDerivative = (m: Matrix): Matrix => {\n  const kernel = gpu\n    .createKernel(function (a) {\n      if (a[this.thread.x][this.thread.y] > 0) {\n        return 1;\n      }\n      return 0;\n    })\n    .setOutput([m.rows, m.cols]);\n  return new Matrix(m.rows, m.cols, kernel(m.data));\n};\n\nexport const softplusActivation = (m: Matrix): Matrix => {\n  const kernel = gpu\n    .createKernel(function (a) {\n      return Math.log(1 + Math.exp(a[this.thread.x][this.thread.y]));\n    })\n    .setOutput([m.rows, m.cols]);\n  return new Matrix(m.rows, m.cols, kernel(m.data));\n};\n\nexport const softplusDerivative = (m: Matrix): Matrix => {\n  const kernel = gpu\n    .createKernel(function (a) {\n      return 1 / (1 + Math.exp(-a[this.thread.x][this.thread.y]));\n    })\n    .setOutput([m.rows, m.cols]);\n  return new Matrix(m.rows, m.cols, kernel(m.data));\n};\n","import { Dimension, Layers } from \"./types\";\nimport { cols, Matrix, elementWiseSubtract } from \"./math/matrix\";\nimport * as fs from \"fs\";\nimport { Dataset } from \"./dataset/Dataset\";\n\nclass Network {\n  private dimensions: Dimension = null;\n  private size: number = 0;\n  private layers: Layers[] = [];\n\n  constructor(dimensions: Dimension) {\n    this.dimensions = dimensions;\n  }\n\n  addLayer(layer: Layers) {\n    this.size++;\n    this.layers.push(layer);\n  }\n\n  getLayers(): Layers[] {\n    return this.layers;\n  }\n\n  forward(input: Matrix): Matrix {\n    let output = input;\n\n    this.layers.forEach((layer: Layers) => {\n      output = layer.forward(output);\n    });\n\n    return output;\n  }\n\n  backward(X: Matrix, Y: Matrix, predictions: Matrix, regularization: number) {\n    const m = cols(X);\n\n    let delta = elementWiseSubtract(predictions, Y);\n\n    this.layers.reverse().forEach((layer) => {\n      delta = layer.getBackPropagation().propagate(X, m, regularization, delta);\n    });\n  }\n\n  loss(output: Matrix, predictions: Matrix) {\n    return this.layers[this.layers.length - 1].loss(output, predictions);\n  }\n\n  save(path: string): Promise<string> {\n    const resultJSON = {\n      dimensions: this.dimensions,\n      layers: [],\n    };\n\n    this.layers.forEach((layer: Layers) => {\n      resultJSON.layers.push({\n        type: layer.getType(),\n        dimensions: [\n          layer.getOutputHeight(),\n          layer.getOutputWidth(),\n          layer.getOutputDepth(),\n        ],\n        weights: {\n          W: layer.W.data,\n          b: layer.b.data,\n        },\n      });\n    });\n\n    const result = JSON.stringify(resultJSON);\n\n    return new Promise((resolve, reject) => {\n      fs.writeFile(path, result, (err) => {\n        if (err) {\n          console.error(err);\n          reject();\n        }\n        resolve(result);\n      });\n    });\n  }\n}\n\nexport { Network };\nexport default Network;\n","import {\n  SoftmaxLayer,\n  LogisticLayer,\n  TanhLayer,\n  ReluLayer,\n  SoftplusLayer,\n  AbstractLayer,\n} from \"./layer\";\n\nexport type Dimension = [number] | [number, number, number];\n\nexport enum LayerType {\n  logistic = \"logistic\",\n  softmax = \"softmax\",\n  tanh = \"tanh\",\n  relu = \"relu\",\n  softplus = \"softplus\",\n}\n\nexport type Layers =\n  | LogisticLayer\n  | SoftmaxLayer\n  | TanhLayer\n  | ReluLayer\n  | SoftplusLayer\n  | AbstractLayer;\nexport type Layers1D = LogisticLayer | SoftmaxLayer | TanhLayer;\nexport type Layers3D = null;\n","module.exports = require(\"csvtojson\");","module.exports = require(\"fs\");","module.exports = require(\"gpu.js\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(\"./src/typescript/main.tsx\");\n",""],"names":["Network","AbstractBuilder","dimension","dimensions","network","type","callback","layer","lastLayer","firstLayerTransition","transition","configure","addLayer","fs","LogisticLayer","ReluLayer","SoftmaxLayer","SoftplusLayer","TanhLayer","Builder1D","setWidth","jsonPath","Promise","resolve","reject","readFile","err","data","json","JSON","parse","toString","builder","forEach","layerData","layerClass","createLayer","setSize","getNetwork","getLayers","i","W","b","Matrix","Dataset","exampleSize","numberOfExamples","arr","example","dataIndex","Number","index","csvtojson","DatasetBuilder","csvPath","noheader","output","fromFile","then","length","dataset","elementWiseAdd","multiply","AbstractLayer","A","Z","gW","gb","backPropagation","input","replicate","cols","activation","value","width","height","depth","previousLayer","fillRandom","setZeros","Backpropagation1Dto1D","AbstractLayer1D","resize","is1D","getSize","is3D","getOutputWidth","getOutputHeight","getOutputDepth","setHeight","AbstractBackPropagation","elementWiseMultiply","elementWiseMultiplyNumber","elementWiseDivideNumber","regularization","sigma","previousActivations","delta","transpose","conjugate","rowwiseSum","derivative","logisticActivation","logisticDerivative","logisticLoss","LayerType","m","logistic","predictions","reluActivation","reluDerivative","relu","softmaxActivation","softmaxLoss","Error","softmax","softplusActivation","softplusDerivative","softplus","tanhActivation","tanhDerivative","tanh","matrixMultiply","sum","matrixSum","matrixFillRandom","matrixElementWiseMultiply","elementWiseDivide","matrixElementWiseDivide","matrixElementWiseAdd","elementWiseSubtract","matrixElementWiseSubtract","GPU","gpu","mode","rows","generateData","row","Array","map","col","Float32Array","result","ArrayBuffer","view","DataView","num","setFloat64","oldData","newData","kernel","createKernel","a","thread","y","x","setOutput","m1","m2","constants","setConstants","parameter","Math","random","sqrt","number","exp","divider","colwiseSum","log","kernel2","kernel3","pow","max","size","layers","push","forward","X","Y","reverse","getBackPropagation","propagate","loss","path","resultJSON","getType","weights","stringify","writeFile","console","error"],"sourceRoot":""}