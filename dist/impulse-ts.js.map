{"version":3,"file":"impulse-ts.js","mappings":"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","sources":["webpack://impulse-ts/./node_modules/impulse-math-ts/dist/impulse-math-ts.js","webpack://impulse-ts/webpack/bootstrap","webpack://impulse-ts/webpack/runtime/define property getters","webpack://impulse-ts/webpack/runtime/hasOwnProperty shorthand","webpack://impulse-ts/webpack/runtime/make namespace object","webpack://impulse-ts/external node-commonjs \"fs\"","webpack://impulse-ts/./src/typescript/Network/Network.ts","webpack://impulse-ts/./src/typescript/Network/NetworkRNN.ts","webpack://impulse-ts/./src/typescript/types.ts","webpack://impulse-ts/./src/typescript/Layer/Backpropagation/AbstractBackpropagation.ts","webpack://impulse-ts/./src/typescript/Layer/Backpropagation/Backpropagation1Dto1D.ts","webpack://impulse-ts/./src/typescript/Layer/Backpropagation/Backpropagation3Dto1D.ts","webpack://impulse-ts/./src/typescript/Layer/Backpropagation/BackpropagationToMaxPool.ts","webpack://impulse-ts/./src/typescript/Layer/Backpropagation/BackpropagationToConv.ts","webpack://impulse-ts/./src/typescript/Layer/Backpropagation/BackpropagationFactory.ts","webpack://impulse-ts/./src/typescript/Network/NetworkLSTM.ts","webpack://impulse-ts/./src/typescript/NetworkBuilder/AbstractNetworkBuilder.ts","webpack://impulse-ts/./src/typescript/Layer/AbstractLayer.ts","webpack://impulse-ts/./src/typescript/Layer/AbstractLayer1D.ts","webpack://impulse-ts/./src/typescript/Layer/Softmax.ts","webpack://impulse-ts/./src/typescript/Layer/Logistic.ts","webpack://impulse-ts/./src/typescript/Layer/Tanh.ts","webpack://impulse-ts/./src/typescript/Layer/Relu.ts","webpack://impulse-ts/./src/typescript/Layer/Softplus.ts","webpack://impulse-ts/./src/typescript/Layer/AbstractLayer3D.ts","webpack://impulse-ts/./src/typescript/Layer/Conv.ts","webpack://impulse-ts/./src/typescript/Layer/FullyConnected.ts","webpack://impulse-ts/./src/typescript/Layer/MaxPool.ts","webpack://impulse-ts/./src/typescript/Layer/Recurrent.ts","webpack://impulse-ts/./src/typescript/Layer/LSTM.ts","webpack://impulse-ts/./src/typescript/NetworkBuilder/NetworkBuilder1D.ts","webpack://impulse-ts/./src/typescript/NetworkBuilder/NetworkBuilder3D.ts","webpack://impulse-ts/./src/typescript/Trainer/Optimizer/AbstractOptimizer.ts","webpack://impulse-ts/./src/typescript/Trainer/Optimizer/OptimizerAdam.ts","webpack://impulse-ts/./src/typescript/Trainer/Optimizer/OptimizerGradientDescent.ts","webpack://impulse-ts/./src/typescript/Trainer/Optimizer/OptimizerAdagrad.ts","webpack://impulse-ts/./src/typescript/Trainer/Optimizer/OptimizerMomentum.ts","webpack://impulse-ts/./src/typescript/Trainer/Optimizer/OptimizerRMSProp.ts","webpack://impulse-ts/./src/typescript/Trainer/AbstractTrainer.ts","webpack://impulse-ts/./src/typescript/Trainer/MiniBatchTrainer.ts","webpack://impulse-ts/./src/typescript/Trainer/Trainer.ts","webpack://impulse-ts/./src/typescript/Trainer/RNNTrainer.ts","webpack://impulse-ts/./src/typescript/main.ts"],"sourcesContent":["(()=>{\"use strict\";var r={d:(t,o)=>{for(var e in o)r.o(o,e)&&!r.o(t,e)&&Object.defineProperty(t,e,{enumerable:!0,get:o[e]})},o:(r,t)=>Object.prototype.hasOwnProperty.call(r,t),r:r=>{\"undefined\"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(r,Symbol.toStringTag,{value:\"Module\"}),Object.defineProperty(r,\"__esModule\",{value:!0})}},t={};function o(r){return o=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(r){return typeof r}:function(r){return r&&\"function\"==typeof Symbol&&r.constructor===Symbol&&r!==Symbol.prototype?\"symbol\":typeof r},o(r)}function e(r,t){for(var o=0;o<t.length;o++){var e=t[o];e.enumerable=e.enumerable||!1,e.configurable=!0,\"value\"in e&&(e.writable=!0),Object.defineProperty(r,n(e.key),e)}}function n(r){var t=function(r,t){if(\"object\"!==o(r)||null===r)return r;var e=r[Symbol.toPrimitive];if(void 0!==e){var n=e.call(r,\"string\");if(\"object\"!==o(n))return n;throw new TypeError(\"@@toPrimitive must return a primitive value.\")}return String(r)}(r);return\"symbol\"===o(t)?t:String(t)}r.r(t),r.d(t,{ComputationCPU:()=>W,ComputationGPU:()=>f,Matrix:()=>H,getComputation:()=>Z,im2col:()=>J,maxpool:()=>Q,round:()=>V,setComputation:()=>I});var a=function(){function r(){var t,o,e;!function(r,t){if(!(r instanceof t))throw new TypeError(\"Cannot call a class as a function\")}(this,r),t=this,e={},(o=n(o=\"kernels\"))in t?Object.defineProperty(t,o,{value:e,enumerable:!0,configurable:!0,writable:!0}):t[o]=e}var t,o;return t=r,o=[{key:\"addKernel\",value:function(r,t){return this.kernels[r]=t,this}},{key:\"execute\",value:function(r){if(!this.kernels[r])throw new Error(\"Kernel '\".concat(r,\"' not exists.\"));for(var t=arguments.length,o=new Array(t>1?t-1:0),e=1;e<t;e++)o[e-1]=arguments[e];return this.kernels[r].apply(null,o)}}],o&&e(t.prototype,o),Object.defineProperty(t,\"prototype\",{writable:!1}),r}();function s(r){return s=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(r){return typeof r}:function(r){return r&&\"function\"==typeof Symbol&&r.constructor===Symbol&&r!==Symbol.prototype?\"symbol\":typeof r},s(r)}function i(r,t){return i=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(r,t){return r.__proto__=t,r},i(r,t)}function c(r,t){if(t&&(\"object\"===s(t)||\"function\"==typeof t))return t;if(void 0!==t)throw new TypeError(\"Derived constructors may only return object or undefined\");return function(r){if(void 0===r)throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");return r}(r)}function u(r){return u=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(r){return r.__proto__||Object.getPrototypeOf(r)},u(r)}var f=function(r){!function(r,t){if(\"function\"!=typeof t&&null!==t)throw new TypeError(\"Super expression must either be null or a function\");r.prototype=Object.create(t&&t.prototype,{constructor:{value:r,writable:!0,configurable:!0}}),Object.defineProperty(r,\"prototype\",{writable:!1}),t&&i(r,t)}(a,r);var t,o,e,n=(o=a,e=function(){if(\"undefined\"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if(\"function\"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(r){return!1}}(),function(){var r,t=u(o);if(e){var n=u(this).constructor;r=Reflect.construct(t,arguments,n)}else r=t.apply(this,arguments);return c(this,r)});function a(){return function(r,t){if(!(r instanceof t))throw new TypeError(\"Cannot call a class as a function\")}(this,a),n.call(this)}return t=a,Object.defineProperty(t,\"prototype\",{writable:!1}),t}(a);function l(r){return l=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(r){return typeof r}:function(r){return r&&\"function\"==typeof Symbol&&r.constructor===Symbol&&r!==Symbol.prototype?\"symbol\":typeof r},l(r)}function h(r,t){return h=Object.setPrototypeOf?Object.setPrototypeOf.bind():function(r,t){return r.__proto__=t,r},h(r,t)}function v(r,t){if(t&&(\"object\"===l(t)||\"function\"==typeof t))return t;if(void 0!==t)throw new TypeError(\"Derived constructors may only return object or undefined\");return function(r){if(void 0===r)throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");return r}(r)}function w(r){return w=Object.setPrototypeOf?Object.getPrototypeOf.bind():function(r){return r.__proto__||Object.getPrototypeOf(r)},w(r)}var d=function(r,t){if(r.rows!==t.rows)throw new Error(\"ROWS number not equal.\");if(r.cols!==t.cols)throw new Error(\"COLS number not equal.\");for(var o=[],e=0;e<r.rows;e+=1){o[e]=[];for(var n=0;n<r.cols;n+=1)o[e][n]=r.data[e][n]/t.data[e][n]}return new H(r.rows,t.cols,o)},y=function(r,t){for(var o=[],e=0;e<r.rows;e+=1){o[e]=[];for(var n=0;n<r.cols;n+=1)o[e][n]=r.data[e][n]/t}return new H(r.rows,r.cols,o)},p=function(r){for(var t=[],o=0;o<r.rows;o+=1){t[o]=[];for(var e=0;e<r.cols;e+=1)t[o][e]=1/(1+Math.exp(-r.data[o][e]))}return H.from(t)},m=function(r,t){for(var o=[],e=0;e<t.rows;e+=1){o[e]=[];for(var n=0;n<t.cols;n+=1)t.data&&(o[e][n]=Math.log(t.data[e][n]+1e-8))}for(var a=_(new H(t.rows,t.cols,o),r),s=[],i=0;i<r.rows;i+=1){s[i]=[];for(var c=0;c<r.cols;c+=1)r.data&&(s[i][c]=1-r.data[i][c])}for(var u=new H(r.rows,r.cols,s),f=[],l=0;l<t.rows;l+=1){f[l]=[];for(var h=0;h<t.cols;h+=1)t.data&&(f[l][h]=Math.log(1-t.data[l][h]+1e-8))}var v=new H(t.rows,t.cols,f);return P(_(C(a,-1),r),_(C(v,-1),q(u,1))).sum()},b=function(r,t){return p(t).multiply(p(t).minusOne())},k=function(r){for(var t=[],o=0;o<r.rows;o+=1){t[o]=[];for(var e=0;e<r.cols;e+=1)t[o][e]=(1-Math.exp(-2*r.data[o][e]))/(1+Math.exp(-2*r.data[o][e]))}return H.from(t)},g=function(r){for(var t=[],o=0;o<r.rows;o+=1){t[o]=[];for(var e=0;e<r.cols;e+=1)r.data&&(t[o][e]=Math.max(0,r.data[o][e]))}return new H(r.rows,r.cols,t)},O=function(r,t){for(var o=[],e=0;e<r.rows;e+=1){o[e]=[];for(var n=0;n<r.cols;n+=1)r.data&&(o[e][n]=t.data[e][n]>0?1:0)}return _(new H(r.rows,r.cols,o),r)},S=function(r){for(var t=[],o=0;o<r.rows;o+=1){t[o]=[];for(var e=0;e<r.cols;e+=1)r.data&&(t[o][e]=Math.log(1+Math.exp(r.data[o][e])))}return new H(r.rows,r.cols,t)},M=function(r){for(var t=[],o=0;o<r.rows;o+=1){t[o]=[];for(var e=0;e<r.cols;e+=1)r.data&&(t[o][e]=Math.pow(r.data[o][e],2))}return new H(r.rows,r.cols,t).sum()},x=function(r){for(var t=[],o=0;o<r.rows;o+=1){t[o]=[];for(var e=0;e<r.cols;e+=1)r.data&&(t[o][e]=Math.sqrt(r.data[o][e]+1e-8))}return new H(r.rows,r.cols,t)},j=function(r,t){if(r.cols!==t.rows)throw new Error(\"DIMENSIONS error. m1.cols \".concat(r.rows,\" \").concat(r.cols,\" !== m2.rows \").concat(t.rows,\" \").concat(t.cols,\".\"));for(var o=[],e=0;e<r.rows;++e){o[e]=new Array(t.cols);for(var n=0;n<t.cols;++n){o[e][n]=0;for(var a=0;a<r.cols;++a)r.data&&t.data&&(o[e][n]+=r.data[e][a]*t.data[a][n])}}return new H(r.rows,t.cols,o)},P=function(r,t){if(r.rows!==t.rows)throw new Error(\"ROWS number not equal.\");if(r.cols!==t.cols)throw new Error(\"COLS number not equal. m1.cols \".concat(r.cols,\" !== m2.cols \").concat(t.cols));for(var o=[],e=0;e<r.rows;e+=1){o[e]=[];for(var n=0;n<r.cols;n+=1)r.data&&t.data&&(o[e][n]=r.data[e][n]+t.data[e][n])}return new H(r.rows,r.cols,o)},E=function(r,t){if(r.rows!==t.rows)throw new Error(\"ROWS number not equal: m1.rows \".concat(r.rows,\" !== m2.rows \").concat(t.rows));if(r.cols!==t.cols)throw new Error(\"COLS number not equal: m1.cols \".concat(r.cols,\" !== m2.cols \").concat(t.cols));for(var o=[],e=0;e<r.rows;e+=1){o[e]=[];for(var n=0;n<r.cols;n+=1)r.data&&t.data&&(o[e][n]=r.data[e][n]-t.data[e][n])}return new H(r.rows,r.cols,o)},K=function(r,t){for(var o=[],e=0;e<r.rows;e+=1){o[e]=[];for(var n=0;n<r.cols;n+=1)o[e][n]=(4*Math.random()-2)*Math.sqrt(2/t)}return new H(r.rows,r.cols,o)},R=function(r){for(var t=[],o=0;o<r.rows;o+=1){t[o]=[];for(var e=0;e<r.cols;e+=1)t[o][e]=0}return new H(r.rows,r.cols,t)},_=function(r,t){if(r.rows!==t.rows)throw new Error(\"ROWS number not equal: m1.rows \".concat(r.rows,\" !== m2.rows \").concat(t.rows));if(r.cols!==t.cols)throw new Error(\"COLS number not equal: m1.cols \".concat(r.cols,\" !== m2.cols \").concat(t.cols));for(var o=[],e=0;e<r.rows;e+=1){o[e]=[];for(var n=0;n<r.cols;n+=1)r.data&&t.data&&(o[e][n]=r.data[e][n]*t.data[e][n])}return new H(r.rows,r.cols,o)},C=function(r,t){for(var o=[],e=0;e<r.rows;e+=1){o[e]=[];for(var n=0;n<r.cols;n+=1)r.data&&(o[e][n]=r.data[e][n]*t)}return new H(r.rows,r.cols,o)},q=function(r,t){for(var o=[],e=0;e<r.rows;e+=1){o[e]=[];for(var n=0;n<r.cols;n+=1)r.data&&(o[e][n]=t-r.data[e][n])}return new H(r.rows,r.cols,o)},T=function(r,t){for(var o=[],e=0;e<r.rows;e+=1){o[e]=[];for(var n=0;n<r.cols;n+=1)r.data&&(o[e][n]=Math.pow(r.data[e][n],t))}return new H(r.rows,r.cols,o)},A=function(r,t){for(var o=[],e=0;e<r.rows;e+=1){o[e]=[];for(var n=0;n<r.cols;n+=1)r.data&&(o[e][n]=Math.log(r.data[e][n]+1e-8))}return new H(r.rows,r.cols,o)},D=function(r,t){for(var o=[],e=0;e<r.rows;e+=1){o[e]=[];for(var n=0;n<r.cols;n+=1)r.data&&(o[e][n]=Math.log(1-r.data[e][n]))}return new H(r.rows,r.cols,o)},N=function(r,t){for(var o=[],e=0;e<r.rows;e+=1){o[e]=[];for(var n=0;n<r.cols;n+=1)o[e][n]=r.data[e][n]+t}return new H(r.rows,r.cols,o)},B=function(r){for(var t=[],o=0;o<r.cols;o+=1){t[o]=[];for(var e=0;e<r.rows;e+=1)r.data&&(t[o][e]=r.data[e][o])}return new H(r.cols,r.rows,t)},W=function(r){!function(r,t){if(\"function\"!=typeof t&&null!==t)throw new TypeError(\"Super expression must either be null or a function\");r.prototype=Object.create(t&&t.prototype,{constructor:{value:r,writable:!0,configurable:!0}}),Object.defineProperty(r,\"prototype\",{writable:!1}),t&&h(r,t)}(a,r);var t,o,e,n=(o=a,e=function(){if(\"undefined\"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if(\"function\"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(r){return!1}}(),function(){var r,t=w(o);if(e){var n=w(this).constructor;r=Reflect.construct(t,arguments,n)}else r=t.apply(this,arguments);return v(this,r)});function a(){var r;return function(r,t){if(!(r instanceof t))throw new TypeError(\"Cannot call a class as a function\")}(this,a),(r=n.call(this)).addKernel(\"multiply\",j),r.addKernel(\"add\",P),r.addKernel(\"subtract\",E),r.addKernel(\"subtractFromNumber\",q),r.addKernel(\"fillRandom\",K),r.addKernel(\"fillZeros\",R),r.addKernel(\"elementWiseMultiply\",_),r.addKernel(\"multiplyNumber\",C),r.addKernel(\"elementWiseDivide\",d),r.addKernel(\"divideNumber\",y),r.addKernel(\"logisticActivation\",p),r.addKernel(\"logisticLoss\",m),r.addKernel(\"logisticBackpropagation\",b),r.addKernel(\"tanhActivation\",k),r.addKernel(\"reluActivation\",g),r.addKernel(\"reluBackpropagation\",O),r.addKernel(\"softplusActivation\",S),r.addKernel(\"penalty\",M),r.addKernel(\"sqrt\",x),r.addKernel(\"transpose\",B),r.addKernel(\"pow\",T),r.addKernel(\"log\",A),r.addKernel(\"logMinusOne\",D),r.addKernel(\"addNumber\",N),r}return t=a,Object.defineProperty(t,\"prototype\",{writable:!1}),t}(a),L=new W,I=function(r){L=r},Z=function(){return L};function z(r){return z=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(r){return typeof r}:function(r){return r&&\"function\"==typeof Symbol&&r.constructor===Symbol&&r!==Symbol.prototype?\"symbol\":typeof r},z(r)}function F(r,t){if(!(r instanceof t))throw new TypeError(\"Cannot call a class as a function\")}function U(r,t){for(var o=0;o<t.length;o++){var e=t[o];e.enumerable=e.enumerable||!1,e.configurable=!0,\"value\"in e&&(e.writable=!0),Object.defineProperty(r,$(e.key),e)}}function G(r,t,o){return(t=$(t))in r?Object.defineProperty(r,t,{value:o,enumerable:!0,configurable:!0,writable:!0}):r[t]=o,r}function $(r){var t=function(r,t){if(\"object\"!==z(r)||null===r)return r;var o=r[Symbol.toPrimitive];if(void 0!==o){var e=o.call(r,\"string\");if(\"object\"!==z(e))return e;throw new TypeError(\"@@toPrimitive must return a primitive value.\")}return String(r)}(r);return\"symbol\"===z(t)?t:String(t)}var H=function(){function r(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0,o=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,e=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null;F(this,r),G(this,\"rows\",0),G(this,\"cols\",0),G(this,\"data\",null),this.resize(t,o),e&&this.generateData(e)}var t,o,e;return t=r,o=[{key:\"resize\",value:function(r,t){this.rows=r,this.cols=t,this.data=new Array(this.rows);for(var o=0;o<this.rows;o+=1)this.data[o]=new Array(this.cols);return this}},{key:\"generateData\",value:function(r){for(var t=[],o=0;o<this.rows;o+=1)t[o]=new Array(this.cols);for(var e=0;e<this.cols;e+=1)for(var n=0;n<this.rows;n+=1)\"number\"==typeof r[n]?t[n][e]=r[n]:\"string\"==typeof r[n][e]&&/^[0-9.]+$/.test(String(r[n][e]))?t[n][e]=Number(r[n][e]):t[n][e]=r[n][e];return this.data=t,this}},{key:\"sum\",value:function(){for(var r=0,t=0;t<this.rows;t+=1)for(var o=0;o<this.cols;o+=1)r+=this.data[t][o];return r}},{key:\"colwiseSum\",value:function(){for(var t=[],o=this.transpose(),e=0;e<o.rows;e+=1){t[e]=[0];for(var n=0;n<o.cols;n+=1)t[e][0]+=o.data[e][n]}return new r(this.cols,1,t)}},{key:\"rowwiseSum\",value:function(){for(var t=[[]],o=0;o<this.rows;o+=1){for(var e=0,n=0;n<this.cols;n+=1)e+=this.data[o][n];t[0].push(e)}return new r(1,this.rows,t)}},{key:\"flatten\",value:function(){for(var r=[],t=0;t<this.rows;t+=1)for(var o=0;o<this.cols;o+=1)r.push(this.data[t][o]);return r}},{key:\"replicate\",value:function(t,o){if(1===t&&1===this.cols&&o>1){for(var e=[],n=0;n<this.rows;n+=1){e[n]=[];for(var a=0;a<o;a+=1)e[n][a]=this.data[n][0]}return r.from(e)}if(1===o&&1===this.rows&&t>1){for(var s=[],i=0;i<t;i+=1){s[i]=[];for(var c=0;c<this.cols;c+=1)s[i][c]=this.data[0][c]}return r.from(s)}return this}},{key:\"transpose\",value:function(){return Z().execute(\"transpose\",this)}},{key:\"colMaxCoeffIndex\",value:function(r){for(var t=-1,o=-1/0,e=0;e<this.rows;e+=1)this.data&&this.data[e][r]>o&&(o=this.data[e][r],t=e);return t}},{key:\"rowMaxCoeffIndex\",value:function(r){for(var t=-1,o=-1/0,e=0;e<this.cols;e+=1)this.data[r][e]>o&&(o=this.data[r][e],t=e);return t}},{key:\"block\",value:function(t,o,e,n){for(var a=[],s=t,i=0;s<this.rows&&s<t+e;s+=1,i+=1){a[i]=new Array(n);for(var c=o,u=0;c<this.cols&&c<o+n;c+=1,u+=1)a[i][u]=this.data[s][c]}return new r(e,n,a)}},{key:\"col\",value:function(t){for(var o=[],e=0;e<this.rows;e+=1)o[e]=[this.data[e][t]];return new r(this.rows,1,o)}},{key:\"row\",value:function(t){for(var o=[],e=0;e<this.cols;e+=1)o[e]=[this.data[t][e]];return new r(this.cols,1,o)}},{key:\"setCol\",value:function(r,t){for(var o=0;o<this.rows;o+=1)this.data&&t.data&&(this.data[o][r]=t.data[o][0]);return this}},{key:\"sigmoid\",value:function(){return this.multiply(-1).exp().add(1).fraction(1)}},{key:\"rollToColMatrix\",value:function(){for(var t=[],o=0,e=0;e<this.rows;e+=1)for(var n=0;n<this.cols;n+=1)t[o]=[],t[o++][0]=this.data[e][n];return r.from(t)}},{key:\"abs\",value:function(){for(var t=[],o=0;o<this.rows;o+=1){t[o]=[];for(var e=0;e<this.cols;e+=1)t[o][e]=Math.abs(this.data[o][e])}return r.from(t)}},{key:\"mean\",value:function(){for(var r=0,t=this.rows*this.cols,o=0;o<this.rows;o+=1)for(var e=0;e<this.cols;e+=1)r+=this.data[o][e];return r/t}},{key:\"max\",value:function(){for(var r=-1/0,t=0;t<this.rows;t+=1)for(var o=0;o<this.cols;o+=1)r=Math.max(this.data[t][o],r);return r}},{key:\"setMax\",value:function(t){for(var o=[],e=0;e<this.rows;e+=1){o[e]=[];for(var n=0;n<this.cols;n+=1)o[e][n]=Math.min(this.data[e][n],t)}return r.from(o)}},{key:\"setMin\",value:function(t){for(var o=[],e=0;e<this.rows;e+=1){o[e]=[];for(var n=0;n<this.cols;n+=1)o[e][n]=Math.max(this.data[e][n],t)}return r.from(o)}},{key:\"setZeros\",value:function(){for(var t=[],o=0;o<this.rows;o+=1){t[o]=[];for(var e=0;e<this.cols;e+=1)t[o][e]=0}return r.from(t)}},{key:\"setOnes\",value:function(){for(var t=[],o=0;o<this.rows;o+=1){t[o]=[];for(var e=0;e<this.cols;e+=1)t[o][e]=1}return r.from(t)}},{key:\"setRandom\",value:function(){for(var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:1,o=[],e=0;e<this.rows;e+=1){o[e]=[];for(var n=0;n<this.cols;n+=1)o[e][n]=(4*Math.random()-2)*Math.sqrt(2/t)}return r.from(o)}},{key:\"fraction\",value:function(){for(var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:1,o=[],e=0;e<this.rows;e+=1){o[e]=[];for(var n=0;n<this.cols;n+=1)o[e][n]=t/this.data[e][n]}return r.from(o)}},{key:\"sqrt\",value:function(){for(var t=[],o=0;o<this.rows;o+=1){t[o]=[];for(var e=0;e<this.cols;e+=1)t[o][e]=Math.sqrt(this.data[o][e]+1e-8)}return r.from(t)}},{key:\"dot\",value:function(r){return Z().execute(\"multiply\",this,r)}},{key:\"multiply\",value:function(t){if(\"number\"==typeof t){for(var o=[],e=0;e<this.rows;e+=1){o[e]=[];for(var n=0;n<this.cols;n+=1)o[e][n]=this.data[e][n]*t}return r.from(o)}if(t.rows!==this.rows||this.cols!==t.cols)throw new Error(\"Dimension error: \".concat(this.shape(),\" !== \").concat(t.shape()));for(var a=[],s=0;s<this.rows;s+=1){a[s]=[];for(var i=0;i<this.cols;i+=1)a[s][i]=this.data[s][i]*t.data[s][i]}return r.from(a)}},{key:\"subtract\",value:function(t){if(\"number\"==typeof t){for(var o=[],e=0;e<this.rows;e+=1){o[e]=[];for(var n=0;n<this.cols;n+=1)o[e][n]=this.data[e][n]-t}return r.from(o)}if(this.rows!==t.rows||this.cols!==t.cols)throw new Error(\"Dimensions error: \".concat(this.rows,\", \").concat(this.cols,\" !== \").concat(t.rows,\", \").concat(t.cols));for(var a=[],s=0;s<this.rows;s+=1){a[s]=[];for(var i=0;i<this.cols;i+=1)a[s][i]=this.data[s][i]-t.data[s][i]}return r.from(a)}},{key:\"forEach\",value:function(t){for(var o=[],e=0;e<this.rows;e+=1){o[e]=[];for(var n=0;n<this.cols;n+=1)o[e][n]=t(this.data[e][n])}return r.from(o)}},{key:\"shape\",value:function(){return[this.rows,this.cols]}},{key:\"divide\",value:function(t){if(\"number\"==typeof t){for(var o=[],e=0;e<this.rows;e+=1){o[e]=[];for(var n=0;n<this.cols;n+=1)o[e][n]=this.data[e][n]/t}return r.from(o)}if(t.rows!==this.rows||t.cols!==this.cols)throw new Error(\"Dimensions error (\".concat(this.rows,\", \").concat(this.cols,\") !== (\").concat(t.rows,\", \").concat(t.cols,\")\"));for(var a=[],s=0;s<this.rows;s+=1){a[s]=[];for(var i=0;i<this.cols;i+=1)a[s][i]=this.data[s][i]/t.data[s][i]}return r.from(a)}},{key:\"minusOne\",value:function(){for(var t=[],o=0;o<this.rows;o+=1){t[o]=[];for(var e=0;e<this.cols;e+=1)t[o][e]=1-this.data[o][e]}return r.from(t)}},{key:\"subtractFromNumber\",value:function(t){for(var o=[],e=0;e<this.rows;e+=1){o[e]=[];for(var n=0;n<this.cols;n+=1)o[e][n]=t-this.data[e][n]}return r.from(o)}},{key:\"add\",value:function(t){if(\"number\"==typeof t){for(var o=[],e=0;e<this.rows;e+=1){o[e]=[];for(var n=0;n<this.cols;n+=1)o[e][n]=this.data[e][n]+t}return r.from(o)}if(t instanceof r){if(t.rows!==this.rows||t.cols!==this.cols)throw new Error(\"Dimention error: rows (x: \".concat(this.rows,\", y: \").concat(this.cols,\") !== (x: \").concat(t.rows,\", y: \").concat(t.cols,\")\"));for(var a=[],s=0;s<this.rows;s+=1){a[s]=[];for(var i=0;i<this.cols;i+=1)a[s][i]=this.data[s][i]+t.data[s][i]}return r.from(a)}return this}},{key:\"log\",value:function(){for(var t=[],o=0;o<this.rows;o+=1){t[o]=[];for(var e=0;e<this.cols;e+=1)t[o][e]=Math.log(this.data[o][e]+1e-8)}return r.from(t)}},{key:\"tanh\",value:function(){return this.exp().subtract(this.multiply(-1).exp()).divide(this.exp().add(this.multiply(-1).exp()))}},{key:\"softmax\",value:function(){var r=this.max()-1e-8;return this.subtract(r).exp().divide(this.rowwiseSum().replicate(this.cols,1).transpose())}},{key:\"exp\",value:function(){for(var t=[],o=0;o<this.rows;o+=1){t[o]=[];for(var e=0;e<this.cols;e+=1)t[o][e]=Math.exp(this.data[o][e]+1e-8)}return r.from(t)}},{key:\"pow\",value:function(t){for(var o=[],e=0;e<this.rows;e+=1){o[e]=[];for(var n=0;n<this.cols;n+=1)o[e][n]=Math.pow(this.data[e][n],t)}return r.from(o)}},{key:\"value\",value:function(r,t){var o=arguments.length>2&&void 0!==arguments[2]?arguments[2]:void 0;return void 0===o?this.data[r][t]:(this.data[r][t]=o,this)}},{key:\"copy\",value:function(){return r.from(this.data)}}],e=[{key:\"from\",value:function(t){var o;return new r(t.length,(null===(o=t[0])||void 0===o?void 0:o.length)||0,t)}}],o&&U(t.prototype,o),e&&U(t,e),Object.defineProperty(t,\"prototype\",{writable:!1}),r}(),J=function(r,t,o,e,n,a,s,i,c,u){for(var f=0,l=new H(((e-a+2*i)/u+1)*((o-n+2*s)/c+1),a*n*t).setZeros(),h=-s;h+n<=o+s;h+=c)for(var v=-i;v+a<=e+i;v+=u){for(var w=0,d=0;d<t;d++)for(var y=o*e*d,p=0;p<n;p++)for(var m=0;m<a;m++)h+p>=0&&v+m>=0&&v+m<e&&h+p<o&&(l.data[f][w]=r.data[(p+h)*e+v+m+y][0]),w++;f++}return l},Q=function(r,t,o,e,n,a,s,i){for(var c=(e-a)/i+1,u=(o-n)/s+1,f=0,l=new H(c*u*t,1).setZeros(),h=0;h+n<=o;h+=s)for(var v=0;v+a<=e;v+=i){for(var w=0;w<t;w++){for(var d=-1/0,y=o*e*w,p=c*u*w,m=0;m<n;m++)for(var b=0;b<a;b++)d=Math.max(d,r.data[y+(m+h)*e+v+b][0]);l.data[p+f][0]=d}f++}return l},V=function(r,t){return Math.round((r+223e-18)*Math.pow(10,t))/Math.pow(10,t)};module.exports=t})();\n//# sourceMappingURL=impulse-math-ts.js.map","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"fs\");","import { Dimension, Layers } from \"../types\";\nimport { Matrix } from \"impulse-math-ts\";\nimport * as fs from \"fs\";\n\nclass Network {\n  private readonly dimensions: Dimension | null = null;\n  private size = 0;\n  private layers: Layers[] = [];\n\n  constructor(dimensions: Dimension) {\n    this.dimensions = dimensions;\n  }\n\n  addLayer(layer: Layers): Network {\n    this.size++;\n    this.layers.push(layer);\n\n    return this;\n  }\n\n  getLayers(): Layers[] {\n    return this.layers;\n  }\n\n  forward(input: Matrix): Matrix {\n    let output = input;\n\n    this.layers.forEach((layer: Layers) => {\n      output = layer.forward(output);\n    });\n\n    return output;\n  }\n\n  backward(X: Matrix, Y: Matrix, regularization: number): void {\n    const m = X.cols;\n    const predictions = this.forward(X);\n    //let sigma = Y.divide(predictions).multiply(-1).subtract(Y.minusOne().divide(predictions.minusOne()));\n    let sigma = predictions.subtract(Y);\n\n    for (let layer = this.layers.length - 1; layer >= 0; layer -= 1) {\n      sigma = this.layers[layer]\n        .getBackPropagation()\n        .propagate(X, m, regularization, this.layers[layer], this.layers[layer].derivative(sigma));\n    }\n  }\n\n  save(path: string): Promise<string> {\n    const resultJSON = {\n      dimensions: this.dimensions,\n      layers: [],\n    };\n\n    this.layers.forEach((layer: Layers) => {\n      resultJSON.layers.push({\n        type: layer.getType(),\n        size: layer.getSize(),\n        weights: {\n          W: layer.W.data,\n          b: layer.b.data,\n        },\n      });\n    });\n\n    const result = JSON.stringify(resultJSON);\n\n    return new Promise((resolve, reject) => {\n      fs.writeFile(path, result, (err) => {\n        if (err) {\n          console.error(err);\n          reject();\n        }\n        resolve(result);\n      });\n    });\n  }\n}\n\nexport { Network };\nexport default Network;\n","import { Dimension, LayersRNN } from \"../types\";\nimport { Matrix } from \"impulse-math-ts\";\nimport { DatasetVocabulary } from \"impulse-dataset-ts/src/typescript/Dataset/DatasetVocabulary\";\n\nexport class NetworkRNN {\n  private readonly dimensions: Dimension | null = null;\n  private size = 0;\n  private layers: LayersRNN[] = [];\n\n  constructor(dimensions: Dimension) {\n    this.dimensions = dimensions;\n  }\n\n  addLayer(layer: LayersRNN): NetworkRNN {\n    this.size++;\n    this.layers.push(layer);\n\n    return this;\n  }\n\n  getLayers(): LayersRNN[] {\n    return this.layers;\n  }\n\n  loss(vocabularySize: number, sequenceLength: number): number {\n    return -Math.log(1 / vocabularySize) * sequenceLength;\n  }\n\n  sample(dataset: DatasetVocabulary) {\n    const Waa = this.layers[0].Waa;\n    const Wax = this.layers[0].Wax;\n    const Wya = this.layers[0].Wya;\n    const by = this.layers[0].by;\n    const b = this.layers[0].b;\n    const indices = [];\n    const charIndices = dataset.getCharIndices();\n    const newLineCharacter = charIndices[\"\\n\"];\n    const chars = dataset.getChars();\n\n    let x = new Matrix(this.dimensions[1], 1).setZeros();\n    let aPrev = new Matrix(this.dimensions[0], 1).setRandom(this.dimensions[1]);\n\n    let idx = -1;\n    let counter = 0;\n\n    while (idx != newLineCharacter && counter != 50) {\n      const a = Wax.dot(x).add(Waa.dot(aPrev)).add(b).setMin(1e-3).tanh();\n      const z = Wya.dot(a).add(by);\n      const y = z.softmax();\n\n      idx = charIndices[chars[y.colMaxCoeffIndex(0)]];\n      x = new Matrix(this.dimensions[1], 1).setZeros();\n      let maxIndex = y.colMaxCoeffIndex(0);\n      if (maxIndex === -1) {\n        maxIndex = Math.floor(Math.random() * this.dimensions[1]);\n        idx = charIndices[chars[maxIndex]];\n      }\n      x.data[maxIndex][0] = 1;\n\n      indices.push(idx);\n      aPrev = a;\n\n      counter += 1;\n    }\n\n    if (counter === 50) {\n      indices.push(newLineCharacter);\n    }\n\n    return indices\n      .map((i) => {\n        return chars[i];\n      })\n      .join(\"\");\n  }\n\n  forward(X: Matrix, Y: Matrix, a0: Matrix): [number] {\n    const x = [null];\n    const a = [a0];\n    const yHat = [null];\n    let loss = 0;\n    for (let t = 1; t <= X.rows; t += 1) {\n      x[t] = new Matrix(this.dimensions[1], this.dimensions[0]).setZeros();\n      x[t].data[X.data[t - 1][0]][0] = 1;\n      const [_a, _yHat] = this.layers[0].forward(x[t], a[t - 1]);\n      a[t] = _a;\n      yHat[t] = _yHat; //.setMin(1e-5);\n      loss += 0; // todo\n    }\n    this.layers[0].A = a;\n    this.layers[0].X = x;\n    this.layers[0].Y = yHat;\n    return [loss];\n  }\n\n  backward(X: Matrix): void {\n    const a = this.layers[0].A;\n    const x = this.layers[0].X;\n    const yHat = this.layers[0].Y;\n\n    let _dWax = new Matrix(this.layers[0].Wax.rows, this.layers[0].Wax.cols).setZeros();\n    let _dWaa = new Matrix(this.layers[0].Waa.rows, this.layers[0].Waa.cols).setZeros();\n    let _dWya = new Matrix(this.layers[0].Wya.rows, this.layers[0].Wya.cols).setZeros();\n    let _db = new Matrix(this.layers[0].db.rows, this.layers[0].db.cols).setZeros();\n    let _dby = new Matrix(this.layers[0].dby.rows, this.layers[0].dby.cols).setZeros();\n    let _daNext = new Matrix(this.layers[0].daNext.rows, this.layers[0].daNext.rows).setZeros();\n\n    for (let t = X.rows - 1; t >= 1; t -= 1) {\n      // loop over examples\n      const dy = Matrix.from(a[t].data);\n      dy.data[X.data[t - 1][0]][0] -= 1;\n      const { dWax, dWya, dWaa, db, dby, daNext } = this.layers[0].backward(dy, x[t], a[t], a[t - 1]);\n      _dWax = _dWax.add(dWax.replicate(1, _dWax.cols));\n      _dWaa = _dWaa.add(dWaa.replicate(1, _dWaa.cols));\n      _dWya = _dWya.add(dWya);\n      _db = _db.add(db);\n      _dby = _dby.add(dby);\n      _daNext = _daNext.add(daNext);\n    }\n\n    // gradient clipping\n    this.layers[0].dWax = _dWax.setMin(-5).setMax(5);\n    this.layers[0].dWaa = _dWaa.setMin(-5).setMax(5);\n    this.layers[0].dWya = _dWya.setMin(-5).setMax(5);\n    this.layers[0].db = _dby.setMin(-5).setMax(5);\n    this.layers[0].dby = _dby.setMin(-5).setMax(5);\n    this.layers[0].daNext = _daNext.setMin(-5).setMax(5);\n  }\n\n  optimize(X: Matrix, Y: Matrix, aPrev: Matrix, learningRate: number): [number, Matrix] {\n    const [loss] = this.forward(X, Y, aPrev);\n    this.backward(X);\n\n    this.layers[0].Wax = this.layers[0].Wax.add(\n      this.layers[0].dWax.replicate(1, this.getDimensions()[2]).multiply(-learningRate)\n    );\n    this.layers[0].Waa = this.layers[0].Waa.add(this.layers[0].dWaa.multiply(-learningRate));\n    this.layers[0].Wya = this.layers[0].Wya.add(this.layers[0].dWya.multiply(-learningRate));\n    //this.layers[0].b = this.layers[0].b.add(this.layers[0].db.multiply(-learningRate));\n    //this.layers[0].by = this.layers[0].by.add(\n    //  this.layers[0].dby.multiply(-learningRate).rowwiseSum().divide(this.layers[0].dby.cols).transpose()\n    //);\n\n    return [loss, this.layers[0].A[X.rows - 1]];\n  }\n\n  getDimensions(): Dimension {\n    return this.dimensions;\n  }\n\n  /*save(path: string): Promise<string> {\n    const resultJSON = {\n      dimensions: this.dimensions,\n      layers: [],\n    };\n\n    this.layers.forEach((layer: Layers) => {\n      resultJSON.layers.push({\n        type: layer.getType(),\n        size: layer.getSize(),\n        weights: {\n          W: layer.W.data,\n          b: layer.b.data,\n        },\n      });\n    });\n\n    const result = JSON.stringify(resultJSON);\n\n    return new Promise((resolve, reject) => {\n      fs.writeFile(path, result, (err) => {\n        if (err) {\n          console.error(err);\n          reject();\n        }\n        resolve(result);\n      });\n    });\n  }*/\n}\n","import { SoftmaxLayer, LogisticLayer, TanhLayer, ReluLayer, SoftplusLayer, AbstractLayer } from \"./Layer\";\nimport { ConvLayer } from \"./Layer/\";\nimport { MaxPoolLayer } from \"./Layer/\";\nimport { FullyConnectedLayer } from \"./Layer/\";\nimport { PurelinLayer } from \"./Layer\";\nimport { AbstractLayer3D } from \"./Layer/AbstractLayer3D\";\nimport { AbstractLayer1D } from \"./Layer/AbstractLayer1D\";\nimport { RecurrentLayer } from \"./Layer\";\nimport { LSTMLayer } from \"./Layer\";\n\nexport type Dimension = [number] | [number, number, number];\n\nexport enum LayerType {\n  logistic = \"logistic\",\n  softmax = \"softmax\",\n  tanh = \"tanh\",\n  relu = \"relu\",\n  softplus = \"softplus\",\n  conv = \"conv\",\n  maxpool = \"maxpool\",\n  fullyconnected = \"fullyconnected\",\n  purelin = \"purelin\",\n  rnnlayer = \"rnnlayer\",\n}\n\nexport type Layers =\n  | LogisticLayer\n  | SoftmaxLayer\n  | TanhLayer\n  | ReluLayer\n  | SoftplusLayer\n  | ConvLayer\n  | MaxPoolLayer\n  | FullyConnectedLayer\n  | PurelinLayer\n  | AbstractLayer3D\n  | AbstractLayer1D;\nexport type Layers1D = LogisticLayer | SoftmaxLayer | TanhLayer | ReluLayer | SoftplusLayer | PurelinLayer;\nexport type Layers3D = ConvLayer | MaxPoolLayer | FullyConnectedLayer | AbstractLayer3D;\nexport type LayersRNN = RecurrentLayer;\nexport type LayersLSTM = LSTMLayer;\n","import { Layers } from \"../../types\";\nimport { Matrix } from \"../../Math/Matrix\";\n\nexport abstract class AbstractBackPropagation {\n  protected layer: Layers | null = null;\n  protected previousLayer: Layers | null = null;\n\n  constructor(layer: Layers | null, previousLayer: Layers) {\n    this.layer = layer;\n    this.previousLayer = previousLayer;\n  }\n\n  abstract propagate(\n    input: Matrix,\n    numberOfExamples: number,\n    regularization: number,\n    layer: Layers,\n    sigma: Matrix\n  ): Matrix;\n}\n","import { AbstractBackPropagation } from \"./AbstractBackpropagation\";\nimport { Matrix } from \"impulse-math-ts\";\nimport { Layers } from \"../../types\";\n\nexport class Backpropagation1Dto1D extends AbstractBackPropagation {\n  propagate(input: Matrix, numberOfExamples: number, regularization: number, layer: Layers, sigma: Matrix): Matrix {\n    const previousActivations = this.previousLayer !== null ? this.previousLayer.A : input;\n\n    const delta = sigma.dot(previousActivations.transpose());\n    this.layer.gW = delta.divide(numberOfExamples).add(layer.W.multiply(regularization / numberOfExamples));\n    this.layer.gb = sigma.rowwiseSum().transpose().divide(numberOfExamples);\n\n    if (this.previousLayer !== null) {\n      // @ts-ignore\n      const result = this.layer.W.transpose().dot(sigma);\n      if (result.rows !== previousActivations.rows || result.cols !== previousActivations.cols) {\n        throw new Error(\n          `Dimension error 1. (${result.rows}, ${result.cols}) | (${previousActivations.rows}, ${previousActivations.cols})`\n        );\n      }\n      if (this.layer.gW.rows !== this.layer.W.rows || this.layer.gW.cols !== this.layer.W.cols) {\n        throw new Error(\n          `Dimension error 2. (${this.layer.gW.rows}, ${this.layer.gW.cols}) | (${this.layer.W.rows}, ${this.layer.W.cols})`\n        );\n      }\n      if (this.layer.gb.rows !== this.layer.b.rows || this.layer.gb.cols !== this.layer.b.cols) {\n        throw new Error(\n          `Dimension error 3. (${this.layer.gb.rows}, ${this.layer.gb.cols}) | (${this.layer.b.rows}, ${this.layer.b.cols})`\n        );\n      }\n      return result;\n    }\n    return new Matrix();\n  }\n}\n","import { AbstractBackPropagation } from \"./AbstractBackpropagation\";\nimport { Matrix } from \"../../Math/Matrix\";\nimport { Layers } from \"../../types\";\n\nexport class Backpropagation3Dto1D extends AbstractBackPropagation {\n  propagate(input: Matrix, numberOfExamples: number, regularization: number, layer: Layers, sigma: Matrix): Matrix {\n    return sigma;\n  }\n}\n","import { AbstractBackPropagation } from \"./AbstractBackpropagation\";\nimport { Matrix } from \"impulse-math-ts\";\nimport { Layers, Layers3D } from \"../../types\";\nimport { getComputation } from \"impulse-math-ts\";\n\nexport class BackpropagationToMaxPool extends AbstractBackPropagation {\n  protected previousLayer: Layers3D | null = null;\n\n  propagate(input: Matrix, numberOfExamples: number, regularization: number, layer: Layers, sigma: Matrix): Matrix {\n    const prevLayer = this.previousLayer;\n    if (prevLayer) {\n      const result = getComputation().execute(\"fillZeros\", new Matrix(prevLayer.Z.rows, prevLayer.Z.cols)) as Matrix;\n\n      const filterSize = prevLayer.getFilterSize();\n      const stride = prevLayer.getStride();\n      const inputWidth = prevLayer.getWidth();\n      const inputHeight = prevLayer.getHeight();\n      const inputDepth = prevLayer.getDepth();\n      const outputWidth = prevLayer.getOutputWidth();\n      const outputHeight = prevLayer.getOutputHeight();\n      const outputDepth = prevLayer.getOutputDepth();\n\n      for (let m = 0; m < numberOfExamples; m++) {\n        for (let c = 0; c < outputDepth; c++) {\n          for (let h = 0; h < outputHeight; h++) {\n            for (let w = 0; w < outputWidth; w++) {\n              const vertStart = stride * h;\n              const vertEnd = vertStart + filterSize;\n              const horizStart = stride * w;\n              const horizEnd = horizStart + filterSize;\n\n              let _max = -Infinity;\n              const inputOffset = inputHeight * inputWidth * c;\n              const outputOffset = outputHeight * outputWidth * c;\n              let maxX = 0;\n              let maxY = 0;\n\n              for (let y = 0, vStart = vertStart; y < filterSize; y++, vStart++) {\n                for (let x = 0, hStart = horizStart; x < filterSize; x++, hStart++) {\n                  if (prevLayer.Z.data && _max < prevLayer.Z.data[inputOffset + vStart * inputWidth + hStart][m]) {\n                    _max = prevLayer.Z.data[inputOffset + vStart * inputWidth + hStart][m];\n                    maxX = hStart;\n                    maxY = vStart;\n                  }\n                }\n              }\n\n              if (result.data && sigma.data) {\n                result.data[inputOffset + maxY * inputWidth + maxX][m] =\n                  sigma.data[outputOffset + h * outputWidth + w][m];\n              }\n            }\n          }\n        }\n      }\n\n      return result;\n    }\n\n    return new Matrix();\n  }\n}\n","import { AbstractBackPropagation } from \"./AbstractBackpropagation\";\nimport { Matrix } from \"impulse-math-ts\";\nimport { Layers, Layers3D } from \"../../types\";\nimport { getComputation } from \"impulse-math-ts\";\n\nexport class BackpropagationToConv extends AbstractBackPropagation {\n  protected previousLayer: Layers3D | null = null;\n\n  propagate(input: Matrix, numberOfExamples: number, regularization: number, layer: Layers, sigma: Matrix): Matrix {\n    const previousLayer = this.previousLayer;\n\n    if (previousLayer) {\n      const padding = previousLayer.getPadding();\n      const stride = previousLayer.getStride();\n      const filterSize = previousLayer.getFilterSize();\n      const outputWidth = previousLayer.getOutputWidth();\n      const outputHeight = previousLayer.getOutputHeight();\n      const outputDepth = previousLayer.getOutputDepth();\n      const inputWidth = previousLayer.getWidth();\n      const inputHeight = previousLayer.getHeight();\n      const inputDepth = previousLayer.getDepth();\n\n      const tmpResult = getComputation().execute(\n        \"fillZeros\",\n        new Matrix((inputWidth + 2 * padding) * (inputHeight + 2 * padding) * inputDepth, numberOfExamples)\n      ) as Matrix;\n\n      const result = new Matrix(inputWidth * inputHeight * inputDepth, numberOfExamples);\n\n      previousLayer.gW = getComputation().execute(\"fillZeros\", previousLayer.gW) as Matrix;\n      previousLayer.gb = getComputation().execute(\"fillZeros\", previousLayer.gb) as Matrix;\n\n      for (let m = 0; m < numberOfExamples; m++) {\n        for (let c = 0; c < outputDepth; c++) {\n          for (let h = 0; h < outputHeight; h++) {\n            for (let w = 0; w < outputWidth; w++) {\n              const vertStart = stride * h;\n              const vertEnd = vertStart + filterSize;\n              const horizStart = stride * w;\n              const horizEnd = horizStart + filterSize;\n\n              // filter loop\n              for (let d = 0; d < inputDepth; d++) {\n                for (\n                  let y = 0, vertical = vertStart, verticalPad = -padding;\n                  y < filterSize;\n                  y++, vertical++, verticalPad++\n                ) {\n                  for (\n                    let x = 0, horizontal = horizStart, horizontalPad = -padding;\n                    x < filterSize;\n                    x++, horizontal++, horizontalPad++\n                  ) {\n                    if (previousLayer.W.data && tmpResult.data && sigma.data) {\n                      tmpResult.data[\n                        d * (inputWidth + 2 * padding) * (inputHeight + 2 * padding) +\n                          vertical * (inputWidth + 2 * padding) +\n                          horizontal\n                      ][m] +=\n                        previousLayer.W.data[c][d * filterSize * filterSize + y * filterSize + x] *\n                        sigma.data[c * outputWidth * outputHeight + h * outputWidth + w][m];\n                    }\n\n                    let z = 0;\n                    if (padding == 0) {\n                      if (previousLayer.Z.data) {\n                        z = previousLayer.Z.data[d * inputWidth * inputHeight + vertical * inputWidth + horizontal][m];\n                      }\n                    } else {\n                      if (\n                        verticalPad >= 0 &&\n                        horizontalPad >= 0 &&\n                        verticalPad < inputHeight &&\n                        horizontalPad < inputWidth\n                      ) {\n                        if (previousLayer.Z.data) {\n                          z =\n                            previousLayer.Z.data[\n                              d * inputWidth * inputHeight + verticalPad * inputWidth + horizontalPad\n                            ][m];\n                        }\n                      }\n                    }\n\n                    if (previousLayer.gW.data && sigma.data) {\n                      previousLayer.gW.data[c][d * filterSize * filterSize + y * filterSize + x] +=\n                        (z * sigma.data[c * (outputWidth * outputHeight) + h * outputWidth + w][m]) / numberOfExamples;\n                    }\n                  }\n                }\n              }\n\n              if (previousLayer.gb.data && sigma.data) {\n                previousLayer.gb.data[c][0] +=\n                  sigma.data[c * (outputWidth * outputHeight) + h * outputWidth + w][m] / numberOfExamples;\n              }\n            }\n          }\n        }\n\n        if (padding > 0) {\n          // unpad\n          for (let c = 0; c < inputDepth; c++) {\n            for (let h = -padding, y = 0; h < inputHeight + padding; h++, y++) {\n              for (let w = -padding, x = 0; w < inputWidth + padding; w++, x++) {\n                if (w >= 0 && h >= 0 && w < inputWidth && h < inputHeight && result.data && tmpResult.data) {\n                  result.data[c * inputWidth * inputHeight + h * inputWidth + w][m] =\n                    tmpResult.data[\n                      c * (inputWidth + 2 * padding) * (inputHeight + 2 * padding) + y * (inputWidth + 2 * padding) + x\n                    ][m];\n                }\n              }\n            }\n          }\n        }\n      }\n\n      if (padding > 0) {\n        return result;\n      }\n\n      return tmpResult;\n    }\n  }\n}\n","import { Layers, LayerType } from \"../../types\";\nimport { Backpropagation1Dto1D } from \"./Backpropagation1Dto1D\";\nimport { Backpropagation3Dto1D } from \"./Backpropagation3Dto1D\";\nimport { BackpropagationToMaxPool } from \"./BackpropagationToMaxPool\";\nimport { BackpropagationToConv } from \"./BackpropagationToConv\";\nimport { AbstractBackPropagation } from \"./AbstractBackpropagation\";\n\nexport class BackpropagationFactory {\n  static create(previousLayer: Layers, layer: Layers): AbstractBackPropagation | null {\n    if (previousLayer == null) {\n      if (layer.is1D()) {\n        return new Backpropagation1Dto1D(layer, previousLayer);\n      } else if (layer.getType() == LayerType.conv) {\n        return new Backpropagation3Dto1D(layer, previousLayer);\n      }\n    } else {\n      if (previousLayer.getType() == LayerType.maxpool) {\n        return new BackpropagationToMaxPool(layer, previousLayer);\n      } else if (previousLayer.getType() == LayerType.conv) {\n        return new BackpropagationToConv(layer, previousLayer);\n      } else if (previousLayer.is1D() || previousLayer.getType() == LayerType.fullyconnected) {\n        return new Backpropagation1Dto1D(layer, previousLayer);\n      }\n    }\n    return null;\n  }\n}\n","import { Dimension, Layers, LayersLSTM } from \"../types\";\nimport { Matrix } from \"impulse-math-ts\";\n\nexport class NetworkLSTM {\n  private readonly dimensions: Dimension | null = null;\n  private size = 0;\n  private layers: LayersLSTM[] = [];\n\n  constructor(dimensions: Dimension) {\n    this.dimensions = dimensions;\n  }\n\n  addLayer(layer: LayersLSTM): NetworkLSTM {\n    this.size++;\n    this.layers.push(layer);\n\n    return this;\n  }\n\n  getLayers(): LayersLSTM[] {\n    return this.layers;\n  }\n\n  loss(vocabularySize: number, sequenceLength: number): number {\n    return -Math.log(1 / vocabularySize) * sequenceLength;\n  }\n\n  sample(charIndices: Object) {}\n\n  forward(X: Matrix[], a0: Matrix): Matrix[] {\n    const nX = X.length;\n    const m = X[0].rows;\n    const tX = X[0].cols;\n    const nY = this.layers[0].Wy.rows;\n    const nA = this.layers[0].Wy.cols;\n\n    const a = new Array(nA).map(() => {\n      return new Matrix(m, tX).setZeros();\n    });\n    const c = new Array(nA).map(() => {\n      return new Matrix(m, tX).setZeros();\n    });\n    const y = new Array(nY).map(() => {\n      return new Matrix(m, tX).setZeros();\n    });\n\n    let aNext = a0;\n    let cNext = new Matrix(nA, m).setZeros();\n\n    for (let t = 0; t < tX; t += 1) {\n      const dataInput = [];\n      X.forEach((m: Matrix, i) => {\n        dataInput[i] = [];\n        for (let row = 0; row < m.rows; row += 1) {\n          dataInput[i].push(m.data[row][t]);\n        }\n      });\n      const input = Matrix.from(dataInput);\n      const [_aNext, _cNext, _yt] = this.layers[0].forward(input, aNext, cNext);\n    }\n  }\n\n  backward(da: Matrix[]): void {\n    const na = da.length;\n    const m = da[0].rows;\n    const tx = da[0].cols;\n    const nx = this.layers[0].x1.rows;\n\n    for (let t = tx - 1; t >= 0; t -= 1) {\n      //this.layers[0].backward(_da, dcPrevT);\n    }\n  }\n\n  /*save(path: string): Promise<string> {\n    const resultJSON = {\n      dimensions: this.dimensions,\n      layers: [],\n    };\n\n    this.layers.forEach((layer: Layers) => {\n      resultJSON.layers.push({\n        type: layer.getType(),\n        size: layer.getSize(),\n        weights: {\n          W: layer.W.data,\n          b: layer.b.data,\n        },\n      });\n    });\n\n    const result = JSON.stringify(resultJSON);\n\n    return new Promise((resolve, reject) => {\n      fs.writeFile(path, result, (err) => {\n        if (err) {\n          console.error(err);\n          reject();\n        }\n        resolve(result);\n      });\n    });\n  }*/\n}\n","import { Dimension, Layers } from \"../types\";\nimport { Network, NetworkRNN, Networks } from \"../Network\";\nimport { BackpropagationFactory } from \"../Layer/Backpropagation/BackpropagationFactory\";\nimport { NetworkLSTM } from \"../Network/NetworkLSTM\";\nimport { DatasetVocabulary } from \"../Dataset/DatasetVocabulary\";\n\nabstract class AbstractNetworkBuilder {\n  protected dimensions: Dimension | null = null;\n  protected lastLayer: Layers | null = null;\n  protected network: Networks | null = null;\n\n  constructor(dimension: Dimension, type = \"DNN\") {\n    this.dimensions = dimension;\n\n    if (type === \"DNN\") {\n      this.network = new Network(this.dimensions);\n    } else if (type === \"RNN\") {\n      this.network = new NetworkRNN(this.dimensions);\n    } else if (type === \"LSTM\") {\n      this.network = new NetworkLSTM(this.dimensions);\n    }\n  }\n\n  createLayer(layerClass: Layers, callback: (layer: Layers) => void | null = null): AbstractNetworkBuilder {\n    // @ts-ignore\n    const layer: Layers = new layerClass();\n\n    if (typeof callback === \"function\") {\n      callback(layer);\n    }\n\n    if (this.lastLayer === null) {\n      this.firstLayerTransition(layer);\n    } else {\n      // @ts-ignore\n      layer.transition(this.lastLayer);\n    }\n\n    layer.configure();\n    layer.setBackPropagation(BackpropagationFactory.create(this.lastLayer, layer));\n\n    this.network.addLayer(layer);\n    this.lastLayer = layer;\n\n    return this;\n  }\n\n  getNetwork(): Networks | null {\n    return this.network;\n  }\n\n  abstract firstLayerTransition(layer: Layers): void;\n}\n\nexport { AbstractNetworkBuilder };\n","import { Matrix } from \"impulse-math-ts\";\nimport { Dimension, Layers } from \"../types\";\nimport { AbstractBackPropagation } from \"./Backpropagation/AbstractBackpropagation\";\n\nabstract class AbstractLayer {\n  protected width = 0;\n  protected height = 0;\n  protected depth = 0;\n  protected previousLayer: Layers | null = null;\n  protected backPropagation: AbstractBackPropagation | null = null;\n\n  constructor() {}\n\n  setBackPropagation(backPropagation: AbstractBackPropagation): Layers {\n    this.backPropagation = backPropagation;\n    return this;\n  }\n\n  getBackPropagation(): AbstractBackPropagation | null {\n    return this.backPropagation;\n  }\n\n  setWidth(value: number): Layers {\n    this.width = value;\n    return this;\n  }\n\n  getWidth(): number {\n    return this.width;\n  }\n\n  setHeight(value: number): Layers {\n    this.height = value;\n    return this;\n  }\n\n  getHeight(): number {\n    return this.height;\n  }\n\n  setDepth(value: number): Layers {\n    this.depth = value;\n    return this;\n  }\n\n  getDepth(): number {\n    return this.depth;\n  }\n\n  abstract getOutputWidth(): number;\n\n  abstract getOutputHeight(): number;\n\n  abstract getOutputDepth(): number;\n\n  abstract configure(): void;\n\n  abstract is1D(): boolean;\n\n  abstract is3D(): boolean;\n\n  transition(previousLayer: Layers): Layers {\n    this.previousLayer = previousLayer;\n    return this;\n  }\n\n  abstract getSize(): Dimension | number;\n\n  abstract activation(value: Matrix): Matrix;\n\n  abstract getType(): string;\n\n  abstract derivative(delta: Matrix): Matrix;\n\n  abstract penalty(): number;\n}\n\nexport { AbstractLayer };\n","import { AbstractLayer } from \"./AbstractLayer\";\nimport { Layers } from \"../types\";\nimport { Matrix } from \"impulse-math-ts\";\n\nabstract class AbstractLayer1D extends AbstractLayer {\n  protected depth = 1;\n  public W: Matrix;\n  public b: Matrix;\n  public A: Matrix;\n  public Z: Matrix;\n  public gW: Matrix;\n  public gb: Matrix;\n  public vW: Matrix;\n  public sW: Matrix;\n  public vb: Matrix;\n  public sb: Matrix;\n  public dW: Matrix;\n  public db: Matrix;\n  public dZ: Matrix;\n\n  constructor() {\n    super();\n    this.W = new Matrix();\n    this.b = new Matrix();\n    this.A = new Matrix();\n    this.Z = new Matrix();\n    this.gW = new Matrix();\n    this.gb = new Matrix();\n    this.vW = new Matrix();\n    this.vb = new Matrix();\n    this.sW = new Matrix();\n    this.sb = new Matrix();\n    this.dW = new Matrix();\n    this.db = new Matrix();\n  }\n\n  configure(): void {\n    this.W.resize(this.getHeight(), this.getWidth());\n    this.W = this.W.setRandom(this.previousLayer ? (this.previousLayer.getHeight() as number) : this.getHeight());\n\n    this.b.resize(this.getHeight(), 1);\n    this.b = this.b.setRandom(this.previousLayer ? (this.previousLayer.getHeight() as number) : this.getHeight());\n\n    this.gW.resize(this.getHeight(), this.getWidth());\n    this.gW = this.gW.setZeros();\n\n    this.gb.resize(this.getHeight(), 1);\n    this.gb = this.gb.setZeros();\n\n    this.sW.resize(this.getHeight(), this.getWidth());\n    this.sW = this.sW.setZeros();\n\n    this.sb.resize(this.getHeight(), 1);\n    this.sb = this.sb.setZeros();\n\n    this.vW.resize(this.getHeight(), this.getWidth());\n    this.vW = this.vW.setZeros();\n\n    this.vb.resize(this.getHeight(), 1);\n    this.vb = this.vb.setZeros();\n\n    this.dW.resize(this.getHeight(), this.getWidth());\n    this.dW = this.dW.setZeros();\n\n    this.db.resize(this.getHeight(), 1);\n    this.db = this.db.setZeros();\n  }\n\n  forward(input: Matrix): Matrix {\n    this.Z = this.W.dot(input).add(this.b.replicate(1, input.cols));\n    this.A = this.activation(this.Z);\n    return this.A;\n  }\n\n  is1D(): boolean {\n    return true;\n  }\n\n  is3D(): boolean {\n    return false;\n  }\n\n  transition(previousLayer: Layers): AbstractLayer1D {\n    if (previousLayer.is1D()) {\n      this.setWidth(previousLayer.getSize() as number);\n    } else if (previousLayer.is3D()) {\n      this.setWidth(previousLayer.getOutputWidth() * previousLayer.getOutputHeight() * previousLayer.getOutputDepth());\n    }\n\n    super.transition(previousLayer);\n\n    return this;\n  }\n\n  setSize(value: number): AbstractLayer1D {\n    this.setHeight(value as number);\n\n    return this;\n  }\n\n  getSize(): number {\n    return this.height;\n  }\n\n  getOutputWidth(): number {\n    return this.width;\n  }\n\n  getOutputHeight(): number {\n    return this.height;\n  }\n\n  getOutputDepth(): number {\n    return 1;\n  }\n\n  penalty(): number {\n    return this.W.pow(2).sum();\n  }\n}\n\nexport { AbstractLayer1D };\n","import { Matrix } from \"impulse-math-ts\";\nimport { LayerType } from \"../types\";\nimport { AbstractLayer1D } from \"./AbstractLayer1D\";\n\nclass SoftmaxLayer extends AbstractLayer1D {\n  activation(m: Matrix): Matrix {\n    return m.softmax();\n  }\n\n  getType(): LayerType {\n    return LayerType.softmax;\n  }\n\n  derivative(delta: Matrix): Matrix {\n    return delta.multiply(-1).add(1).fraction(1);\n  }\n}\n\nexport { SoftmaxLayer };\n","import { Matrix } from \"impulse-math-ts\";\nimport { LayerType } from \"../types\";\nimport { AbstractLayer1D } from \"./AbstractLayer1D\";\n\nclass LogisticLayer extends AbstractLayer1D {\n  activation(m: Matrix): Matrix {\n    return m.multiply(-1).exp().add(1).fraction(1);\n  }\n\n  getType(): LayerType {\n    return LayerType.logistic;\n  }\n\n  derivative(delta: Matrix): Matrix {\n    return delta.multiply(this.activation(delta).multiply(this.activation(delta.minusOne())));\n  }\n}\n\nexport { LogisticLayer };\n","import { Matrix } from \"impulse-math-ts\";\nimport { LayerType } from \"../types\";\nimport { AbstractLayer1D } from \"./AbstractLayer1D\";\n\nclass TanhLayer extends AbstractLayer1D {\n  activation(m: Matrix): Matrix {\n    return m.tanh();\n  }\n\n  getType(): LayerType {\n    return LayerType.tanh;\n  }\n\n  derivative(sigma: Matrix): Matrix {\n    return this.activation(sigma).pow(2).minusOne();\n  }\n}\n\nexport { TanhLayer };\n","import { Matrix } from \"impulse-math-ts\";\nimport { LayerType } from \"../types\";\nimport { AbstractLayer1D } from \"./AbstractLayer1D\";\nimport { getComputation } from \"impulse-math-ts\";\n\nclass ReluLayer extends AbstractLayer1D {\n  activation(m: Matrix): Matrix {\n    return m.setMin(0.0);\n  }\n\n  getType(): LayerType {\n    return LayerType.relu;\n  }\n\n  derivative(delta: Matrix) {\n    return getComputation().execute(\"reluBackpropagation\", delta, this.A) as Matrix;\n  }\n}\n\nexport { ReluLayer };\n","import { Matrix } from \"impulse-math-ts\";\nimport { LayerType } from \"../types\";\nimport { AbstractLayer1D } from \"./AbstractLayer1D\";\n\nclass SoftplusLayer extends AbstractLayer1D {\n  activation(m: Matrix): Matrix {\n    return m.exp().add(1).log();\n  }\n\n  getType(): LayerType {\n    return LayerType.softplus;\n  }\n\n  derivative(delta: Matrix): Matrix {\n    return delta.multiply(-1).exp().add(1).fraction(1);\n  }\n}\n\nexport { SoftplusLayer };\n","import { AbstractLayer } from \"./AbstractLayer\";\nimport { Dimension, Layers } from \"../types\";\nimport { Matrix } from \"impulse-math-ts\";\n\nabstract class AbstractLayer3D extends AbstractLayer {\n  public W: Matrix;\n  public b: Matrix;\n  public A: Matrix;\n  public Z: Matrix;\n  public gW: Matrix;\n  public gb: Matrix;\n  public vW: Matrix;\n  public sW: Matrix;\n  public vb: Matrix;\n  public sb: Matrix;\n  public dW: Matrix;\n  public db: Matrix;\n  public dZ: Matrix;\n\n  constructor() {\n    super();\n    this.W = new Matrix();\n    this.b = new Matrix();\n    this.A = new Matrix();\n    this.Z = new Matrix();\n    this.gW = new Matrix();\n    this.gb = new Matrix();\n    this.vW = new Matrix();\n    this.vb = new Matrix();\n    this.sW = new Matrix();\n    this.sb = new Matrix();\n    this.dW = new Matrix();\n    this.db = new Matrix();\n  }\n\n  configure(): void {\n    // do nothing\n  }\n\n  is1D(): boolean {\n    return false;\n  }\n\n  is3D(): boolean {\n    return true;\n  }\n\n  transition(previousLayer: Layers): Layers {\n    if (previousLayer.is3D()) {\n      this.setSize([previousLayer.getOutputWidth(), previousLayer.getOutputHeight(), previousLayer.getOutputDepth()]);\n    }\n\n    super.transition(previousLayer);\n\n    return this;\n  }\n\n  setSize(dimension: Dimension | number): Layers {\n    this.setWidth(dimension[0]);\n    this.setHeight(dimension[1]);\n    this.setDepth(dimension[2]);\n\n    return this;\n  }\n\n  getSize(): Dimension {\n    return [this.getWidth(), this.getHeight(), this.getDepth()];\n  }\n\n  abstract getPadding(): number;\n\n  abstract getStride(): number;\n\n  abstract getFilterSize(): number;\n\n  abstract forward(input: Matrix): Matrix;\n\n  abstract derivative(delta: Matrix): Matrix;\n\n  penalty(): number {\n    return this.W.pow(2).sum();\n  }\n}\n\nexport { AbstractLayer3D };\n","import { Matrix, im2col, getComputation } from \"impulse-math-ts\";\nimport { LayerType } from \"../types\";\nimport { AbstractLayer3D } from \"./AbstractLayer3D\";\n\nexport class ConvLayer extends AbstractLayer3D {\n  protected numFilters = 32;\n  protected filterSize = 4;\n  protected padding = 1;\n  protected stride = 1;\n\n  configure(): void {\n    this.W.resize(this.numFilters, this.filterSize * this.filterSize * this.depth);\n    this.W = this.W.setRandom(this.getOutputWidth() * this.getOutputHeight() * this.getOutputDepth());\n\n    this.b.resize(this.numFilters, 1);\n    this.b = this.b.setRandom(this.getOutputWidth() * this.getOutputHeight() * this.getOutputDepth());\n\n    this.gW.resize(this.numFilters, this.filterSize * this.filterSize * this.depth);\n    this.gW = this.gW.setZeros();\n\n    this.gb.resize(this.numFilters, 1);\n    this.gb = this.gb.setZeros();\n\n    this.sW.resize(this.numFilters, this.filterSize * this.filterSize * this.depth);\n    this.sW = this.sW.setZeros();\n\n    this.sb.resize(this.numFilters, 1);\n    this.sb = this.sb.setZeros();\n\n    this.vW.resize(this.numFilters, this.filterSize * this.filterSize * this.depth);\n    this.vW = this.vW.setZeros();\n\n    this.vb.resize(this.numFilters, 1);\n    this.vb = this.vb.setZeros();\n  }\n\n  getOutputHeight(): number {\n    return (this.width - this.filterSize + 2 * this.padding) / this.stride + 1;\n  }\n\n  getOutputWidth(): number {\n    return (this.height - this.filterSize + 2 * this.padding) / this.stride + 1;\n  }\n\n  getOutputDepth(): number {\n    return this.numFilters;\n  }\n\n  setFilterSize(size: number): ConvLayer {\n    this.filterSize = size;\n    return this;\n  }\n\n  getFilterSize(): number {\n    return this.filterSize;\n  }\n\n  setNumFilters(numFilters: number): ConvLayer {\n    this.numFilters = numFilters;\n    return this;\n  }\n\n  getNumFilters(): number {\n    return this.numFilters;\n  }\n\n  setPadding(padding: number): ConvLayer {\n    this.padding = padding;\n    return this;\n  }\n\n  getPadding(): number {\n    return this.padding;\n  }\n\n  setStride(stride: number): ConvLayer {\n    this.stride = stride;\n    return this;\n  }\n\n  getStride(): number {\n    return this.stride;\n  }\n\n  forward(input: Matrix): Matrix {\n    const result = new Matrix(\n      this.getOutputWidth() * this.getOutputHeight() * this.getOutputDepth(),\n      input.cols\n    ).setZeros();\n\n    for (let i = 0; i < input.cols; i += 1) {\n      const conv = im2col(\n        input.col(i),\n        this.depth,\n        this.height,\n        this.width,\n        this.filterSize,\n        this.filterSize,\n        this.padding,\n        this.padding,\n        this.stride,\n        this.stride\n      );\n\n      const tmp = this.W.dot(conv.transpose()).add(this.b.replicate(1, conv.rows));\n      result.setCol(i, tmp.rollToColMatrix());\n    }\n\n    this.Z = result;\n    this.A = this.activation(this.Z);\n\n    return this.A;\n  }\n\n  activation(m: Matrix): Matrix {\n    return m.setMin(0);\n  }\n\n  getType(): LayerType {\n    return LayerType.conv;\n  }\n\n  derivative(delta: Matrix) {\n    return getComputation().execute(\"reluBackpropagation\", delta, this.A) as Matrix;\n  }\n}\n","import { Dimension, LayerType } from \"../types\";\nimport { ConvLayer } from \"./Conv\";\n\nclass FullyConnectedLayer extends ConvLayer {\n  transition(previousLayer: FullyConnectedLayer): FullyConnectedLayer {\n    if (previousLayer.is3D()) {\n      if (previousLayer.getType() == LayerType.maxpool) {\n        this.filterSize = previousLayer.getOutputWidth();\n        this.padding = 0;\n        this.stride = 1;\n        this.width = previousLayer.getOutputWidth();\n        this.height = previousLayer.getOutputHeight();\n        this.depth = previousLayer.getOutputDepth();\n        this.numFilters =\n          previousLayer.getOutputWidth() * previousLayer.getOutputHeight() * previousLayer.getOutputDepth();\n      } else {\n        throw new Error(\"Invalid usage. Cannot fully connect with previous non maxpool Layer.\");\n      }\n    } else {\n      throw new Error(\"Invalid usage. Cannot fully connect with previous 1D Layer.\");\n    }\n\n    return this;\n  }\n\n  setSize(dimension: Dimension): FullyConnectedLayer {\n    return this;\n  }\n\n  setFilterSize(filterSize: number): FullyConnectedLayer {\n    return this;\n  }\n\n  setStride(stride: number): FullyConnectedLayer {\n    return this;\n  }\n\n  setPadding(padding: number): FullyConnectedLayer {\n    return this;\n  }\n\n  setWidth(value: number): FullyConnectedLayer {\n    return this;\n  }\n\n  setHeight(value: number): FullyConnectedLayer {\n    return this;\n  }\n\n  setDepth(value: number): FullyConnectedLayer {\n    return this;\n  }\n\n  setNumFilters(value: number): FullyConnectedLayer {\n    return this;\n  }\n}\n\nexport { FullyConnectedLayer };\n","import { Matrix } from \"impulse-math-ts\";\nimport { maxpool } from \"impulse-math-ts\";\nimport { LayerType } from \"../types\";\nimport { AbstractLayer3D } from \"./AbstractLayer3D\";\n\nclass MaxPoolLayer extends AbstractLayer3D {\n  filterSize = 0;\n  stride = 0;\n\n  configure(): void {\n    // do nothing\n  }\n\n  getOutputHeight(): number {\n    return (this.height - this.filterSize) / this.stride + 1;\n  }\n\n  getOutputWidth(): number {\n    return (this.width - this.filterSize) / this.stride + 1;\n  }\n\n  getOutputDepth(): number {\n    return this.depth;\n  }\n\n  setFilterSize(size: number): MaxPoolLayer {\n    this.filterSize = size;\n    return this;\n  }\n\n  getFilterSize(): number {\n    return this.filterSize;\n  }\n\n  setStride(stride: number): MaxPoolLayer {\n    this.stride = stride;\n    return this;\n  }\n\n  getStride(): number {\n    return this.stride;\n  }\n\n  getPadding(): number {\n    return 0;\n  }\n\n  forward(input: Matrix): Matrix {\n    const result = new Matrix(this.getOutputWidth() * this.getOutputHeight() * this.getOutputDepth(), input.cols);\n\n    for (let i = 0; i < input.cols; i += 1) {\n      const pool = maxpool(\n        input.col(i),\n        this.depth,\n        this.height,\n        this.width,\n        this.filterSize,\n        this.filterSize,\n        this.stride,\n        this.stride\n      );\n\n      result.setCol(i, pool.rollToColMatrix());\n    }\n\n    this.Z = result;\n    this.A = this.activation(this.Z);\n\n    return this.A;\n  }\n\n  activation(m: Matrix): Matrix {\n    return m;\n  }\n\n  getType(): LayerType {\n    return LayerType.maxpool;\n  }\n\n  derivative(delta: Matrix): Matrix {\n    return delta;\n  }\n}\n\nexport { MaxPoolLayer };\n","import { Matrix } from \"impulse-math-ts\";\nimport { Dimension, LayerType } from \"../types\";\nimport { AbstractLayer } from \"./AbstractLayer\";\n\nexport interface GradientResult {\n  dWax: Matrix;\n  dWya: Matrix;\n  dWaa: Matrix;\n  db: Matrix;\n  dby: Matrix;\n  daNext: Matrix;\n}\n\nexport class RecurrentLayer extends AbstractLayer {\n  public Wax: Matrix | null = null;\n  public Waa: Matrix | null = null;\n  public Wya: Matrix | null = null;\n  public b: Matrix | null = null;\n  public by: Matrix | null = null;\n  public dWax: Matrix | null = null;\n  public dWaa: Matrix | null = null;\n  public dWya: Matrix | null = null;\n  public db: Matrix | null = null;\n  public dby: Matrix | null = null;\n  public Y: Matrix[] = [];\n  public A: Matrix[] = [];\n  public X: Matrix[] = [];\n  public aNext: Matrix | null = null;\n  public aPrev: Matrix | null = null;\n  public daNext: Matrix | null = null;\n\n  configure(): void {\n    this.Wax = new Matrix(this.getWidth(), this.getHeight());\n    this.Wax = this.Wax.setRandom(this.getWidth());\n\n    this.Waa = new Matrix(this.getWidth(), this.getWidth());\n    this.Waa = this.Waa.setRandom(this.getWidth());\n\n    this.Wya = new Matrix(this.getDepth(), this.getWidth());\n    this.Wya = this.Wya.setRandom(this.getDepth());\n\n    this.b = new Matrix(this.getWidth(), 1);\n    this.b = this.b.setRandom(this.getWidth());\n\n    this.by = new Matrix(this.getDepth(), 1);\n    this.by = this.by.setRandom(this.getDepth());\n\n    this.dWax = new Matrix(this.getWidth(), this.getHeight());\n    this.dWax = this.dWax.setZeros();\n\n    this.dWaa = new Matrix(this.getWidth(), this.getWidth());\n    this.dWaa = this.dWaa.setZeros();\n\n    this.dWya = new Matrix(this.getDepth(), this.getWidth());\n    this.dWya = this.dWya.setZeros();\n\n    this.db = new Matrix(this.getWidth(), 1);\n    this.db = this.db.setZeros();\n\n    this.dby = new Matrix(this.getDepth(), 1);\n    this.dby = this.dby.setZeros();\n\n    this.daNext = new Matrix(this.getWidth(), this.getWidth());\n    this.daNext = this.daNext.setZeros();\n  }\n\n  forward(x: Matrix, aPrev: Matrix): Matrix[] {\n    const aNext = this.Wax.dot(x)\n      .add(this.Waa.dot(aPrev).replicate(1, this.getWidth()))\n      .add(this.b.replicate(1, x.cols))\n      .tanh();\n    const y = this.Wya.dot(aNext).add(this.by.replicate(1, x.cols)).softmax();\n    this.A.push(aNext);\n    this.X.push(x);\n    this.Y.push(y);\n    this.aPrev = aPrev;\n    return [aNext, y];\n  }\n\n  backward(dy: Matrix, x: Matrix, a: Matrix, aPrev: Matrix): GradientResult {\n    const dTanh = a.pow(2).minusOne().multiply(dy);\n\n    const dWax = dTanh.dot(x.transpose());\n    const dWaa = dTanh.dot(aPrev.transpose());\n    const db = this.db; //.add(dtanh.colwiseSum().divide(dtanh.cols)).setMin(-5).setMax(5);\n    const dby = this.dby; //.replicate(1, this.getWidth()).add(dy).setMin(-5).setMax(5);\n    const dWya = this.dWya; //.add(dy.dot(a.transpose())).setMin(-5).setMax(5);\n    const daNext = this.Waa.transpose().dot(dTanh);\n\n    return {\n      dWax,\n      dWya,\n      dWaa,\n      db,\n      dby,\n      daNext,\n    };\n  }\n\n  activation(m: Matrix): Matrix {\n    return m;\n  }\n\n  getType(): LayerType {\n    return LayerType.rnnlayer;\n  }\n\n  derivative(delta: Matrix): Matrix {\n    return delta;\n  }\n\n  is1D(): boolean {\n    return true;\n  }\n\n  is3D(): boolean {\n    return false;\n  }\n\n  setSize(value: Dimension): RecurrentLayer {\n    this.setWidth(value[0]);\n    this.setHeight(value[1]);\n    this.setDepth(value[2]);\n\n    return this;\n  }\n\n  getSize(): number {\n    return this.height;\n  }\n\n  getOutputWidth(): number {\n    return this.width;\n  }\n\n  getOutputHeight(): number {\n    return this.height;\n  }\n\n  getOutputDepth(): number {\n    return this.depth;\n  }\n\n  penalty(): number {\n    return 0;\n  }\n\n  getWidth(): number {\n    return this.width;\n  }\n}\n","import { Matrix } from \"impulse-math-ts\";\nimport { Dimension, LayerType } from \"../types\";\nimport { AbstractLayer } from \"./AbstractLayer\";\n\nexport class LSTMLayer extends AbstractLayer {\n  public Wf: Matrix | null = null;\n  public bf: Matrix | null = null;\n  public Wi: Matrix | null = null;\n  public bi: Matrix | null = null;\n  public Wc: Matrix | null = null;\n  public bc: Matrix | null = null;\n  public Wo: Matrix | null = null;\n  public bo: Matrix | null = null;\n  public Wy: Matrix | null = null;\n  public by: Matrix | null = null;\n  public dxt: Matrix | null = null;\n  public dWf: Matrix | null = null;\n  public dWi: Matrix | null = null;\n  public dWc: Matrix | null = null;\n  public dWo: Matrix | null = null;\n  public dbf: Matrix | null = null;\n  public dbi: Matrix | null = null;\n  public dbc: Matrix | null = null;\n  public dbo: Matrix | null = null;\n\n  configure(): void {}\n\n  forward(input: Matrix, aPrev: Matrix, cPrev): Matrix[] {\n    const nx = input.rows;\n    const m = input.cols;\n    const ny = this.Wy.rows;\n    const na = this.Wy.cols;\n\n    const concat = new Matrix(nx + na, m);\n\n    const ft = this.Wf.dot(concat).add(this.bf).sigmoid();\n    const it = this.Wi.dot(concat).add(this.bi).sigmoid();\n    const cct = this.Wc.dot(concat).add(this.bc).tanh();\n    const cNext = ft.multiply(cPrev).add(it.multiply(cct));\n    const ot = this.Wo.dot(concat).add(this.bo).sigmoid();\n    const aNext = ot.multiply(cNext.tanh());\n\n    const ytPred = this.Wy.dot(aNext).add(this.by).softmax();\n    return [aNext, cPrev];\n  }\n\n  backward(daNext: Matrix, dcNext: Matrix): void {}\n\n  activation(m: Matrix): Matrix {\n    return m;\n  }\n\n  getType(): LayerType {\n    return LayerType.rnnlayer;\n  }\n\n  derivative(delta: Matrix): Matrix {\n    return delta;\n  }\n\n  is1D(): boolean {\n    return true;\n  }\n\n  is3D(): boolean {\n    return false;\n  }\n\n  setSize(value: Dimension): LSTMLayer {\n    this.setWidth(value[0]);\n    this.setHeight(value[1]);\n    this.setDepth(value[2]);\n\n    return this;\n  }\n\n  getSize(): number {\n    return this.height;\n  }\n\n  getOutputWidth(): number {\n    return this.width;\n  }\n\n  getOutputHeight(): number {\n    return this.height;\n  }\n\n  getOutputDepth(): number {\n    return this.depth;\n  }\n\n  penalty(): number {\n    return 0;\n  }\n}\n","import { AbstractNetworkBuilder } from \"./AbstractNetworkBuilder\";\nimport { Layers } from \"../types\";\nimport { Network } from \"../Network\";\nimport * as fs from \"fs\";\nimport { LogisticLayer, ReluLayer, SoftmaxLayer, SoftplusLayer, TanhLayer } from \"../Layer/\";\nimport { Matrix } from \"impulse-math-ts\";\nimport { JSONLayerData } from \"./types\";\n\nclass NetworkBuilder1D extends AbstractNetworkBuilder {\n  firstLayerTransition(layer: Layers): void {\n    layer.setWidth(this.dimensions[0]);\n  }\n\n  static fromJSON(jsonPath: string): Promise<Network> {\n    return new Promise((resolve, reject) => {\n      fs.readFile(jsonPath, (err, data) => {\n        if (err) {\n          reject(err);\n          return;\n        }\n        const json = JSON.parse(data.toString());\n\n        const builder = new NetworkBuilder1D(json[\"dimensions\"]);\n\n        json[\"layers\"].forEach((layerData: JSONLayerData) => {\n          let layerClass = null;\n\n          if (layerData[\"type\"] === \"logistic\") {\n            layerClass = LogisticLayer;\n          } else if (layerData[\"type\"] === \"softmax\") {\n            layerClass = SoftmaxLayer;\n          } else if (layerData[\"type\"] === \"relu\") {\n            layerClass = ReluLayer;\n          } else if (layerData[\"type\"] === \"softplus\") {\n            layerClass = SoftplusLayer;\n          } else if (layerData[\"type\"] === \"tanh\") {\n            layerClass = TanhLayer;\n          }\n\n          builder.createLayer(layerClass, (layer) => {\n            // @ts-ignore\n            layer.setSize(layerData[\"size\"] as number);\n          });\n        });\n\n        const network = builder.getNetwork();\n\n        network.getLayers().forEach((layer, i) => {\n          layer.W = new Matrix(\n            json[\"layers\"][i][\"weights\"][\"W\"].length,\n            json[\"layers\"][i][\"weights\"][\"W\"][0].length,\n            json[\"layers\"][i][\"weights\"][\"W\"]\n          );\n          layer.b = new Matrix(\n            json[\"layers\"][i][\"weights\"][\"b\"].length,\n            json[\"layers\"][i][\"weights\"][\"b\"][0].length,\n            json[\"layers\"][i][\"weights\"][\"b\"]\n          );\n        });\n\n        resolve(network);\n      });\n    });\n  }\n}\n\nexport { NetworkBuilder1D };\n","import { AbstractNetworkBuilder } from \"./AbstractNetworkBuilder\";\nimport { Layers } from \"../types\";\nimport { Network } from \"../Network\";\nimport * as fs from \"fs\";\nimport { LogisticLayer, ReluLayer, SoftmaxLayer, SoftplusLayer, TanhLayer } from \"../Layer/\";\nimport { ConvLayer } from \"../Layer/\";\nimport { MaxPoolLayer } from \"../Layer/\";\nimport { JSONLayerData } from \"./types\";\n\nclass NetworkBuilder3D extends AbstractNetworkBuilder {\n  firstLayerTransition(layer: Layers): void {\n    if (this.dimensions) {\n      // @ts-ignore\n      layer.setSize(this.dimensions);\n    }\n  }\n\n  static fromJSON(jsonPath: string): Promise<Network> {\n    return new Promise((resolve, reject) => {\n      fs.readFile(jsonPath, (err, data) => {\n        if (err) {\n          reject(err);\n          return;\n        }\n        const json = JSON.parse(data.toString());\n\n        const builder = new NetworkBuilder3D(json[\"size\"]);\n\n        json[\"layers\"].forEach((layerData: JSONLayerData) => {\n          if (layerData[\"type\"] === \"logistic\") {\n            // @ts-ignore\n            builder.createLayer(LogisticLayer, (layer) => {\n              // @ts-ignore\n              layer.setSize(layerData[\"size\"]);\n            });\n          } else if (layerData[\"type\"] === \"softmax\") {\n            // @ts-ignore\n            builder.createLayer(SoftmaxLayer, (layer) => {\n              // @ts-ignore\n              layer.setSize(layerData[\"size\"]);\n            });\n          } else if (layerData[\"type\"] === \"relu\") {\n            // @ts-ignore\n            builder.createLayer(ReluLayer, (layer) => {\n              // @ts-ignore\n              layer.setSize(layerData[\"size\"]);\n            });\n          } else if (layerData[\"type\"] === \"softplus\") {\n            // @ts-ignore\n            builder.createLayer(SoftplusLayer, (layer) => {\n              // @ts-ignore\n              layer.setSize(layerData[\"size\"]);\n            });\n          } else if (layerData[\"type\"] === \"tanh\") {\n            // @ts-ignore\n            builder.createLayer(TanhLayer, (layer) => {\n              // @ts-ignore\n              layer.setSize(layerData[\"size\"]);\n            });\n          } else if (layerData[\"type\"] === \"conv\") {\n            // @ts-ignore\n            builder.createLayer(ConvLayer, (layer: ConvLayer) => {\n              layer.setSize(layerData[\"size\"]);\n              layer.setFilterSize(layerData[\"filterSize\"]);\n              layer.setStride(layerData[\"stride\"]);\n              layer.setNumFilters(layerData[\"numFilters\"]);\n              layer.setPadding(layerData[\"padding\"]);\n            });\n          } else if (layerData[\"type\"] === \"maxpool\") {\n            // @ts-ignore\n            builder.createLayer(MaxPoolLayer, (layer: MaxPoolLayer) => {\n              layer.setSize(layerData[\"size\"]);\n              layer.setFilterSize(layerData[\"filterSize\"]);\n              layer.setStride(layerData[\"stride\"]);\n            });\n          } else if (layerData[\"type\"] === \"fullyconnected\") {\n            // @ts-ignore\n            builder.createLayer(MaxPoolLayer);\n          }\n        });\n\n        const network = builder.getNetwork();\n\n        if (network) {\n          network.getLayers().forEach((layer, i) => {\n            layer.W = json[\"layers\"][\"W\"];\n            layer.b = json[\"layers\"][\"b\"];\n          });\n\n          resolve(network);\n        }\n      });\n    });\n  }\n}\n\nexport { NetworkBuilder3D };\n","import { Layers } from \"../../types\";\n\nexport abstract class AbstractOptimizer {\n  protected batchSize = 0;\n  protected t = 0;\n  protected learningRate = 0;\n\n  setBatchSize(batchSize: number): AbstractOptimizer {\n    this.batchSize = batchSize;\n    return this;\n  }\n\n  setT(t: number): AbstractOptimizer {\n    this.t = t;\n    return this;\n  }\n\n  setLearningRate(learningRate: number): AbstractOptimizer {\n    this.learningRate = learningRate;\n    return this;\n  }\n\n  abstract optimize(layer: Layers): void;\n}\n","import { AbstractOptimizer } from \"./AbstractOptimizer\";\nimport { Layers } from \"../../types\";\n\nexport class OptimizerAdam extends AbstractOptimizer {\n  protected beta1 = 0.9;\n  protected beta2 = 0.999;\n\n  setBeta1(beta1: number): OptimizerAdam {\n    this.beta1 = beta1;\n    return this;\n  }\n\n  setBeta2(beta2: number): OptimizerAdam {\n    this.beta2 = beta2;\n    return this;\n  }\n\n  optimize(layer: Layers): void {\n    this.adam(layer, this.learningRate, this.t);\n  }\n\n  adam(layer: Layers, learningRate: number, t: number): void {\n    layer.vW = layer.vW.multiply(this.beta1).add(layer.gW.multiply(1 - this.beta1));\n    layer.vb = layer.vb.multiply(this.beta1).add(layer.gb.multiply(1 - this.beta1));\n\n    layer.sW = layer.sW.multiply(this.beta2).add(layer.sW.pow(2).multiply(1 - this.beta2));\n    layer.sb = layer.sb.multiply(this.beta2).add(layer.sb.pow(2).multiply(1 - this.beta2));\n\n    const vWCorrected = layer.vW.divide(1 - Math.pow(this.beta1, 2));\n    const vbCorrected = layer.vb.divide(1 - Math.pow(this.beta1, 2));\n\n    const sWCorrected = layer.sW.add(1e-8).sqrt();\n    const sbCorrected = layer.sb.add(1e-8).sqrt();\n\n    layer.W = layer.W.subtract(vWCorrected.divide(sWCorrected).multiply(learningRate));\n    layer.b = layer.b.subtract(vbCorrected.divide(sbCorrected).multiply(learningRate));\n  }\n}\n","import { AbstractOptimizer } from \"./AbstractOptimizer\";\nimport { Layers } from \"../../types\";\n\nexport class OptimizerGradientDescent extends AbstractOptimizer {\n  optimize(layer: Layers): void {\n    this.gradientDescent(layer, this.learningRate);\n  }\n\n  gradientDescent(layer: Layers, learningRate: number): void {\n    layer.W = layer.W.subtract(layer.gW.multiply(learningRate));\n    layer.b = layer.b.subtract(layer.b.multiply(learningRate));\n  }\n}\n","import { AbstractOptimizer } from \"./AbstractOptimizer\";\nimport { Layers } from \"../../types\";\n\nexport class OptimizerAdagrad extends AbstractOptimizer {\n  optimize(layer: Layers): void {\n    this.adagrad(layer, this.learningRate);\n  }\n\n  adagrad(layer: Layers, learningRate: number): void {\n    layer.dW = layer.dW.add(layer.gW.pow(2));\n    layer.W = layer.W.subtract(layer.gW.multiply(learningRate).divide(layer.dW.sqrt().add(1e-8)).multiply(layer.gW));\n\n    layer.db = layer.db.add(layer.gb.pow(2));\n    layer.b = layer.b.subtract(layer.db.multiply(learningRate).divide(layer.db.sqrt().add(1e-8)).multiply(layer.gb));\n  }\n}\n","import { AbstractOptimizer } from \"./AbstractOptimizer\";\nimport { Layers } from \"../../types\";\n\nexport class OptimizerMomentum extends AbstractOptimizer {\n  protected beta = 0.9;\n\n  optimize(layer: Layers): void {\n    this.momentum(layer, this.learningRate);\n  }\n\n  setBeta(beta: number): OptimizerMomentum {\n    this.beta = beta;\n    return this;\n  }\n\n  momentum(layer: Layers, learningRate: number): void {\n    layer.vW = layer.gW.multiply(this.beta).add(layer.gW.multiply(1 - this.beta));\n    layer.vb = layer.gb.multiply(this.beta).add(layer.gb.multiply(1 - this.beta));\n\n    layer.W = layer.W.subtract(layer.vW.multiply(learningRate));\n    layer.b = layer.b.subtract(layer.vb.multiply(learningRate));\n  }\n}\n","import { AbstractOptimizer } from \"./AbstractOptimizer\";\nimport { Layers } from \"../../types\";\n\nexport class OptimizerRMSProp extends AbstractOptimizer {\n  protected alpha = 1e-3;\n  protected beta = 0.9;\n\n  setBeta(beta: number): OptimizerRMSProp {\n    this.beta = beta;\n    return this;\n  }\n\n  setAlpha(alpha: number): OptimizerRMSProp {\n    this.alpha = alpha;\n    return this;\n  }\n\n  optimize(layer: Layers): void {\n    this.rmsprop(layer, this.learningRate, this.alpha, this.beta);\n  }\n\n  rmsprop(layer: Layers, learningRate: number, alpha: number, beta: number): void {\n    layer.sW = layer.sW.multiply(beta).add(layer.gW.pow(2).multiply(1 - beta));\n    layer.sb = layer.sb.multiply(beta).add(layer.gb.pow(2).multiply(1 - beta));\n\n    layer.W = layer.W.subtract(layer.gW.multiply(alpha).divide(layer.sW.sqrt().add(1e-8)));\n    layer.b = layer.b.subtract(layer.gb.multiply(alpha).divide(layer.sb.sqrt().add(1e-8)));\n  }\n}\n","import { Network } from \"../Network\";\nimport { AbstractOptimizer } from \"./Optimizer/AbstractOptimizer\";\nimport { Dataset } from \"impulse-dataset-ts/src/typescript/Dataset/Dataset\";\n\nexport interface CostResult {\n  cost: number;\n  accuracy: number;\n}\n\nexport interface StepCallbackParameters {\n  iteration: number;\n}\n\nexport abstract class AbstractTrainer {\n  network: Network | null = null;\n  optimizer: AbstractOptimizer | null = null;\n  regularization = 1e-4;\n  iterations = 1000;\n  learningRate = 0.001;\n  verbose = true;\n  verboseStep = 1;\n  stepCallback = (data: StepCallbackParameters): void => undefined;\n\n  constructor(network: Network, optimizer: AbstractOptimizer) {\n    this.network = network;\n    this.optimizer = optimizer;\n  }\n\n  abstract train(inputDataset: Dataset, outputDataset: Dataset): AbstractTrainer;\n\n  setRegularization(regularization: number): AbstractTrainer {\n    this.regularization = regularization;\n    return this;\n  }\n\n  setIterations(iterations: number): AbstractTrainer {\n    this.iterations = iterations;\n    return this;\n  }\n\n  setLearningRate(learningRate: number): AbstractTrainer {\n    this.learningRate = learningRate;\n    return this;\n  }\n\n  setVerbose(verbose: boolean): AbstractTrainer {\n    this.verbose = verbose;\n    return this;\n  }\n\n  setVerboseStep(verboseStep: number): AbstractTrainer {\n    this.verboseStep = verboseStep;\n    return this;\n  }\n\n  setStepCallback(stepCallback: (data: StepCallbackParameters) => void): AbstractTrainer {\n    this.stepCallback = stepCallback;\n    return this;\n  }\n\n  cost(inputDataset: Dataset, outputDataset: Dataset): CostResult {\n    const numberOfExamples = inputDataset.getNumberOfExamples();\n\n    let accuracy = 0;\n    let penalty = 0;\n\n    this.network.getLayers().forEach((layer) => {\n      penalty += layer.penalty();\n    });\n\n    const predictions = this.network.forward(inputDataset.data);\n    const correctOutput = outputDataset.data;\n\n    /*const error = Y.multiply(predictions.log())\n      .add(Y.minusOne().multiply(predictions.minusOne().log()))\n      .multiply(-1)\n      .sum();*/\n    const error = correctOutput.multiply(predictions.log()).sum();\n    const cost = (-1 / numberOfExamples) * error + this.regularization / (penalty * (2 * inputDataset.data.cols));\n\n    for (let col = 0; col < predictions.cols; col += 1) {\n      const index1 = predictions.colMaxCoeffIndex(col);\n      const index2 = correctOutput.colMaxCoeffIndex(col);\n\n      if (index1 === index2) {\n        accuracy++;\n      }\n    }\n\n    return {\n      cost,\n      accuracy: (accuracy / numberOfExamples) * 100,\n    };\n  }\n}\n","import { AbstractTrainer, CostResult } from \"./AbstractTrainer\";\nimport { Dataset } from \"impulse-dataset-ts/src/typescript/Dataset/Dataset\";\nimport { round } from \"impulse-math-ts\";\n\nexport class MiniBatchTrainer extends AbstractTrainer {\n  batchSize = 100;\n\n  setBatchSize(batchSize: number): MiniBatchTrainer {\n    this.batchSize = batchSize;\n    return this;\n  }\n\n  cost(inputDataset: Dataset, outputDataset: Dataset): CostResult {\n    const batchSize = this.batchSize;\n    const numberOfExamples = inputDataset.getNumberOfExamples();\n    const numBatches = Math.ceil(numberOfExamples / batchSize);\n\n    let cost = 0.0;\n    let accuracy = 0.0;\n\n    // calculate penalty\n    let penalty = 0.0;\n\n    this.network.getLayers().forEach((layer) => {\n      penalty = layer.penalty();\n    });\n\n    const startTime = new Date().getTime();\n    const startIterationTime = new Date().getTime();\n\n    for (let batch = 0, offset = 0; batch < numberOfExamples; batch += this.batchSize, offset += this.batchSize) {\n      const startIterationTime2 = new Date().getTime();\n      const input = inputDataset.getBatch(offset, this.batchSize);\n      const correctOutput = outputDataset.getBatch(offset, this.batchSize);\n      const predictions = this.network.forward(input.data);\n\n      const error = correctOutput.data.multiply(predictions.log()).sum();\n      cost += (-1 / numberOfExamples) * error + this.regularization / (penalty * (2 * inputDataset.data.cols));\n\n      for (let col = 0; col < predictions.cols; col += 1) {\n        const index1 = predictions.colMaxCoeffIndex(col);\n        const index2 = correctOutput.data.colMaxCoeffIndex(col);\n\n        if (index1 === index2) {\n          accuracy++;\n        }\n      }\n    }\n\n    return {\n      cost,\n      accuracy: (accuracy / numberOfExamples) * 100,\n    };\n  }\n\n  train(inputDataset: Dataset, outputDataset: Dataset): MiniBatchTrainer {\n    const numberOfExamples = inputDataset.getNumberOfExamples();\n\n    let t = 0;\n\n    this.optimizer.setBatchSize(this.batchSize);\n    this.optimizer.setLearningRate(this.learningRate);\n\n    for (let i = 0; i < this.iterations; i += 1) {\n      const startTime = new Date().getTime();\n      const startIterationTime = new Date().getTime();\n\n      for (let batch = 0, offset = 0; batch < numberOfExamples; batch += this.batchSize, offset += this.batchSize) {\n        const startIterationTime2 = new Date().getTime();\n        const input = inputDataset.getBatch(offset, this.batchSize);\n        const output = outputDataset.getBatch(offset, this.batchSize);\n        const predictions = this.network.forward(input.data);\n\n        this.network.backward(input.data, output.data, this.regularization);\n\n        this.optimizer.setT(++t);\n\n        this.network.getLayers().forEach((layer) => {\n          this.optimizer.optimize(layer);\n        });\n\n        if (this.verbose) {\n          const cost = this.cost(input, output);\n          const endIterationTime = new Date().getTime();\n          console.log(\n            `Batch: ${offset} / ${numberOfExamples} | Batch time: ${\n              endIterationTime - startIterationTime2\n            }ms | Time from start: ${round((endIterationTime - startIterationTime) / 1000, 1)}s. | Cost: ${round(\n              cost.cost,\n              2\n            )} | Acc: ${cost.accuracy}`\n          );\n        }\n      }\n\n      if (this.verbose) {\n        if ((i + 1) % this.verboseStep === 0) {\n          const endTime = new Date().getTime();\n          const currentResult = this.cost(inputDataset, outputDataset);\n\n          console.log(\n            `Iteration: ${i + 1} | Cost: ${round(currentResult.cost, 5)} | Accuracy: ${\n              currentResult.accuracy\n            }% | Time: ${(endTime - startTime) / 1000} s.`\n          );\n        }\n      }\n\n      this.stepCallback({\n        iteration: i,\n      });\n    }\n\n    return this;\n  }\n}\n","import { AbstractTrainer } from \"./AbstractTrainer\";\nimport { Dataset } from \"impulse-dataset-ts/src/typescript/Dataset/Dataset\";\nimport { round } from \"impulse-math-ts\";\n\nexport class Trainer extends AbstractTrainer {\n  train(inputDataset: Dataset, outputDataset: Dataset): AbstractTrainer {\n    const numberOfExamples = inputDataset.getNumberOfExamples();\n\n    let t = 0;\n\n    this.optimizer.setBatchSize(numberOfExamples);\n    this.optimizer.setLearningRate(this.learningRate);\n\n    for (let i = 0; i < this.iterations; i += 1) {\n      const startTime = new Date().getTime();\n\n      this.network.backward(inputDataset.data, outputDataset.data, this.regularization);\n\n      this.optimizer.setT(++t);\n\n      this.network.getLayers().forEach((layer) => {\n        this.optimizer.optimize(layer);\n      });\n\n      if (this.verbose) {\n        if ((i + 1) % this.verboseStep === 0) {\n          const currentResult = this.cost(inputDataset, outputDataset);\n          const endTime = new Date().getTime();\n\n          console.log(\n            `Iteration: ${i + 1} | Cost: ${round(currentResult.cost, 5)} | Accuracy: ${round(\n              currentResult.accuracy,\n              2\n            )}% | Time: ${(endTime - startTime) / 1000} s.`\n          );\n        }\n      }\n\n      this.stepCallback({\n        iteration: i,\n      });\n    }\n\n    return this;\n  }\n}\n","import { NetworkRNN } from \"../Network\";\nimport { DatasetVocabulary } from \"impulse-dataset-ts/src/typescript/Dataset/DatasetVocabulary\";\nimport { Matrix } from \"impulse-math-ts\";\n\nexport class RNNTrainer {\n  protected network: NetworkRNN | null = null;\n  protected iterations: number = 1000;\n  protected learningRate: number = 0.01;\n\n  constructor(network: NetworkRNN) {\n    this.network = network;\n  }\n\n  train(dataset: DatasetVocabulary): [number] {\n    let loss = this.network.loss(dataset.getVocabularySize(), 7);\n\n    const [X, Y] = dataset.buildData(100);\n    const [x, y] = dataset.vectorization(X, Y);\n\n    let aPrev = new Matrix(this.network.getDimensions()[0], this.network.getDimensions()[0]).setZeros();\n\n    for (let iteration = 0; iteration < this.iterations; iteration += 1) {\n      const index = iteration % x.length;\n      const [_loss] = this.network.forward(x[index], y, aPrev);\n      loss = _loss;\n      const [currentLoss, _aPrev] = this.network.optimize(x[index], y, aPrev, this.learningRate);\n      aPrev = _aPrev;\n      loss = loss * 0.999 + currentLoss * 0.001;\n      console.log(`Iteration ${iteration + 1} | Loss: ${loss} | Sample: ${this.network.sample(dataset).trim()}`);\n    }\n    return [loss];\n  }\n\n  setIterations(num: number): RNNTrainer {\n    this.iterations = num;\n    return this;\n  }\n\n  setLearningRate(num: number): RNNTrainer {\n    this.learningRate = num;\n    return this;\n  }\n}\n","import { NetworkBuilder1D, NetworkBuilder3D } from \"./NetworkBuilder\";\nimport {\n  SoftmaxLayer,\n  LogisticLayer,\n  ReluLayer,\n  SoftplusLayer,\n  TanhLayer,\n  ConvLayer,\n  FullyConnectedLayer,\n  MaxPoolLayer,\n  RecurrentLayer,\n  LSTMLayer,\n} from \"./Layer\";\nimport { Matrix } from \"impulse-math-ts\";\nimport {\n  OptimizerAdam,\n  OptimizerGradientDescent,\n  OptimizerAdagrad,\n  OptimizerMomentum,\n  OptimizerRMSProp,\n} from \"./Trainer/Optimizer\";\nimport { MiniBatchTrainer, Trainer as TrainerTrainer, RNNTrainer } from \"./Trainer\";\nimport { NetworkRNN } from \"./Network\";\n\nconst NetworkBuilder = { NetworkBuilder1D, NetworkBuilder3D };\nconst Math = {\n  Matrix,\n};\nconst Layer = {\n  SoftmaxLayer,\n  LogisticLayer,\n  ReluLayer,\n  SoftplusLayer,\n  TanhLayer,\n  ConvLayer,\n  MaxPoolLayer,\n  FullyConnectedLayer,\n  RecurrentLayer,\n  LSTMLayer,\n};\nconst Optimizer = {\n  OptimizerAdam,\n  OptimizerGradientDescent,\n  OptimizerAdagrad,\n  OptimizerMomentum,\n  OptimizerRMSProp,\n};\nconst Trainer = {\n  MiniBatchTrainer,\n  Trainer: TrainerTrainer,\n  RNNTrainer,\n};\nconst Network = {\n  NetworkRNN,\n};\n\nexport { NetworkBuilder, Math, Layer, Optimizer, Trainer, Network };\n"],"names":["r","d","t","o","e","Object","defineProperty","enumerable","get","prototype","hasOwnProperty","call","Symbol","toStringTag","value","iterator","constructor","n","toPrimitive","TypeError","String","ComputationCPU","W","ComputationGPU","f","Matrix","H","getComputation","Z","im2col","J","maxpool","Q","round","V","setComputation","I","a","this","configurable","writable","key","kernels","Error","concat","arguments","length","Array","apply","s","i","setPrototypeOf","bind","__proto__","c","ReferenceError","u","getPrototypeOf","create","Reflect","construct","sham","Proxy","Boolean","valueOf","l","h","v","w","rows","cols","data","y","p","Math","exp","from","m","log","_","P","C","q","sum","b","multiply","minusOne","k","g","max","O","S","M","pow","x","sqrt","j","E","K","random","R","T","A","D","N","B","addKernel","L","z","F","U","$","G","resize","generateData","test","Number","transpose","push","execute","add","fraction","abs","min","shape","subtract","divide","rowwiseSum","replicate","setZeros","module","exports","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","definition","obj","prop","require","Network","dimensions","layer","size","layers","input","output","forEach","forward","X","Y","regularization","sigma","getBackPropagation","propagate","derivative","path","resultJSON","type","getType","getSize","weights","result","JSON","stringify","Promise","resolve","reject","fs","err","console","error","LayerType","NetworkRNN","vocabularySize","sequenceLength","dataset","Waa","Wax","Wya","by","indices","charIndices","getCharIndices","newLineCharacter","chars","getChars","aPrev","setRandom","idx","counter","dot","setMin","tanh","softmax","colMaxCoeffIndex","maxIndex","floor","map","join","a0","yHat","loss","_a","_yHat","_dWax","_dWaa","_dWya","_db","db","_dby","dby","_daNext","daNext","dy","backward","dWax","dWya","dWaa","setMax","learningRate","getDimensions","AbstractBackPropagation","previousLayer","Backpropagation1Dto1D","numberOfExamples","previousActivations","delta","gW","gb","Backpropagation3Dto1D","BackpropagationToMaxPool","prevLayer","filterSize","getFilterSize","stride","getStride","inputWidth","getWidth","inputHeight","getHeight","outputWidth","getDepth","getOutputWidth","outputHeight","getOutputHeight","outputDepth","getOutputDepth","horizStart","_max","inputOffset","outputOffset","maxX","maxY","vStart","hStart","BackpropagationToConv","padding","getPadding","inputDepth","tmpResult","vertStart","vertical","verticalPad","horizontal","horizontalPad","BackpropagationFactory","is1D","conv","fullyconnected","NetworkLSTM","tX","nY","Wy","nA","aNext","cNext","dataInput","row","da","tx","x1","AbstractNetworkBuilder","dimension","network","layerClass","callback","lastLayer","firstLayerTransition","transition","configure","setBackPropagation","addLayer","AbstractLayer","backPropagation","width","height","depth","AbstractLayer1D","vW","vb","sW","sb","dW","activation","setWidth","is3D","setHeight","SoftmaxLayer","LogisticLayer","logistic","TanhLayer","ReluLayer","relu","SoftplusLayer","softplus","AbstractLayer3D","setSize","setDepth","ConvLayer","numFilters","col","tmp","setCol","rollToColMatrix","FullyConnectedLayer","MaxPoolLayer","pool","RecurrentLayer","dTanh","rnnlayer","LSTMLayer","cPrev","nx","na","ft","Wf","bf","sigmoid","it","Wi","bi","cct","Wc","bc","Wo","bo","dcNext","NetworkBuilder1D","jsonPath","json","parse","toString","builder","layerData","createLayer","getNetwork","getLayers","NetworkBuilder3D","setFilterSize","setStride","setNumFilters","setPadding","AbstractOptimizer","batchSize","OptimizerAdam","beta1","beta2","adam","vWCorrected","vbCorrected","sWCorrected","sbCorrected","OptimizerGradientDescent","gradientDescent","OptimizerAdagrad","adagrad","OptimizerMomentum","momentum","beta","OptimizerRMSProp","alpha","rmsprop","AbstractTrainer","optimizer","iterations","verbose","verboseStep","stepCallback","inputDataset","outputDataset","getNumberOfExamples","accuracy","penalty","predictions","correctOutput","cost","MiniBatchTrainer","ceil","Date","getTime","batch","offset","getBatch","setBatchSize","setLearningRate","startTime","startIterationTime","startIterationTime2","setT","optimize","endIterationTime","endTime","currentResult","iteration","Trainer","RNNTrainer","getVocabularySize","buildData","vectorization","index","currentLoss","sample","trim","num","NetworkBuilder","Layer","Optimizer","TrainerTrainer"],"sourceRoot":""}