{"version":3,"file":"impulse-ts.js","mappings":"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","sources":["webpack://impulse-ts/./build/Debug/impulseTsToolkit.node","webpack://impulse-ts/external \"path\"","webpack://impulse-ts/webpack/bootstrap","webpack://impulse-ts/webpack/runtime/define property getters","webpack://impulse-ts/webpack/runtime/hasOwnProperty shorthand","webpack://impulse-ts/webpack/runtime/make namespace object","webpack://impulse-ts/webpack/runtime/node module decorator","webpack://impulse-ts/webpack/runtime/publicPath","webpack://impulse-ts/./src/typescript/math/matrix.tsx","webpack://impulse-ts/external \"fs\"","webpack://impulse-ts/./src/typescript/network.tsx","webpack://impulse-ts/./src/typescript/builder/builder1d.tsx","webpack://impulse-ts/./src/typescript/builder/abstract.tsx","webpack://impulse-ts/./src/typescript/types.tsx","webpack://impulse-ts/./src/typescript/layer/abstract.tsx","webpack://impulse-ts/./src/typescript/layer/abstract1d.tsx","webpack://impulse-ts/./src/typescript/layer/softmax.tsx","webpack://impulse-ts/./src/typescript/layer/logistic.tsx"],"sourcesContent":["\ntry {\n  process.dlopen(module, __dirname + require(\"path\").sep + __webpack_public_path__ + \"94433ce4ed96aed2b359e8825ae71e40.node\");\n} catch (error) {\n  throw new Error('node-loader:\\n' + error);\n}\n","module.exports = require(\"path\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = (module) => {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","__webpack_require__.p = \"\";","import {\n  MatrixMultiply,\n  MatrixElementWiseAdd,\n  MatrixElementWiseSubtract,\n  MatrixElementWiseMultiply,\n  MatrixElementWiseDivide,\n  MatrixSum,\n  MatrixFillRandom,\n  SoftmaxActivation,\n  SoftmaxLoss,\n  LogisticActivation,\n  LogisticDerivative,\n  LogisticLoss,\n} from \"impulseTsToolkit\";\nimport { Buffer } from \"buffer\";\n\nexport class Matrix {\n  public rows = 0;\n  public cols = 0;\n  public data = null;\n\n  constructor(rows = 0, cols = 0, data = new Array(rows * cols)) {\n    this.resize(rows, cols);\n    this.generateData(data);\n  }\n\n  resize(rows, cols): Matrix {\n    this.rows = rows;\n    this.cols = cols;\n\n    return this;\n  }\n\n  generateData(arr: Array<number> = new Array()): Matrix {\n    this.data = Float64Array.from(arr);\n    return this;\n  }\n\n  toBuffer(): ArrayBuffer {\n    const result = new ArrayBuffer(this.rows * this.cols * 64);\n    const view = new DataView(result, 0, this.rows * this.cols * 64);\n    this.data.forEach((num, i) => {\n      view.setFloat64(i, num);\n    })\n    return result;\n  }\n}\n\nexport const multiply = (m1: Matrix, m2: Matrix): Matrix => {\n  if (m1.cols !== m2.rows) {\n    throw new Error(\"DIMENSIONS error.\");\n  }\n\n  return new Matrix(m1.rows, m2.cols, Array.from(MatrixMultiply(\n      m1.toBuffer(),\n      m1.rows,\n      m1.cols,\n      m2.toBuffer(),\n      m2.rows,\n      m2.cols\n  )));\n};\n\nexport const elementWiseAdd = (m1: Matrix, m2: Matrix): Matrix => {\n  if (m1.rows !== m2.rows) {\n    throw new Error(\"ROWS number not equal.\");\n  }\n  if (m1.cols !== m2.cols) {\n    throw new Error(\"COLS number not equal.\");\n  }\n\n  const result = new Matrix(m1.rows, m2.cols, Array.from(MatrixElementWiseAdd(\n      m1.toBuffer(),\n      m1.rows,\n      m1.cols,\n      m2.toBuffer(),\n      m2.rows,\n      m2.cols\n  )));\n\n  return result;\n};\n\nexport const elementWiseSubtract = (m1: Matrix, m2: Matrix): Matrix => {\n  if (m1.rows !== m2.rows) {\n    throw new Error(\"ROWS number not equal.\");\n  }\n  if (m1.cols !== m2.cols) {\n    throw new Error(\"COLS number not equal.\");\n  }\n\n  const data = new Uint8Array(MatrixElementWiseSubtract(\n      m1.toBuffer(),\n      m1.rows,\n      m1.cols,\n      m2.toBuffer(),\n      m2.rows,\n      m2.cols\n  ), 0, m1.rows * m1.cols);\n  const result = new Matrix(m1.rows, m2.cols, Array.from(data));\n\n  return result;\n};\n\nexport const resize = (m1: Matrix, rows: number, cols: number): void => {\n  m1.resize(rows, cols);\n};\n\nexport const fillRandom = (m1: Matrix, parameter: number): Matrix => {\n  const result = new Matrix(m1.rows, m1.cols, Array.from(MatrixFillRandom(\n      m1.rows,\n      m1.cols,\n      parameter\n  )));\n  return result;\n};\n\nexport const elementWiseMultiply = (m1: Matrix, m2: Matrix): Matrix => {\n  if (m1.rows !== m2.rows) {\n    throw new Error(\"ROWS number not equal.\");\n  }\n  if (m1.cols !== m2.cols) {\n    throw new Error(\"COLS number not equal.\");\n  }\n\n  const data = new Uint8Array(MatrixElementWiseMultiply(\n      m1.toBuffer(),\n      m1.rows,\n      m1.cols,\n      m2.toBuffer(),\n      m2.rows,\n      m2.cols\n  ), 0, m1.rows * m1.cols);\n  const result = new Matrix(m1.rows, m2.cols, Array.from(data));\n\n  return result;\n};\n\nexport const sum = (m: Matrix): number => {\n  return MatrixSum(m.toBuffer(), m.rows, m.cols);\n};\n\nexport const cols = (m: Matrix): number => {\n  return m.cols;\n};\n\nexport const elementWiseDivide = (m1: Matrix, m2: Matrix): Matrix => {\n  if (m1.rows !== m2.rows) {\n    throw new Error(\"ROWS number not equal.\");\n  }\n  if (m1.cols !== m2.cols) {\n    throw new Error(\"COLS number not equal.\");\n  }\n  const data = new Uint8Array(MatrixElementWiseDivide(\n      m1.toBuffer(),\n      m1.rows,\n      m1.cols,\n      m2.toBuffer(),\n      m2.rows,\n      m2.cols\n  ), 0, m1.rows * m1.cols);\n  const result = new Matrix(m1.rows, m2.cols, Array.from(data));\n\n  return result;\n};\n\nexport const softmaxActivation = (m: Matrix): Matrix => {\n  const result = new Matrix(m.rows, m.cols);\n  result.data = SoftmaxActivation(m.data, m.rows, m.cols);\n  return result;\n};\n\nexport const softmaxLoss = (m1: Matrix, m2: Matrix): number => {\n  const result = new Matrix(m1.rows, m1.cols);\n  result.data = SoftmaxLoss(\n    m1.data,\n    m1.rows,\n    m1.cols,\n    m2.data,\n    m2.rows,\n    m2.cols\n  );\n  return MatrixSum(result, result.rows, result.cols);\n};\n\nexport const logisticActivation = (m: Matrix): Matrix => {\n  const result = new Matrix(m.rows, m.cols);\n  result.data = LogisticActivation(m.data, m.rows, m.cols);\n  return result;\n};\n\nexport const logisticDerivative = (m: Matrix): Matrix => {\n  const result = new Matrix(m.rows, m.cols);\n  result.data = LogisticDerivative(m, m.rows, m.cols);\n  return result;\n};\n\nexport const logisticLoss = (m1: Matrix, m2: Matrix): number => {\n  const result = new Matrix(m1.rows, m1.cols);\n  result.data = LogisticLoss(\n    m1.data,\n    m1.rows,\n    m1.cols,\n    m2.data,\n    m2.rows,\n    m2.cols\n  );\n  return MatrixSum(result, result.rows, result.cols);\n};\n","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"fs\");","import { Dimension, Layers } from \"./types\";\nimport { cols, Matrix, elementWiseSubtract } from \"./math/matrix\";\nimport * as fs from \"fs\";\n\nclass Network {\n  private dimensions: Dimension = null;\n  private size: number = 0;\n  private layers: Layers[] = [];\n\n  constructor(dimensions: Dimension) {\n    this.dimensions = dimensions;\n  }\n\n  addLayer(layer: Layers) {\n    this.size++;\n    this.layers.push(layer);\n  }\n\n  forward(input: Matrix): Matrix {\n    let output = input;\n\n    this.layers.forEach((layer: Layers) => {\n      output = layer.forward(output);\n    });\n\n    return output;\n  }\n\n  backward(X: Matrix, Y: Matrix, predictions: Matrix, regularization: number) {\n    const m = cols(X);\n\n    let delta = elementWiseSubtract(predictions, Y);\n\n    this.layers.reverse().forEach((layer) => {\n      // delta = layer.backpropagation.propagate(X, m, regularization, delta)\n    });\n  }\n\n  save(path: string): Promise<string> {\n    const resultJSON = {\n      dimensions: this.dimensions,\n      layers: [],\n    };\n\n    this.layers.forEach((layer: Layers) => {\n      resultJSON.layers.push({\n        type: layer.getType(),\n        dimensions: [\n          layer.getOutputHeight(),\n          layer.getOutputWidth(),\n          layer.getOutputDepth(),\n        ],\n        weights: {\n          W: layer.W.data,\n          b: layer.b.data,\n        },\n      });\n    });\n\n    const result = JSON.stringify(resultJSON);\n\n    return new Promise((resolve, reject) => {\n      fs.writeFile(path, result, (err) => {\n        if (err) {\n          console.error(err);\n          reject();\n        }\n        resolve(result);\n      });\n    });\n  }\n}\n\nexport { Network };\nexport default Network;\n","import { AbstractBuilder } from \"./abstract\";\nimport { Layers } from \"../types\";\n\nclass Builder1D extends AbstractBuilder {\n  firstLayerTransition(layer: Layers) {\n    layer.setWidth(this.dimensions[0]);\n  }\n}\n\nexport { Builder1D };\nexport default Builder1D;\n","import { Dimension, Layers } from \"../types\";\nimport Network from \"../network\";\n\nabstract class AbstractBuilder {\n  protected dimensions: Dimension = null;\n  protected previousLayer: Layers = null;\n  protected network: Network = null;\n\n  constructor(dimension: Dimension) {\n    this.dimensions = dimension;\n    this.network = new Network(dimension);\n  }\n\n  createLayer(type: Layers, callback: Function) {\n    const layer = new type();\n\n    if (typeof callback === \"function\") {\n      callback(layer);\n    }\n\n    if (this.previousLayer === null) {\n      this.firstLayerTransition(layer);\n    } else {\n      layer.transition(this.previousLayer);\n    }\n\n    layer.configure();\n\n    this.network.addLayer(layer);\n    this.previousLayer = layer;\n  }\n\n  getNetwork(): Network {\n    return this.network;\n  }\n\n  abstract firstLayerTransition(layer: Layers);\n}\n\nexport { AbstractBuilder };\nexport default AbstractBuilder;\n","import { SoftmaxLayer, LogisticLayer } from \"./layer\";\n\nexport type Dimension = [number] | [number, number, number];\n\nexport enum LayerType {\n  logistic = \"logistic\",\n  softmax = \"softmax\",\n}\n\nexport type Layers = LogisticLayer | SoftmaxLayer;\nexport type Layers1D = LogisticLayer | SoftmaxLayer;\nexport type Layers2D = null;\n","import { elementWiseAdd, Matrix, multiply } from \"../math/matrix\";\nimport { Dimension, Layers } from \"../types\";\n\nabstract class AbstractLayer {\n  public W: Matrix;\n  public b: Matrix;\n  public A: Matrix;\n  public Z: Matrix;\n  public gW: Matrix;\n  public gb: Matrix;\n\n  protected width: number = 0;\n  protected height: number = 0;\n  protected depth: number = 0;\n  protected previousLayer: Layers = null;\n\n  constructor() {\n    this.W = new Matrix();\n    this.b = new Matrix();\n    this.A = new Matrix();\n    this.Z = new Matrix();\n    this.gW = new Matrix();\n    this.gb = new Matrix();\n  }\n\n  forward(input: Matrix): Matrix {\n    this.Z = elementWiseAdd(multiply(this.W, input), this.b);\n    this.A = this.activation(this.Z);\n    return this.A;\n  }\n\n  setWidth(value: number) {\n    this.width = value;\n  }\n\n  getWidth(): number {\n    return this.width;\n  }\n\n  setHeight(value: number) {\n    this.height = value;\n  }\n\n  getHeight(): number {\n    return this.height;\n  }\n\n  setDepth(value: number) {\n    this.depth = value;\n  }\n\n  getDepth(): number {\n    return this.depth;\n  }\n\n  abstract getOutputWidth();\n\n  abstract getOutputHeight();\n\n  abstract getOutputDepth();\n\n  abstract configure();\n\n  abstract is1D(): boolean;\n\n  abstract is3D(): boolean;\n\n  abstract transition(previousLayer: Layers);\n\n  abstract setSize(dimension: Dimension);\n\n  abstract getSize();\n\n  abstract activation(value: Matrix): Matrix;\n\n  abstract derivative(value: Matrix): Matrix;\n\n  abstract getType();\n\n  abstract loss(output: Matrix, predictions: Matrix): number;\n\n  abstract error(m: number): number;\n}\n\nexport { AbstractLayer };\n","import { AbstractLayer } from \"./abstract\";\nimport { fillRandom, resize } from \"../math/matrix\";\nimport { Dimension, Layers } from \"../types\";\n\nabstract class AbstractLayer1D extends AbstractLayer {\n  protected depth: number = 1;\n\n  configure() {\n    resize(this.W, this.height, this.width);\n    fillRandom(this.W, this.width);\n\n    resize(this.b, this.height, 1);\n    fillRandom(this.b, this.width);\n\n    resize(this.gW, this.height, this.width);\n    resize(this.gb, this.height, 1);\n  }\n\n  is1D(): boolean {\n    return true;\n  }\n\n  is3D(): boolean {\n    return false;\n  }\n\n  transition(previousLayer: Layers) {\n    if (previousLayer.is1D()) {\n      this.setWidth(previousLayer.getSize());\n    } else if (previousLayer.is3D()) {\n      this.setWidth(\n        previousLayer.getOutputWidth() *\n          previousLayer.getOutputHeight() *\n          previousLayer.getOutputDepth()\n      );\n    }\n  }\n\n  setSize(value: Dimension) {\n    this.setHeight(value[0]);\n  }\n\n  getSize(): number {\n    return this.height;\n  }\n\n  getOutputWidth() {\n    return this.width;\n  }\n\n  getOutputHeight() {\n    return this.height;\n  }\n\n  getOutputDepth() {\n    return 1;\n  }\n}\n\nexport { AbstractLayer1D };\n","import { Matrix, softmaxActivation, softmaxLoss } from \"../math/matrix\";\nimport { LayerType } from \"../types\";\nimport { AbstractLayer1D } from \"./abstract1d\";\n\nclass SoftmaxLayer extends AbstractLayer1D {\n  activation(m: Matrix): Matrix {\n    return softmaxActivation(m);\n  }\n\n  derivative(): Matrix {\n    throw new Error(\"Unsupported usage.\");\n  }\n\n  getType(): LayerType {\n    return LayerType.softmax;\n  }\n\n  loss(output: Matrix, predictions: Matrix): number {\n    return softmaxLoss(output, predictions);\n  }\n\n  error(m: number): number {\n    return -1.0 / m;\n  }\n}\n\nexport { SoftmaxLayer };\n","import {\n  logisticActivation,\n  logisticDerivative,\n  Matrix,\n  logisticLoss,\n} from \"../math/matrix\";\nimport { LayerType } from \"../types\";\nimport { AbstractLayer1D } from \"./abstract1d\";\n\nclass LogisticLayer extends AbstractLayer1D {\n  activation(m: Matrix): Matrix {\n    return logisticActivation(m);\n  }\n\n  derivative(): Matrix {\n    return logisticDerivative(this.A);\n  }\n\n  getType(): LayerType {\n    return LayerType.logistic;\n  }\n\n  loss(output: Matrix, predictions: Matrix): number {\n    return logisticLoss(output, predictions);\n  }\n\n  error(m: number): number {\n    return -1.0 / m;\n  }\n}\n\nexport { LogisticLayer };\n"],"names":["process","dlopen","module","__dirname","error","Error","exports","require","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","id","loaded","__webpack_modules__","d","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","r","Symbol","toStringTag","value","nmd","paths","children","p","Matrix","rows","cols","data","Array","this","resize","generateData","arr","Float64Array","from","result","ArrayBuffer","view","DataView","forEach","num","i","setFloat64","multiply","m1","m2","MatrixMultiply","toBuffer","elementWiseAdd","MatrixElementWiseAdd","elementWiseSubtract","Uint8Array","MatrixElementWiseSubtract","fillRandom","parameter","MatrixFillRandom","elementWiseMultiply","MatrixElementWiseMultiply","sum","m","MatrixSum","elementWiseDivide","MatrixElementWiseDivide","Network","dimensions","layer","size","layers","push","input","output","forward","X","Y","predictions","regularization","reverse","path","resultJSON","type","getType","getOutputHeight","getOutputWidth","getOutputDepth","weights","W","b","JSON","stringify","Promise","resolve","reject","fs","err","console","Builder1D","setWidth","AbstractBuilder","dimension","network","callback","previousLayer","firstLayerTransition","transition","configure","addLayer","LayerType","AbstractLayer","A","Z","gW","gb","activation","width","height","depth","AbstractLayer1D","is1D","getSize","is3D","setHeight","SoftmaxLayer","SoftmaxActivation","softmaxActivation","softmax","SoftmaxLoss","LogisticLayer","LogisticActivation","logisticActivation","LogisticDerivative","logistic","LogisticLoss"],"sourceRoot":""}