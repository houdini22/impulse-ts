{"version":3,"file":"impulse-ts.dev.js","mappings":"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","sources":["webpack://impulse-ts/./src/typescript/builder/abstract.tsx","webpack://impulse-ts/./src/typescript/builder/builder1d.tsx","webpack://impulse-ts/./src/typescript/dataset/Dataset.tsx","webpack://impulse-ts/./src/typescript/dataset/DatasetBuilder.tsx","webpack://impulse-ts/./src/typescript/layer/abstract.tsx","webpack://impulse-ts/./src/typescript/layer/abstract1d.tsx","webpack://impulse-ts/./src/typescript/layer/backpropagation/abstract.tsx","webpack://impulse-ts/./src/typescript/layer/backpropagation/backpropagation1dto1d.tsx","webpack://impulse-ts/./src/typescript/layer/index.tsx","webpack://impulse-ts/./src/typescript/layer/logistic.tsx","webpack://impulse-ts/./src/typescript/layer/relu.tsx","webpack://impulse-ts/./src/typescript/layer/softmax.tsx","webpack://impulse-ts/./src/typescript/layer/softplus.tsx","webpack://impulse-ts/./src/typescript/layer/tanh.tsx","webpack://impulse-ts/./src/typescript/math/matrix.tsx","webpack://impulse-ts/./src/typescript/network.tsx","webpack://impulse-ts/./src/typescript/trainer/abstract.tsx","webpack://impulse-ts/./src/typescript/trainer/minibatch.tsx","webpack://impulse-ts/./src/typescript/trainer/optimizer/abstract.tsx","webpack://impulse-ts/./src/typescript/trainer/optimizer/adam.tsx","webpack://impulse-ts/./src/typescript/trainer/optimizer/gradientdescent.tsx","webpack://impulse-ts/./src/typescript/types.tsx","webpack://impulse-ts/external \"csvtojson\"","webpack://impulse-ts/external \"fs\"","webpack://impulse-ts/external \"gpu.js\"","webpack://impulse-ts/webpack/bootstrap","webpack://impulse-ts/webpack/runtime/compat get default export","webpack://impulse-ts/webpack/runtime/define property getters","webpack://impulse-ts/webpack/runtime/hasOwnProperty shorthand","webpack://impulse-ts/webpack/runtime/make namespace object","webpack://impulse-ts/./src/typescript/main.tsx"],"sourcesContent":["import { Dimension, Layers } from \"../types\";\nimport Network from \"../network\";\n\nabstract class AbstractBuilder {\n  protected dimensions: Dimension = null;\n  protected lastLayer: Layers = null;\n  protected network: Network = null;\n\n  constructor(dimension: Dimension) {\n    this.dimensions = dimension;\n    this.network = new Network(dimension);\n  }\n\n  createLayer(type: Layers, callback: Function) {\n    // @ts-ignore\n    const layer = new type();\n\n    if (typeof callback === \"function\") {\n      callback(layer);\n    }\n\n    if (this.lastLayer === null) {\n      this.firstLayerTransition(layer);\n    } else {\n      layer.transition(this.lastLayer);\n    }\n\n    layer.configure();\n\n    this.network.addLayer(layer);\n    this.lastLayer = layer;\n  }\n\n  getNetwork(): Network {\n    return this.network;\n  }\n\n  abstract firstLayerTransition(layer: Layers);\n}\n\nexport { AbstractBuilder };\nexport default AbstractBuilder;\n","import { AbstractBuilder } from \"./abstract\";\nimport { Layers } from \"../types\";\nimport Network from \"../network\";\nimport * as fs from \"fs\";\nimport {\n  LogisticLayer,\n  ReluLayer,\n  SoftmaxLayer,\n  SoftplusLayer,\n  TanhLayer,\n} from \"../layer/index\";\n\nclass Builder1D extends AbstractBuilder {\n  firstLayerTransition(layer: Layers) {\n    layer.setWidth(this.dimensions[0]);\n  }\n\n  static fromJSON(jsonPath: string): Promise<Network> {\n    return new Promise((resolve, reject) => {\n      fs.readFile(jsonPath, (err, data) => {\n        if (err) {\n          reject(err);\n          return;\n        }\n        const json = JSON.parse(data.toString());\n\n        const builder = new Builder1D(json[\"dimensions\"]);\n\n        json[\"layers\"].forEach((layerData) => {\n          let layerClass = null;\n\n          if (layerData[\"type\"] === \"logistic\") {\n            layerClass = LogisticLayer;\n          } else if (layerData[\"type\"] === \"softmax\") {\n            layerClass = SoftmaxLayer;\n          } else if (layerData[\"type\"] === \"relu\") {\n            layerClass = ReluLayer;\n          } else if (layerData[\"type\"] === \"softplus\") {\n            layerClass = SoftplusLayer;\n          } else if (layerData[\"type\"] === \"tanh\") {\n            layerClass = TanhLayer;\n          }\n\n          builder.createLayer(layerClass, (layer) => {\n            layer.setSize(layerData[\"dimensions\"]);\n          });\n        });\n\n        const network = builder.getNetwork();\n\n        network.getLayers().forEach((layer, i) => {\n          layer.W = json[\"layers\"][\"W\"];\n          layer.b = json[\"layers\"][\"b\"];\n        });\n\n        resolve(network);\n      });\n    });\n  }\n}\n\nexport { Builder1D };\nexport default Builder1D;\n","import { Matrix } from \"../math/matrix\";\n\nexport class Dataset {\n  public exampleSize: number = 0;\n  public numberOfExamples: number = 0;\n  public data: Matrix = null;\n\n  constructor(exampleSize: number, numberOfExamples: number, arr: number[][]) {\n    this.exampleSize = exampleSize;\n    this.numberOfExamples = numberOfExamples;\n    const data = [];\n\n    for (let example = 0; example < numberOfExamples; example += 1) {\n      data[example] = [];\n      for (let dataIndex = 0; dataIndex < exampleSize; dataIndex += 1) {\n        data[example][dataIndex] = Number(arr[example][dataIndex] || 0);\n      }\n    }\n\n    this.data = new Matrix(this.exampleSize, this.numberOfExamples, data);\n  }\n\n  exampleAt(index: number): Matrix {\n    const data = [];\n    for (let dataIndex = 0; dataIndex < this.exampleSize; dataIndex += 1) {\n      data[dataIndex] = [];\n      data[dataIndex][0] = this.data.data[index][dataIndex];\n    }\n\n    return new Matrix(this.exampleSize, 1, data);\n  }\n\n  getNumberOfExamples(): number {\n    return this.numberOfExamples;\n  }\n\n  getBatch(offset: number, batchSize: number): Matrix {\n    return this.data.block(0, offset, this.data.rows, batchSize);\n  }\n}\n","import * as csvtojson from \"csvtojson\";\nimport { Dataset } from \"./Dataset\";\n\nexport class DatasetBuilder {\n  static fromCSV(csvPath: string): Promise<Dataset> {\n    return new Promise((resolve) => {\n      csvtojson({\n        noheader: true,\n        output: \"csv\",\n      })\n        .fromFile(csvPath)\n        .then((arr) => {\n          const numberOfExamples = arr.length;\n          const exampleSize = arr[0].length;\n\n          const dataset = new Dataset(exampleSize, numberOfExamples, arr);\n          resolve(dataset);\n        });\n    });\n  }\n}\n","import { elementWiseAdd, Matrix, multiply, penalty } from \"../math/matrix\";\nimport { Dimension, Layers } from \"../types\";\nimport { AbstractBackPropagation } from \"./backpropagation/abstract\";\n\nabstract class AbstractLayer {\n  public W: Matrix;\n  public b: Matrix;\n  public A: Matrix;\n  public Z: Matrix;\n  public gW: Matrix;\n  public gb: Matrix;\n  public vW: Matrix;\n  public cW: Matrix;\n  public vB: Matrix;\n  public cB: Matrix;\n\n  protected width: number = 0;\n  protected height: number = 0;\n  protected depth: number = 0;\n  protected previousLayer: Layers = null;\n  protected backPropagation: AbstractBackPropagation = null;\n\n  constructor() {\n    this.W = new Matrix();\n    this.b = new Matrix();\n    this.A = new Matrix();\n    this.Z = new Matrix();\n    this.gW = new Matrix();\n    this.gb = new Matrix();\n    this.vW = new Matrix();\n    this.cW = new Matrix();\n    this.vB = new Matrix();\n    this.cB = new Matrix();\n  }\n\n  getBackPropagation(): AbstractBackPropagation {\n    return this.backPropagation;\n  }\n\n  forward(input: Matrix): Matrix {\n    this.Z = elementWiseAdd(\n      multiply(this.W, input),\n      this.b.replicate(1, input.cols)\n    );\n    this.A = this.activation(this.Z);\n    return this.A;\n  }\n\n  setWidth(value: number) {\n    this.width = value;\n  }\n\n  getWidth(): number {\n    return this.width;\n  }\n\n  setHeight(value: number) {\n    this.height = value;\n  }\n\n  getHeight(): number {\n    return this.height;\n  }\n\n  setDepth(value: number) {\n    this.depth = value;\n  }\n\n  getDepth(): number {\n    return this.depth;\n  }\n\n  abstract getOutputWidth();\n\n  abstract getOutputHeight();\n\n  abstract getOutputDepth();\n\n  abstract configure();\n\n  abstract is1D(): boolean;\n\n  abstract is3D(): boolean;\n\n  transition(previousLayer: Layers): void {\n    this.previousLayer = previousLayer;\n  }\n\n  abstract setSize(dimension: Dimension);\n\n  abstract getSize();\n\n  abstract activation(value: Matrix): Matrix;\n\n  abstract derivative(value: Matrix): Matrix;\n\n  abstract getType();\n\n  abstract loss(output: Matrix, predictions: Matrix): number;\n\n  abstract error(m: number): number;\n\n  penalty(): number {\n    return penalty(this.W);\n  }\n}\n\nexport { AbstractLayer };\n","import { AbstractLayer } from \"./abstract\";\nimport { fillRandom, setZeros } from \"../math/matrix\";\nimport { Dimension, Layers } from \"../types\";\nimport { Backpropagation1Dto1D } from \"./backpropagation/backpropagation1dto1d\";\n\nabstract class AbstractLayer1D extends AbstractLayer {\n  protected depth: number = 1;\n\n  configure() {\n    this.W.resize(this.height, this.width);\n    this.W = fillRandom(this.W, this.width);\n\n    this.b.resize(this.height, 1);\n    this.b = fillRandom(this.b, this.width);\n\n    this.gW.resize(this.height, this.width);\n    this.gW = setZeros(this.gW);\n\n    this.gb.resize(this.height, 1);\n    this.gb = setZeros(this.gb);\n\n    this.cW.resize(this.height, this.width);\n    this.cW = setZeros(this.cW);\n\n    this.cB.resize(this.height, 1);\n    this.cB = setZeros(this.cB);\n\n    this.vW.resize(this.height, this.width);\n    this.vW = setZeros(this.vW);\n\n    this.vB.resize(this.height, 1);\n    this.vB = setZeros(this.cB);\n\n    this.backPropagation = new Backpropagation1Dto1D(this, this.previousLayer);\n  }\n\n  is1D(): boolean {\n    return true;\n  }\n\n  is3D(): boolean {\n    return false;\n  }\n\n  transition(previousLayer: Layers) {\n    if (previousLayer.is1D()) {\n      this.setWidth(previousLayer.getSize());\n    } else if (previousLayer.is3D()) {\n      this.setWidth(\n        previousLayer.getOutputWidth() *\n          previousLayer.getOutputHeight() *\n          previousLayer.getOutputDepth()\n      );\n    }\n\n    super.transition(previousLayer);\n  }\n\n  setSize(value: Dimension) {\n    this.setHeight(value[0]);\n  }\n\n  getSize(): number {\n    return this.height;\n  }\n\n  getOutputWidth() {\n    return this.width;\n  }\n\n  getOutputHeight() {\n    return this.height;\n  }\n\n  getOutputDepth() {\n    return 1;\n  }\n}\n\nexport { AbstractLayer1D };\n","import { Layers } from \"../../types\";\nimport { Matrix } from \"../../math/matrix\";\n\nexport abstract class AbstractBackPropagation {\n  protected layer: Layers = null;\n  protected previousLayer: Layers = null;\n\n  constructor(layer: Layers, previousLayer: Layers) {\n    this.layer = layer;\n    this.previousLayer = previousLayer;\n  }\n\n  abstract propagate(\n    input: Matrix,\n    numberOfExamples: number,\n    regularization: number,\n    sigma: Matrix\n  ): Matrix;\n}\n","import { AbstractBackPropagation } from \"./abstract\";\nimport {\n  elementWiseAdd,\n  elementWiseMultiply,\n  elementWiseMultiplyNumber,\n  Matrix,\n  multiply,\n} from \"../../math/matrix\";\nimport { elementWiseDivideNumber } from \"../../math/matrix\";\n\nexport class Backpropagation1Dto1D extends AbstractBackPropagation {\n  propagate(\n    input: Matrix,\n    numberOfExamples: number,\n    regularization: number,\n    sigma: Matrix\n  ): Matrix {\n    const previousActivations =\n      this.previousLayer !== null ? this.previousLayer.A : input;\n    const delta = multiply(sigma, previousActivations.transpose().conjugate());\n    this.layer.gW = elementWiseAdd(\n      elementWiseDivideNumber(delta, numberOfExamples),\n      elementWiseMultiplyNumber(this.layer.W, regularization / numberOfExamples)\n    );\n    this.layer.gb = elementWiseDivideNumber(\n      sigma.rowwiseSum(),\n      numberOfExamples\n    );\n    if (this.previousLayer !== null) {\n      return elementWiseMultiply(\n        multiply(this.layer.W.transpose(), sigma),\n        this.previousLayer.derivative(this.previousLayer.A)\n      );\n    }\n    return new Matrix();\n  }\n}\n","import { AbstractLayer } from \"./abstract\";\nimport { SoftmaxLayer } from \"./softmax\";\nimport { LogisticLayer } from \"./logistic\";\nimport { TanhLayer } from \"./tanh\";\nimport { ReluLayer } from \"./relu\";\nimport { SoftplusLayer } from \"./softplus\";\n\nexport {\n  AbstractLayer,\n  SoftmaxLayer,\n  LogisticLayer,\n  TanhLayer,\n  ReluLayer,\n  SoftplusLayer,\n};\n","import {\n  logisticActivation,\n  logisticDerivative,\n  Matrix,\n  logisticLoss,\n} from \"../math/matrix\";\nimport { LayerType } from \"../types\";\nimport { AbstractLayer1D } from \"./abstract1d\";\n\nclass LogisticLayer extends AbstractLayer1D {\n  activation(m: Matrix): Matrix {\n    return logisticActivation(m);\n  }\n\n  derivative(m: Matrix): Matrix {\n    return logisticDerivative(m);\n  }\n\n  getType(): LayerType {\n    return LayerType.logistic;\n  }\n\n  loss(output: Matrix, predictions: Matrix): number {\n    return logisticLoss(output, predictions);\n  }\n\n  error(m: number): number {\n    return -1.0 / m;\n  }\n}\n\nexport { LogisticLayer };\n","import { Matrix, reluActivation, reluDerivative } from \"../math/matrix\";\nimport { LayerType } from \"../types\";\nimport { AbstractLayer1D } from \"./abstract1d\";\n\nclass ReluLayer extends AbstractLayer1D {\n  activation(m: Matrix): Matrix {\n    return reluActivation(m);\n  }\n\n  derivative(m: Matrix): Matrix {\n    return reluDerivative(m);\n  }\n\n  getType(): LayerType {\n    return LayerType.relu;\n  }\n\n  loss(output: Matrix, predictions: Matrix): number {\n    return 0.0; // todo\n  }\n\n  error(m: number): number {\n    return 0.0; // todo\n  }\n}\n\nexport { ReluLayer };\n","import { Matrix, softmaxActivation, softmaxLoss } from \"../math/matrix\";\nimport { LayerType } from \"../types\";\nimport { AbstractLayer1D } from \"./abstract1d\";\n\nclass SoftmaxLayer extends AbstractLayer1D {\n  activation(m: Matrix): Matrix {\n    return softmaxActivation(m);\n  }\n\n  derivative(m: Matrix): Matrix {\n    throw new Error(\"Unsupported usage.\");\n  }\n\n  getType(): LayerType {\n    return LayerType.softmax;\n  }\n\n  loss(output: Matrix, predictions: Matrix): number {\n    return softmaxLoss(output, predictions);\n  }\n\n  error(m: number): number {\n    return -1.0 / m;\n  }\n}\n\nexport { SoftmaxLayer };\n","import { Matrix, softplusActivation, softplusDerivative } from \"../math/matrix\";\nimport { LayerType } from \"../types\";\nimport { AbstractLayer1D } from \"./abstract1d\";\n\nclass SoftplusLayer extends AbstractLayer1D {\n  activation(m: Matrix): Matrix {\n    return softplusActivation(m);\n  }\n\n  derivative(m: Matrix): Matrix {\n    return softplusDerivative(m);\n  }\n\n  getType(): LayerType {\n    return LayerType.softplus;\n  }\n\n  loss(output: Matrix, predictions: Matrix): number {\n    return 0.0; // todo\n  }\n\n  error(m: number): number {\n    return 0.0; // todo\n  }\n}\n\nexport { SoftplusLayer };\n","import { Matrix, tanhActivation, tanhDerivative } from \"../math/matrix\";\nimport { LayerType } from \"../types\";\nimport { AbstractLayer1D } from \"./abstract1d\";\n\nclass TanhLayer extends AbstractLayer1D {\n  activation(m: Matrix): Matrix {\n    return tanhActivation(m);\n  }\n\n  derivative(m: Matrix): Matrix {\n    return tanhDerivative(m);\n  }\n\n  getType(): LayerType {\n    return LayerType.tanh;\n  }\n\n  loss(output: Matrix, predictions: Matrix): number {\n    return 0.0; // todo\n  }\n\n  error(m: number): number {\n    return 0.0; // todo\n  }\n}\n\nexport { TanhLayer };\n","import { GPU } from \"gpu.js\";\n\nexport const gpu = new GPU({ mode: \"gpu\" });\n\nexport class Matrix {\n  public rows = 0;\n  public cols = 0;\n  public data = null;\n\n  constructor(rows = 0, cols = 0, data: number[][] = null) {\n    this.resize(rows, cols);\n    if (data) {\n      this.generateData(data);\n    }\n  }\n\n  resize(rows, cols): Matrix {\n    this.rows = rows;\n    this.cols = cols;\n    this.data = [];\n    for (let row = 0; row < this.rows; row += 1) {\n      this.data[row] = new Array(this.cols);\n    }\n\n    return this;\n  }\n\n  generateData(arr: number[][]): Matrix {\n    this.data = [];\n    for (let row = 0; row < this.rows; row += 1) {\n      this.data[row] = new Array(this.cols);\n    }\n    for (let col = 0; col < this.cols; col += 1) {\n      for (let row = 0; row < this.rows; row += 1) {\n        if (typeof arr[col] === \"number\") {\n          this.data[row][col] = arr[col];\n        } else if (arr[col] instanceof Float32Array) {\n          this.data[row][col] = arr[col][row];\n        } else {\n          this.data[row][col] = 0;\n        }\n      }\n    }\n    return this;\n  }\n\n  toBuffer(): ArrayBuffer {\n    const result = new ArrayBuffer(this.rows * this.cols * 64);\n    const view = new DataView(result, 0, this.rows * this.cols * 64);\n    this.data.forEach((num, i) => {\n      view.setFloat64(i, num);\n    });\n    return result;\n  }\n\n  sum(): number {\n    let sum = 0.0;\n    for (let row = 0; row < this.rows; row += 1) {\n      for (let col = 0; col < this.cols; col += 1) {\n        sum += this.data[row][col];\n      }\n    }\n    return sum;\n  }\n\n  colwiseSum(): Matrix {\n    const data = [];\n    for (let col = 0; col < this.cols; col += 1) {\n      let sum = 0.0;\n      for (let row = 0; row < this.rows; row += 1) {\n        sum += this.data[row][col];\n      }\n      data[col] = [sum];\n    }\n    return new Matrix(1, this.cols, data);\n  }\n\n  rowwiseSum(): Matrix {\n    const data = [];\n    for (let row = 0; row < this.rows; row += 1) {\n      let sum = 0.0;\n      for (let col = 0; col < this.rows; col += 1) {\n        sum += this.data[row][col];\n      }\n      data[row] = [sum];\n    }\n    return new Matrix(this.rows, 1, data);\n  }\n\n  replicate(rows: number, cols: number): Matrix {\n    const oldData = this.data;\n    const newData = [];\n    let result = null;\n    if (rows === 1 && this.cols === 1 && cols > 1) {\n      result = new Matrix(this.rows, cols);\n      for (let row = 0; row < this.rows; row += 1) {\n        newData[row] = [];\n        for (let col = 0; col < cols; col += 1) {\n          newData[row][col] = oldData[row][0];\n        }\n      }\n    } else if (cols === 1 && this.rows === 1 && rows > 1) {\n      result = new Matrix(rows, this.cols);\n      for (let row = 0; row < rows; row += 1) {\n        newData[row] = [];\n        for (let col = 0; col < this.cols; col += 1) {\n          newData[row][col] = oldData[0][col];\n        }\n      }\n    }\n    if (result) {\n      result.generateData(newData);\n      return result;\n    }\n    return this;\n  }\n\n  transpose(): Matrix {\n    const kernel = gpu\n      .createKernel(function (a) {\n        return a[this.thread.y][this.thread.x];\n      })\n      .setOutput([this.cols, this.rows]);\n\n    return new Matrix(this.cols, this.rows, kernel(this.data) as number[][]);\n  }\n\n  conjugate(): Matrix {\n    return this;\n  }\n\n  colMaxCoeffIndex(col: number): number {\n    let maxIndex = -1;\n    let max = -Infinity;\n\n    for (let row = 0; row < this.rows; row += 1) {\n      if (this.data[row][col] > max) {\n        max = this.data[row][col];\n        maxIndex = row;\n      }\n    }\n\n    return maxIndex;\n  }\n\n  block(\n    startRow: number,\n    startCol: number,\n    blockRows: number,\n    blockCols: number\n  ): Matrix {\n    const data = [];\n\n    for (\n      let row = startRow, newRow = 0;\n      row < this.rows && row < startRow + blockRows;\n      row += 1, newRow += 1\n    ) {\n      data[row] = new Array(blockCols);\n      for (\n        let col = startCol, newCol = 0;\n        col < this.cols && col < startCol + blockCols;\n        col += 1, newCol += 1\n      ) {\n        data[newRow][newCol] = this.data[row][col];\n      }\n    }\n\n    return new Matrix(blockRows, blockCols, data);\n  }\n\n  col(col: number): Matrix {\n    const data = [];\n    for (let row = 0; row < this.rows; row += 1) {\n      data[row] = [this.data[row][col]];\n    }\n    return new Matrix(this.rows, 1, data);\n  }\n\n  setCol(col: number, tmp: Matrix): Matrix {\n    for (let row = 0; row < this.rows; row += 1) {\n      this.data[row][col] = tmp.data[row][0];\n    }\n    return this;\n  }\n\n  rollToColMatrix(): Matrix {\n    const data = [];\n\n    let _row = 0;\n    for (let row = 0; row < this.rows; row += 1) {\n      data[row] = [];\n      for (let col = 0; col < this.cols; col += 1) {\n        data[_row++][0] = this.data[row][col];\n      }\n    }\n\n    return new Matrix(this.rows * this.cols, 1, data);\n  }\n}\n\nexport const multiply = (m1: Matrix, m2: Matrix): Matrix => {\n  if (m1.cols !== m2.rows) {\n    throw new Error(\n      `DIMENSIONS error. m1.cols ${m1.cols} !== m2.rows ${m2.rows}.`\n    );\n  }\n\n  const kernel = gpu\n    .createKernel(function (a, b) {\n      let sum = 0;\n      for (let i = 0; i < this.constants.cols; i++) {\n        sum += a[this.thread.x][i] * b[i][this.thread.y];\n      }\n      return sum;\n    })\n    .setOutput([m1.rows, m2.cols])\n    .setConstants({\n      cols: m1.rows,\n    });\n\n  return new Matrix(m1.rows, m2.cols, kernel(m1.data, m2.data) as number[][]);\n};\n\nexport const elementWiseAdd = (m1: Matrix, m2: Matrix): Matrix => {\n  if (m1.rows !== m2.rows) {\n    throw new Error(\"ROWS number not equal.\");\n  }\n  if (m1.cols !== m2.cols) {\n    throw new Error(\"COLS number not equal.\");\n  }\n\n  const kernel = gpu\n    .createKernel(function (a, b) {\n      return a[this.thread.x][this.thread.y] + b[this.thread.x][this.thread.y];\n    })\n    .setOutput([m1.rows, m2.cols]);\n\n  return new Matrix(m1.rows, m2.cols, kernel(m1.data, m2.data) as number[][]);\n};\n\nexport const elementWiseSubtract = (m1: Matrix, m2: Matrix): Matrix => {\n  if (m1.rows !== m2.rows) {\n    throw new Error(\"ROWS number not equal.\");\n  }\n  if (m1.cols !== m2.cols) {\n    throw new Error(\"COLS number not equal.\");\n  }\n\n  const kernel = gpu\n    .createKernel(function (a, b) {\n      return a[this.thread.x][this.thread.y] - b[this.thread.x][this.thread.y];\n    })\n    .setOutput([m1.rows, m2.cols]);\n\n  return new Matrix(m1.rows, m2.cols, kernel(m1.data, m2.data) as number[][]);\n};\n\nexport const fillRandom = (m1: Matrix, parameter: number): Matrix => {\n  const kernel = gpu\n    .createKernel(function () {\n      // @ts-ignore\n      return (Math.random() - 0.5) * Math.sqrt(2.0 / this.constants.parameter);\n    })\n    .setOutput([m1.rows, m1.cols])\n    .setConstants({\n      parameter,\n    });\n\n  return new Matrix(m1.rows, m1.cols, kernel() as number[][]);\n};\n\nexport const setZeros = (m1: Matrix): Matrix => {\n  const kernel = gpu\n    .createKernel(function () {\n      return 0.0;\n    })\n    .setOutput([m1.rows, m1.cols]);\n  return new Matrix(m1.rows, m1.cols, kernel() as number[][]);\n};\n\nexport const elementWiseMultiply = (m1: Matrix, m2: Matrix): Matrix => {\n  if (m1.rows !== m2.rows) {\n    throw new Error(\"ROWS number not equal.\");\n  }\n  if (m1.cols !== m2.cols) {\n    throw new Error(\"COLS number not equal.\");\n  }\n\n  const kernel = gpu\n    .createKernel(function (a, b) {\n      return a[this.thread.x][this.thread.y] * b[this.thread.x][this.thread.y];\n    })\n    .setOutput([m1.rows, m2.cols]);\n\n  return new Matrix(m1.rows, m2.cols, kernel(m1.data, m2.data) as number[][]);\n};\n\nexport const elementWiseMultiplyNumber = (m1: Matrix, num: number): Matrix => {\n  const kernel = gpu\n    .createKernel(function (a) {\n      // @ts-ignore\n      return a[this.thread.x][this.thread.y] * this.constants.number;\n    })\n    .setOutput([m1.rows, m1.cols])\n    .setConstants({\n      number: num,\n    });\n\n  return new Matrix(m1.rows, m1.cols, kernel(m1.data) as number[][]);\n};\n\nexport const sum = (m: Matrix): number => {\n  return m.sum();\n};\n\nexport const cols = (m: Matrix): number => {\n  return m.cols;\n};\n\nexport const elementWiseDivide = (m1: Matrix, m2: Matrix): Matrix => {\n  if (m1.rows !== m2.rows) {\n    throw new Error(\"ROWS number not equal.\");\n  }\n  if (m1.cols !== m2.cols) {\n    throw new Error(\"COLS number not equal.\");\n  }\n\n  const kernel = gpu\n    .createKernel(function (a, b) {\n      return a[this.thread.x][this.thread.y] / b[this.thread.x][this.thread.y];\n    })\n    .setOutput([m1.rows, m2.cols]);\n\n  return new Matrix(m1.rows, m2.cols, kernel(m1.data, m2.data) as number[][]);\n};\n\nexport const elementWiseDivideNumber = (m1: Matrix, num: number): Matrix => {\n  const kernel = gpu\n    .createKernel(function (a) {\n      // @ts-ignore\n      return a[this.thread.x][this.thread.y] / this.constants.number;\n    })\n    .setOutput([m1.rows, m1.cols])\n    .setConstants({\n      number: num,\n    });\n\n  return new Matrix(m1.rows, m1.cols, kernel(m1.data) as number[][]);\n};\n\nexport const softmaxActivation = (m: Matrix): Matrix => {\n  const kernel = gpu\n    .createKernel(function (a) {\n      return Math.exp(a[this.thread.x][this.thread.y]);\n    })\n    .setOutput([m.rows, m.cols]);\n  const data = new Matrix(m.rows, m.cols, kernel(m.data) as number[][]);\n  const divider = new Matrix(1, m.cols, data.colwiseSum().data).replicate(\n    m.rows,\n    1\n  );\n  const result = new Matrix(\n    m.rows,\n    m.cols,\n    elementWiseDivide(data, divider).data\n  );\n  return result;\n};\n\nexport const softmaxLoss = (output: Matrix, predictions: Matrix): number => {\n  const kernel = gpu\n    .createKernel(function (a) {\n      return Math.log(a[this.thread.x][this.thread.y]);\n    })\n    .setOutput([predictions.rows, predictions.cols]);\n  return new Matrix(\n    output.rows,\n    output.cols,\n    elementWiseMultiply(\n      output,\n      new Matrix(\n        output.rows,\n        output.cols,\n        kernel(predictions.data) as number[][]\n      )\n    ).data\n  ).sum();\n};\n\nexport const logisticActivation = (m: Matrix): Matrix => {\n  const kernel = gpu\n    .createKernel(function (a) {\n      return 1.0 / (1.0 + Math.exp(-a[this.thread.x][this.thread.y]));\n    })\n    .setOutput([m.rows, m.cols]);\n  return new Matrix(m.rows, m.cols, kernel(m.data) as number[][]);\n};\n\nexport const logisticDerivative = (m: Matrix): Matrix => {\n  const kernel = gpu\n    .createKernel(function (a) {\n      return (\n        a[this.thread.x][this.thread.y] *\n        (1.0 - a[this.thread.x][this.thread.y])\n      );\n    })\n    .setOutput([m.rows, m.cols]);\n  return new Matrix(m.rows, m.cols, kernel(m.data) as number[][]);\n};\n\nexport const logisticLoss = (output: Matrix, predictions: Matrix): number => {\n  const kernel = gpu\n    .createKernel(function (a) {\n      return Math.log(a[this.thread.x][this.thread.y]);\n    })\n    .setOutput([output.rows, output.cols]);\n  const kernel2 = gpu\n    .createKernel(function (a) {\n      return 1.0 - a[this.thread.x][this.thread.y];\n    })\n    .setOutput([output.rows, output.cols]);\n  const kernel3 = gpu\n    .createKernel(function (a) {\n      return Math.log(1.0 - a[this.thread.x][this.thread.y]);\n    })\n    .setOutput([predictions.rows, predictions.cols]);\n\n  return elementWiseAdd(\n    elementWiseMultiply(\n      output,\n      new Matrix(output.rows, output.cols, kernel(output.data) as number[][])\n    ),\n    elementWiseMultiply(\n      new Matrix(output.rows, output.cols, kernel2(output.data) as number[][]),\n      new Matrix(\n        predictions.rows,\n        predictions.cols,\n        kernel3(predictions.data) as number[][]\n      )\n    )\n  ).sum();\n};\n\nexport const tanhActivation = (m: Matrix): Matrix => {\n  const kernel = gpu\n    .createKernel(function (a) {\n      return (\n        2.0 / (1.0 + Math.exp(-2.0 * a[this.thread.x][this.thread.y])) - 1.0\n      );\n    })\n    .setOutput([m.rows, m.cols]);\n  return new Matrix(m.rows, m.cols, kernel(m.data) as number[][]);\n};\n\nexport const tanhDerivative = (m: Matrix): Matrix => {\n  const kernel = gpu\n    .createKernel(function (a) {\n      return (\n        1.0 -\n        Math.pow(\n          2.0 / (1.0 + Math.exp(-2.0 * a[this.thread.x][this.thread.y])) - 1.0,\n          2.0\n        )\n      );\n    })\n    .setOutput([m.rows, m.cols]);\n  return new Matrix(m.rows, m.cols, kernel(m.data) as number[][]);\n};\n\nexport const reluActivation = (m: Matrix): Matrix => {\n  const kernel = gpu\n    .createKernel(function (a) {\n      return Math.max(0.0, a[this.thread.x][this.thread.y]);\n    })\n    .setOutput([m.rows, m.cols]);\n  return new Matrix(m.rows, m.cols, kernel(m.data) as number[][]);\n};\n\nexport const reluDerivative = (m: Matrix): Matrix => {\n  const kernel = gpu\n    .createKernel(function (a) {\n      if (a[this.thread.x][this.thread.y] > 0) {\n        return 1;\n      }\n      return 0;\n    })\n    .setOutput([m.rows, m.cols]);\n  return new Matrix(m.rows, m.cols, kernel(m.data) as number[][]);\n};\n\nexport const softplusActivation = (m: Matrix): Matrix => {\n  const kernel = gpu\n    .createKernel(function (a) {\n      return Math.log(1 + Math.exp(a[this.thread.x][this.thread.y]));\n    })\n    .setOutput([m.rows, m.cols]);\n  return new Matrix(m.rows, m.cols, kernel(m.data) as number[][]);\n};\n\nexport const softplusDerivative = (m: Matrix): Matrix => {\n  const kernel = gpu\n    .createKernel(function (a) {\n      return 1 / (1 + Math.exp(-a[this.thread.x][this.thread.y]));\n    })\n    .setOutput([m.rows, m.cols]);\n  return new Matrix(m.rows, m.cols, kernel(m.data) as number[][]);\n};\n\nexport const penalty = (m: Matrix): number => {\n  const kernel = gpu\n    .createKernel(function (a) {\n      return Math.pow(a[this.thread.x][this.thread.y], 2);\n    })\n    .setOutput([m.rows, m.cols]);\n  return new Matrix(m.rows, m.cols, kernel(m.data) as number[][]).sum();\n};\n\nexport const sqrt = (m: Matrix): Matrix => {\n  const kernel = gpu\n    .createKernel(function (a) {\n      return Math.sqrt(a[this.thread.x][this.thread.y] + 1e-8);\n    })\n    .setOutput([m.rows, m.cols]);\n  return new Matrix(m.rows, m.cols, kernel(m.data) as number[][]);\n};\n\nexport const im2col = (\n  input: Matrix,\n  channels: number,\n  height: number,\n  width: number,\n  kernel_h: number,\n  kernel_w: number,\n  pad_h: number,\n  pad_w: number,\n  stride_h: number,\n  stride_w: number\n): Matrix => {\n  return new Matrix();\n};\n\nexport const maxpool = (\n  input: Matrix,\n  channels: number,\n  height: number,\n  width: number,\n  kernel_h: number,\n  kernel_w: number,\n  stride_h: number,\n  stride_w: number\n): Matrix => {\n  return new Matrix();\n};\n","import { Dimension, Layers } from \"./types\";\nimport { cols, Matrix, elementWiseSubtract } from \"./math/matrix\";\nimport * as fs from \"fs\";\nimport { Dataset } from \"./dataset/Dataset\";\n\nclass Network {\n  private dimensions: Dimension = null;\n  private size: number = 0;\n  private layers: Layers[] = [];\n\n  constructor(dimensions: Dimension) {\n    this.dimensions = dimensions;\n  }\n\n  addLayer(layer: Layers) {\n    this.size++;\n    this.layers.push(layer);\n  }\n\n  getLayers(): Layers[] {\n    return this.layers;\n  }\n\n  forward(input: Matrix): Matrix {\n    let output = input;\n\n    this.layers.forEach((layer: Layers) => {\n      output = layer.forward(output);\n    });\n\n    return output;\n  }\n\n  backward(X: Matrix, Y: Matrix, predictions: Matrix, regularization: number) {\n    const m = cols(X);\n\n    let delta = elementWiseSubtract(predictions, Y);\n\n    this.layers.reverse().forEach((layer) => {\n      delta = layer.getBackPropagation().propagate(X, m, regularization, delta);\n    });\n  }\n\n  loss(output: Matrix, predictions: Matrix) {\n    return this.layers[this.layers.length - 1].loss(output, predictions);\n  }\n\n  error(m: number) {\n    return this.layers[this.layers.length - 1].error(m);\n  }\n\n  save(path: string): Promise<string> {\n    const resultJSON = {\n      dimensions: this.dimensions,\n      layers: [],\n    };\n\n    this.layers.forEach((layer: Layers) => {\n      resultJSON.layers.push({\n        type: layer.getType(),\n        dimensions: [\n          layer.getOutputHeight(),\n          layer.getOutputWidth(),\n          layer.getOutputDepth(),\n        ],\n        weights: {\n          W: layer.W.data,\n          b: layer.b.data,\n        },\n      });\n    });\n\n    const result = JSON.stringify(resultJSON);\n\n    return new Promise((resolve, reject) => {\n      fs.writeFile(path, result, (err) => {\n        if (err) {\n          console.error(err);\n          reject();\n        }\n        resolve(result);\n      });\n    });\n  }\n}\n\nexport { Network };\nexport default Network;\n","import Network from \"../network\";\nimport { AbstractOptimizer } from \"./optimizer/abstract\";\nimport { Dataset } from \"../dataset/Dataset\";\n\nexport abstract class AbstractTrainer {\n  network: Network = null;\n  optimizer: AbstractOptimizer = null;\n  regularization: number = 0;\n  iterations: number = 1000;\n  learningRate: number = 0.1;\n  verbose: boolean = true;\n  verboseStep: number = 1;\n  stepCallback: Function = () => null;\n\n  constructor(network: Network, optimizer: AbstractOptimizer) {\n    this.network = network;\n    this.optimizer = optimizer;\n  }\n\n  setRegularization(regularization: number): AbstractTrainer {\n    this.regularization = regularization;\n    return this;\n  }\n\n  setIterations(iterations: number): AbstractTrainer {\n    this.iterations = iterations;\n    return this;\n  }\n\n  setLearningRate(learningRate: number): AbstractTrainer {\n    this.learningRate = learningRate;\n    return this;\n  }\n\n  setVerbose(verbose: boolean): AbstractTrainer {\n    this.verbose = verbose;\n    return this;\n  }\n\n  setVerboseStep(verboseStep: number): AbstractTrainer {\n    this.verboseStep = verboseStep;\n    return this;\n  }\n\n  setStepCallback(stepCallback: Function): AbstractTrainer {\n    this.stepCallback = stepCallback;\n    return this;\n  }\n\n  cost(inputDataset: Dataset, outputDataset: Dataset) {\n    const batchSize = 100;\n    const numberOfExamples = inputDataset.getNumberOfExamples();\n    const numBatches = Math.ceil(numberOfExamples / batchSize);\n\n    let cost = 0;\n    let accuracy = 0;\n    let penalty = 0;\n\n    this.network.getLayers().forEach((layer) => {\n      penalty += layer.penalty();\n    });\n\n    for (\n      let batch = 0, offset = 0;\n      batch < numberOfExamples;\n      batch += batchSize, offset += 1\n    ) {\n      const predictedOutput = this.network.forward(\n        inputDataset.getBatch(offset, batchSize)\n      );\n      const correctOutput = outputDataset.getBatch(offset, batchSize);\n\n      const miniBatchSize = correctOutput.cols;\n\n      let loss = this.network.loss(correctOutput, predictedOutput);\n      let error = this.network.error(miniBatchSize);\n\n      cost +=\n        (error * loss +\n          (this.regularization * penalty) / (2.0 * miniBatchSize)) /\n        // TODO: fix it\n        (numBatches * (miniBatchSize / batchSize));\n\n      for (let col = 0; col < predictedOutput.cols; col += 1) {\n        const index1 = predictedOutput.colMaxCoeffIndex(col);\n        const index2 = predictedOutput.colMaxCoeffIndex(col);\n\n        if (index1 === index2) {\n          accuracy++;\n        }\n      }\n    }\n\n    const result = {\n      cost,\n      accuracy: ((accuracy - 1) / numberOfExamples) * 100,\n    };\n\n    return result;\n  }\n}\n","import { AbstractTrainer } from \"./abstract\";\nimport { Dataset } from \"../dataset/Dataset\";\n\nexport class MiniBatchTrainer extends AbstractTrainer {\n  batchSize: number = 100;\n\n  setBatchSize(batchSize: number): MiniBatchTrainer {\n    this.batchSize = batchSize;\n    return this;\n  }\n\n  train(inputDataset: Dataset, outputDataset: Dataset) {\n    const numberOfExamples = inputDataset.getNumberOfExamples();\n    const startTime = new Date().getTime();\n\n    let t = 0;\n\n    for (let i = 0; i < this.iterations; i += 1) {\n      const startIterationTime = new Date().getTime();\n\n      for (\n        let batch = 0, offset = 0;\n        batch < numberOfExamples;\n        batch += this.batchSize, offset += this.batchSize\n      ) {\n        const input = inputDataset.getBatch(offset, this.batchSize);\n        const output = outputDataset.getBatch(offset, this.batchSize);\n        const forward = this.network.forward(input);\n\n        this.network.backward(input, output, forward, this.regularization);\n\n        this.network.getLayers().forEach((layer) => {\n          this.optimizer.setT(++t);\n          this.optimizer.optimize(layer);\n        });\n\n        if (this.verbose) {\n          const endIterationTime = new Date().getTime();\n          console.log(\n            `Batch: ${offset + 1} / ${Math.ceil(\n              numberOfExamples / this.batchSize\n            )} | Time: ${endIterationTime - startIterationTime} ms.`\n          );\n        }\n      }\n\n      if (this.verbose) {\n        if ((i + 1) % this.verboseStep === 0) {\n          const endTime = new Date().getTime();\n          const currentResult = this.cost(inputDataset, outputDataset);\n\n          console.log(\n            `Iteration: ${i + 1} | Cost: ${currentResult.cost} | Accuracy: ${\n              currentResult.accuracy\n            }% | Time: ${endTime - startTime} ms.`\n          );\n        }\n      }\n\n      if (typeof this.stepCallback === \"function\") {\n        this.stepCallback({\n          iteration: i,\n        });\n      }\n    }\n  }\n}\n","import { Layers } from \"../../types\";\n\nexport abstract class AbstractOptimizer {\n  protected batchSize: number = 0;\n  protected t: number = 0;\n  protected learningRate: number = 0;\n\n  setBatchSize(batchSize: number): AbstractOptimizer {\n    this.batchSize = batchSize;\n    return this;\n  }\n\n  setT(t: number): AbstractOptimizer {\n    this.t = t;\n    return this;\n  }\n\n  setLearningRate(learningRate: number): AbstractOptimizer {\n    this.learningRate = learningRate;\n    return this;\n  }\n\n  abstract optimize(layer: Layers);\n}\n","import { AbstractOptimizer } from \"./abstract\";\nimport { Layers } from \"../../types\";\nimport {\n  elementWiseAdd,\n  elementWiseDivide,\n  elementWiseDivideNumber,\n  elementWiseMultiply,\n  elementWiseMultiplyNumber,\n  elementWiseSubtract,\n  sqrt,\n} from \"../../math/matrix\";\n\nexport class OptimizerAdam extends AbstractOptimizer {\n  optimize(layer: Layers) {\n    this.adam(layer, this.learningRate, this.t);\n  }\n\n  adam(layer: Layers, learningRate: number, t: number) {\n    const beta1 = 0.9;\n    const beta2 = 0.999;\n    const epsilon = 1e-8;\n\n    layer.vW = elementWiseAdd(\n      elementWiseMultiplyNumber(layer.vW, beta1),\n      elementWiseMultiplyNumber(layer.gW, 1 - beta1)\n    );\n    const wCorrected = elementWiseDivideNumber(\n      layer.vW,\n      1 - Math.pow(beta1, t)\n    );\n\n    layer.cW = elementWiseAdd(\n      elementWiseMultiplyNumber(layer.cW, beta1),\n      elementWiseMultiplyNumber(layer.gW, 1 - beta1)\n    );\n    const sCorrected = sqrt(\n      elementWiseMultiplyNumber(layer.cW, 1 - Math.pow(beta2, t))\n    );\n\n    layer.W = elementWiseSubtract(\n      layer.W,\n      elementWiseMultiplyNumber(\n        elementWiseMultiply(wCorrected, sCorrected),\n        learningRate\n      )\n    );\n\n    layer.vB = elementWiseAdd(\n      elementWiseMultiplyNumber(layer.vB, beta1),\n      elementWiseMultiplyNumber(layer.gb, 1 - beta1)\n    );\n    const wCorrected2 = elementWiseDivideNumber(\n      layer.vB,\n      1 - Math.pow(beta1, t)\n    );\n    layer.cB = elementWiseAdd(\n      elementWiseMultiplyNumber(layer.cB, beta2),\n      elementWiseMultiplyNumber(\n        elementWiseMultiply(layer.gb, layer.gb),\n        1 - beta2\n      )\n    );\n    const sCorrected2 = sqrt(\n      elementWiseDivideNumber(layer.cB, 1 - Math.pow(beta2, t))\n    );\n\n    layer.b = elementWiseSubtract(\n      layer.b,\n      elementWiseMultiplyNumber(\n        elementWiseDivide(wCorrected2, sCorrected2),\n        learningRate\n      )\n    );\n  }\n}\n","import { AbstractOptimizer } from \"./abstract\";\nimport { Layers } from \"../../types\";\nimport {\n  elementWiseMultiplyNumber,\n  elementWiseSubtract,\n} from \"../../math/matrix\";\n\nexport class OptimizerGradientDescent extends AbstractOptimizer {\n  optimize(layer: Layers) {\n    this.gradientDescent(layer, this.learningRate);\n  }\n\n  gradientDescent(layer: Layers, learningRate: number) {\n    layer.W = elementWiseSubtract(\n      layer.W,\n      elementWiseMultiplyNumber(layer.gW, learningRate)\n    );\n    layer.b = elementWiseSubtract(\n      layer.b,\n      elementWiseMultiplyNumber(layer.gb, learningRate)\n    );\n  }\n}\n","import {\n  SoftmaxLayer,\n  LogisticLayer,\n  TanhLayer,\n  ReluLayer,\n  SoftplusLayer,\n  AbstractLayer,\n} from \"./layer\";\nimport { ConvLayer } from \"./layer/conv\";\nimport {MaxPoolLayer} from \"./layer/maxpool\";\n\nexport type Dimension = [number] | [number, number, number];\n\nexport enum LayerType {\n  logistic = \"logistic\",\n  softmax = \"softmax\",\n  tanh = \"tanh\",\n  relu = \"relu\",\n  softplus = \"softplus\",\n  conv = \"conv\",\n  maxpool = \"maxpool\",\n}\n\nexport type Layers =\n  | LogisticLayer\n  | SoftmaxLayer\n  | TanhLayer\n  | ReluLayer\n  | SoftplusLayer\n  | AbstractLayer;\nexport type Layers1D =\n  | LogisticLayer\n  | SoftmaxLayer\n  | TanhLayer\n  | ReluLayer\n  | SoftplusLayer\n  | AbstractLayer;\nexport type Layers3D = ConvLayer | MaxPoolLayer;\n","module.exports = require(\"csvtojson\");","module.exports = require(\"fs\");","module.exports = require(\"gpu.js\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import { Builder1D } from \"./builder/builder1d\";\nimport {\n  SoftmaxLayer,\n  LogisticLayer,\n  ReluLayer,\n  SoftplusLayer,\n  TanhLayer,\n} from \"./layer\";\nimport { Matrix } from \"./math/matrix\";\nimport {\n  multiply as matrixMultiply,\n  sum as matrixSum,\n  fillRandom as matrixFillRandom,\n  elementWiseMultiply as matrixElementWiseMultiply,\n  elementWiseDivide as matrixElementWiseDivide,\n  elementWiseAdd as matrixElementWiseAdd,\n  elementWiseSubtract as matrixElementWiseSubtract,\n} from \"./math/matrix\";\nimport { DatasetBuilder } from \"./dataset/DatasetBuilder\";\nimport { OptimizerAdam } from \"./trainer/optimizer/adam\";\nimport { OptimizerGradientDescent } from \"./trainer/optimizer/gradientdescent\";\nimport { MiniBatchTrainer } from \"./trainer/minibatch\";\n\nconst Builders = { Builder1D };\nconst Math = {\n  Matrix,\n  matrixMultiply,\n  matrixSum,\n  matrixFillRandom,\n  matrixElementWiseMultiply,\n  matrixElementWiseDivide,\n  matrixElementWiseAdd,\n  matrixElementWiseSubtract,\n};\nconst Layers = {\n  SoftmaxLayer,\n  LogisticLayer,\n  ReluLayer,\n  SoftplusLayer,\n  TanhLayer,\n};\nconst Dataset = {\n  DatasetBuilder,\n};\nconst Optimizers = {\n  OptimizerAdam,\n  OptimizerGradientDescent,\n};\nconst Trainers = {\n  MiniBatchTrainer,\n};\n\nexport { Builders, Math, Layers, Dataset, Optimizers, Trainers };\n"],"names":["Network","AbstractBuilder","dimension","dimensions","network","type","callback","layer","lastLayer","firstLayerTransition","transition","configure","addLayer","fs","LogisticLayer","ReluLayer","SoftmaxLayer","SoftplusLayer","TanhLayer","Builder1D","setWidth","jsonPath","Promise","resolve","reject","readFile","err","data","json","JSON","parse","toString","builder","forEach","layerData","layerClass","createLayer","setSize","getNetwork","getLayers","i","W","b","Matrix","Dataset","exampleSize","numberOfExamples","arr","example","dataIndex","Number","index","offset","batchSize","block","rows","csvtojson","DatasetBuilder","csvPath","noheader","output","fromFile","then","length","dataset","elementWiseAdd","multiply","penalty","AbstractLayer","A","Z","gW","gb","vW","cW","vB","cB","backPropagation","input","replicate","cols","activation","value","width","height","depth","previousLayer","fillRandom","setZeros","Backpropagation1Dto1D","AbstractLayer1D","resize","is1D","getSize","is3D","getOutputWidth","getOutputHeight","getOutputDepth","setHeight","AbstractBackPropagation","elementWiseMultiply","elementWiseMultiplyNumber","elementWiseDivideNumber","regularization","sigma","previousActivations","delta","transpose","conjugate","rowwiseSum","derivative","logisticActivation","logisticDerivative","logisticLoss","LayerType","m","logistic","predictions","reluActivation","reluDerivative","relu","softmaxActivation","softmaxLoss","Error","softmax","softplusActivation","softplusDerivative","softplus","tanhActivation","tanhDerivative","tanh","GPU","gpu","mode","generateData","row","Array","col","Float32Array","result","ArrayBuffer","view","DataView","num","setFloat64","sum","oldData","newData","kernel","createKernel","a","thread","y","x","setOutput","maxIndex","max","Infinity","startRow","startCol","blockRows","blockCols","newRow","newCol","tmp","_row","m1","m2","constants","setConstants","elementWiseSubtract","parameter","Math","random","sqrt","number","elementWiseDivide","exp","divider","colwiseSum","log","kernel2","kernel3","pow","im2col","channels","kernel_h","kernel_w","pad_h","pad_w","stride_h","stride_w","maxpool","size","layers","push","forward","X","Y","reverse","getBackPropagation","propagate","loss","error","path","resultJSON","getType","weights","stringify","writeFile","console","AbstractTrainer","optimizer","iterations","learningRate","verbose","verboseStep","stepCallback","inputDataset","outputDataset","getNumberOfExamples","numBatches","ceil","cost","accuracy","batch","predictedOutput","getBatch","correctOutput","miniBatchSize","index1","colMaxCoeffIndex","index2","MiniBatchTrainer","startTime","Date","getTime","t","startIterationTime","backward","setT","optimize","endIterationTime","endTime","currentResult","iteration","AbstractOptimizer","OptimizerAdam","adam","beta1","beta2","epsilon","wCorrected","sCorrected","wCorrected2","sCorrected2","OptimizerGradientDescent","gradientDescent","matrixMultiply","matrixSum","matrixFillRandom","matrixElementWiseMultiply","matrixElementWiseDivide","matrixElementWiseAdd","matrixElementWiseSubtract","Builders","Layers","Optimizers","Trainers"],"sourceRoot":""}